   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"LSM9DS1_Driver.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	TimerId,4,4
  20              		.comm	Status,4,4
  21              		.comm	WriteTimerId,4,4
  22              		.comm	WriteTimerStatus,4,4
  23              		.comm	TimerIdReadBytes,4,4
  24              		.comm	StatusReadBytes,4,4
  25              		.comm	settings,40,4
  26              		.comm	gBias,12,4
  27              		.comm	aBias,12,4
  28              		.comm	mBias,12,4
  29              		.comm	gBiasRaw,6,4
  30              		.comm	aBiasRaw,6,4
  31              		.comm	mBiasRaw,6,4
  32              		.comm	_autoCalc,1,1
  33              		.comm	_mAddress,1,1
  34              		.comm	_xgAddress,1,1
  35              		.comm	gRes,4,4
  36              		.comm	aRes,4,4
  37              		.comm	mRes,4,4
  38              		.comm	gx,2,2
  39              		.comm	gy,2,2
  40              		.comm	gz,2,2
  41              		.comm	ax,2,2
  42              		.comm	ay,2,2
  43              		.comm	az,2,2
  44              		.comm	mx,2,2
  45              		.comm	my,2,2
  46              		.comm	mz,2,2
  47              		.comm	temperature,2,2
  48              		.global	magSensitivity
  49              		.data
  50              		.align	2
  53              	magSensitivity:
  54 0000 F7CC1239 		.word	957533431
  55 0004 240B9839 		.word	966265636
  56 0008 9F71E139 		.word	971075999
  57 000c 240B183A 		.word	974654244
  58              		.section	.text.init,"ax",%progbits
  59              		.align	2
  60              		.global	init
  61              		.thumb
  62              		.thumb_func
  64              	init:
  65              	.LFB117:
  66              		.file 1 "../LSM9DS1_Driver.c"
   1:../LSM9DS1_Driver.c **** /*
   2:../LSM9DS1_Driver.c ****  * LSM9DS1_Driver.c
   3:../LSM9DS1_Driver.c ****  *
   4:../LSM9DS1_Driver.c ****  *  Created on: 08-02-2016
   5:../LSM9DS1_Driver.c ****  *      Author: Mateusz
   6:../LSM9DS1_Driver.c ****  */
   7:../LSM9DS1_Driver.c **** #include "LSM9DS1_Driver.h"
   8:../LSM9DS1_Driver.c **** #include "LSM9DS1_Registers.h"
   9:../LSM9DS1_Driver.c **** #include "LSM9DS1_Types.h"
  10:../LSM9DS1_Driver.c **** 
  11:../LSM9DS1_Driver.c **** #include <stdint.h>
  12:../LSM9DS1_Driver.c **** #include <inttypes.h>
  13:../LSM9DS1_Driver.c **** #include <math.h>
  14:../LSM9DS1_Driver.c **** #include <stdlib.h>
  15:../LSM9DS1_Driver.c **** 
  16:../LSM9DS1_Driver.c **** float magSensitivity[4] = {0.00014, 0.00029, 0.00043, 0.00058};
  17:../LSM9DS1_Driver.c **** 
  18:../LSM9DS1_Driver.c **** void init(interface_mode interface, uint8_t xgAddr, uint8_t mAddr)
  19:../LSM9DS1_Driver.c **** {
  67              		.loc 1 19 0
  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 16
  70              		@ frame_needed = 1, uses_anonymous_args = 0
  71              		@ link register save eliminated.
  72 0000 80B4     		push	{r7}
  73              	.LCFI0:
  74              		.cfi_def_cfa_offset 4
  75              		.cfi_offset 7, -4
  76 0002 85B0     		sub	sp, sp, #20
  77              	.LCFI1:
  78              		.cfi_def_cfa_offset 24
  79 0004 00AF     		add	r7, sp, #0
  80              	.LCFI2:
  81              		.cfi_def_cfa_register 7
  82 0006 1346     		mov	r3, r2
  83 0008 0246     		mov	r2, r0
  84 000a FA71     		strb	r2, [r7, #7]
  85 000c 0A46     		mov	r2, r1
  86 000e BA71     		strb	r2, [r7, #6]
  87 0010 7B71     		strb	r3, [r7, #5]
  20:../LSM9DS1_Driver.c **** 	//measurementsLSMRead = 0;
  21:../LSM9DS1_Driver.c **** 
  22:../LSM9DS1_Driver.c **** 	settings.device.commInterface = interface;
  88              		.loc 1 22 0
  89 0012 40F20003 		movw	r3, #:lower16:settings
  90 0016 C0F20003 		movt	r3, #:upper16:settings
  91 001a FA79     		ldrb	r2, [r7, #7]
  92 001c 1A70     		strb	r2, [r3, #0]
  23:../LSM9DS1_Driver.c **** 	settings.device.agAddress = xgAddr;
  93              		.loc 1 23 0
  94 001e 40F20003 		movw	r3, #:lower16:settings
  95 0022 C0F20003 		movt	r3, #:upper16:settings
  96 0026 BA79     		ldrb	r2, [r7, #6]
  97 0028 5A70     		strb	r2, [r3, #1]
  24:../LSM9DS1_Driver.c **** 	settings.device.mAddress = mAddr;
  98              		.loc 1 24 0
  99 002a 40F20003 		movw	r3, #:lower16:settings
 100 002e C0F20003 		movt	r3, #:upper16:settings
 101 0032 7A79     		ldrb	r2, [r7, #5]
 102 0034 9A70     		strb	r2, [r3, #2]
  25:../LSM9DS1_Driver.c **** 
  26:../LSM9DS1_Driver.c **** 	settings.gyro.enabled = TRUE;
 103              		.loc 1 26 0
 104 0036 40F20003 		movw	r3, #:lower16:settings
 105 003a C0F20003 		movt	r3, #:upper16:settings
 106 003e 4FF00102 		mov	r2, #1
 107 0042 1A71     		strb	r2, [r3, #4]
  27:../LSM9DS1_Driver.c **** 	settings.gyro.enableX = TRUE;
 108              		.loc 1 27 0
 109 0044 40F20003 		movw	r3, #:lower16:settings
 110 0048 C0F20003 		movt	r3, #:upper16:settings
 111 004c 4FF00102 		mov	r2, #1
 112 0050 5A74     		strb	r2, [r3, #17]
  28:../LSM9DS1_Driver.c **** 	settings.gyro.enableY = TRUE;
 113              		.loc 1 28 0
 114 0052 40F20003 		movw	r3, #:lower16:settings
 115 0056 C0F20003 		movt	r3, #:upper16:settings
 116 005a 4FF00102 		mov	r2, #1
 117 005e 9A74     		strb	r2, [r3, #18]
  29:../LSM9DS1_Driver.c **** 	settings.gyro.enableZ = TRUE;
 118              		.loc 1 29 0
 119 0060 40F20003 		movw	r3, #:lower16:settings
 120 0064 C0F20003 		movt	r3, #:upper16:settings
 121 0068 4FF00102 		mov	r2, #1
 122 006c DA74     		strb	r2, [r3, #19]
  30:../LSM9DS1_Driver.c **** 	// gyro scale can be 245, 500, or 2000
  31:../LSM9DS1_Driver.c **** 	settings.gyro.scale = 245;
 123              		.loc 1 31 0
 124 006e 40F20003 		movw	r3, #:lower16:settings
 125 0072 C0F20003 		movt	r3, #:upper16:settings
 126 0076 4FF0F502 		mov	r2, #245
 127 007a DA80     		strh	r2, [r3, #6]	@ movhi
  32:../LSM9DS1_Driver.c **** 	// gyro sample rate: value between 1-6
  33:../LSM9DS1_Driver.c **** 	// 1 = 14.9    4 = 238
  34:../LSM9DS1_Driver.c **** 	// 2 = 59.5    5 = 476
  35:../LSM9DS1_Driver.c **** 	// 3 = 119     6 = 952
  36:../LSM9DS1_Driver.c **** 	settings.gyro.sampleRate = 3;
 128              		.loc 1 36 0
 129 007c 40F20003 		movw	r3, #:lower16:settings
 130 0080 C0F20003 		movt	r3, #:upper16:settings
 131 0084 4FF00302 		mov	r2, #3
 132 0088 1A72     		strb	r2, [r3, #8]
  37:../LSM9DS1_Driver.c **** 	// gyro cutoff frequency: value between 0-3
  38:../LSM9DS1_Driver.c **** 	// Actual value of cutoff frequency depends
  39:../LSM9DS1_Driver.c **** 	// on sample rate.
  40:../LSM9DS1_Driver.c **** 	settings.gyro.bandwidth = 0;
 133              		.loc 1 40 0
 134 008a 40F20003 		movw	r3, #:lower16:settings
 135 008e C0F20003 		movt	r3, #:upper16:settings
 136 0092 4FF00002 		mov	r2, #0
 137 0096 5A72     		strb	r2, [r3, #9]
  41:../LSM9DS1_Driver.c **** 	settings.gyro.lowPowerEnable = FALSE;
 138              		.loc 1 41 0
 139 0098 40F20003 		movw	r3, #:lower16:settings
 140 009c C0F20003 		movt	r3, #:upper16:settings
 141 00a0 4FF00002 		mov	r2, #0
 142 00a4 9A72     		strb	r2, [r3, #10]
  42:../LSM9DS1_Driver.c **** 
  43:../LSM9DS1_Driver.c **** 	settings.gyro.HPFEnable = FALSE;
 143              		.loc 1 43 0
 144 00a6 40F20003 		movw	r3, #:lower16:settings
 145 00aa C0F20003 		movt	r3, #:upper16:settings
 146 00ae 4FF00002 		mov	r2, #0
 147 00b2 DA72     		strb	r2, [r3, #11]
  44:../LSM9DS1_Driver.c **** 	// Gyro HPF cutoff frequency: value between 0-9
  45:../LSM9DS1_Driver.c **** 	// Actual value depends on sample rate. Only applies
  46:../LSM9DS1_Driver.c **** 	// if gyroHPFEnable is TRUE.
  47:../LSM9DS1_Driver.c **** 	settings.gyro.HPFCutoff = 0;
 148              		.loc 1 47 0
 149 00b4 40F20003 		movw	r3, #:lower16:settings
 150 00b8 C0F20003 		movt	r3, #:upper16:settings
 151 00bc 4FF00002 		mov	r2, #0
 152 00c0 1A73     		strb	r2, [r3, #12]
  48:../LSM9DS1_Driver.c **** 	settings.gyro.flipX = FALSE;
 153              		.loc 1 48 0
 154 00c2 40F20003 		movw	r3, #:lower16:settings
 155 00c6 C0F20003 		movt	r3, #:upper16:settings
 156 00ca 4FF00002 		mov	r2, #0
 157 00ce 5A73     		strb	r2, [r3, #13]
  49:../LSM9DS1_Driver.c **** 	settings.gyro.flipY = FALSE;
 158              		.loc 1 49 0
 159 00d0 40F20003 		movw	r3, #:lower16:settings
 160 00d4 C0F20003 		movt	r3, #:upper16:settings
 161 00d8 4FF00002 		mov	r2, #0
 162 00dc 9A73     		strb	r2, [r3, #14]
  50:../LSM9DS1_Driver.c **** 	settings.gyro.flipZ = FALSE;
 163              		.loc 1 50 0
 164 00de 40F20003 		movw	r3, #:lower16:settings
 165 00e2 C0F20003 		movt	r3, #:upper16:settings
 166 00e6 4FF00002 		mov	r2, #0
 167 00ea DA73     		strb	r2, [r3, #15]
  51:../LSM9DS1_Driver.c **** 	settings.gyro.orientation = 0;
 168              		.loc 1 51 0
 169 00ec 40F20003 		movw	r3, #:lower16:settings
 170 00f0 C0F20003 		movt	r3, #:upper16:settings
 171 00f4 4FF00002 		mov	r2, #0
 172 00f8 1A74     		strb	r2, [r3, #16]
  52:../LSM9DS1_Driver.c **** 	settings.gyro.latchInterrupt = TRUE;
 173              		.loc 1 52 0
 174 00fa 40F20003 		movw	r3, #:lower16:settings
 175 00fe C0F20003 		movt	r3, #:upper16:settings
 176 0102 4FF00102 		mov	r2, #1
 177 0106 1A75     		strb	r2, [r3, #20]
  53:../LSM9DS1_Driver.c **** 
  54:../LSM9DS1_Driver.c **** 	settings.accel.enabled = TRUE;
 178              		.loc 1 54 0
 179 0108 40F20003 		movw	r3, #:lower16:settings
 180 010c C0F20003 		movt	r3, #:upper16:settings
 181 0110 4FF00102 		mov	r2, #1
 182 0114 9A75     		strb	r2, [r3, #22]
  55:../LSM9DS1_Driver.c **** 	settings.accel.enableX = TRUE;
 183              		.loc 1 55 0
 184 0116 40F20003 		movw	r3, #:lower16:settings
 185 011a C0F20003 		movt	r3, #:upper16:settings
 186 011e 4FF00102 		mov	r2, #1
 187 0122 5A76     		strb	r2, [r3, #25]
  56:../LSM9DS1_Driver.c **** 	settings.accel.enableY = TRUE;
 188              		.loc 1 56 0
 189 0124 40F20003 		movw	r3, #:lower16:settings
 190 0128 C0F20003 		movt	r3, #:upper16:settings
 191 012c 4FF00102 		mov	r2, #1
 192 0130 9A76     		strb	r2, [r3, #26]
  57:../LSM9DS1_Driver.c **** 	settings.accel.enableZ = TRUE;
 193              		.loc 1 57 0
 194 0132 40F20003 		movw	r3, #:lower16:settings
 195 0136 C0F20003 		movt	r3, #:upper16:settings
 196 013a 4FF00102 		mov	r2, #1
 197 013e DA76     		strb	r2, [r3, #27]
  58:../LSM9DS1_Driver.c **** 	// accel scale can be 2, 4, 8, or 16
  59:../LSM9DS1_Driver.c **** 	settings.accel.scale = 2;
 198              		.loc 1 59 0
 199 0140 40F20003 		movw	r3, #:lower16:settings
 200 0144 C0F20003 		movt	r3, #:upper16:settings
 201 0148 4FF00202 		mov	r2, #2
 202 014c DA75     		strb	r2, [r3, #23]
  60:../LSM9DS1_Driver.c **** 	// accel sample rate can be 1-6
  61:../LSM9DS1_Driver.c **** 	// 1 = 10 Hz    4 = 238 Hz
  62:../LSM9DS1_Driver.c **** 	// 2 = 50 Hz    5 = 476 Hz
  63:../LSM9DS1_Driver.c **** 	// 3 = 119 Hz   6 = 952 Hz
  64:../LSM9DS1_Driver.c **** 	settings.accel.sampleRate = 6;
 203              		.loc 1 64 0
 204 014e 40F20003 		movw	r3, #:lower16:settings
 205 0152 C0F20003 		movt	r3, #:upper16:settings
 206 0156 4FF00602 		mov	r2, #6
 207 015a 1A76     		strb	r2, [r3, #24]
  65:../LSM9DS1_Driver.c **** 	// Accel cutoff freqeuncy can be any value between -1 - 3.
  66:../LSM9DS1_Driver.c **** 	// -1 = bandwidth determined by sample rate
  67:../LSM9DS1_Driver.c **** 	// 0 = 408 Hz   2 = 105 Hz
  68:../LSM9DS1_Driver.c **** 	// 1 = 211 Hz   3 = 50 Hz
  69:../LSM9DS1_Driver.c **** 	settings.accel.bandwidth = -1;
 208              		.loc 1 69 0
 209 015c 40F20003 		movw	r3, #:lower16:settings
 210 0160 C0F20003 		movt	r3, #:upper16:settings
 211 0164 4FF0FF02 		mov	r2, #255
 212 0168 1A77     		strb	r2, [r3, #28]
  70:../LSM9DS1_Driver.c **** 	settings.accel.highResEnable = FALSE;
 213              		.loc 1 70 0
 214 016a 40F20003 		movw	r3, #:lower16:settings
 215 016e C0F20003 		movt	r3, #:upper16:settings
 216 0172 4FF00002 		mov	r2, #0
 217 0176 5A77     		strb	r2, [r3, #29]
  71:../LSM9DS1_Driver.c **** 	// accelHighResBandwidth can be any value between 0-3
  72:../LSM9DS1_Driver.c **** 	// LP cutoff is set to a factor of sample rate
  73:../LSM9DS1_Driver.c **** 	// 0 = ODR/50    2 = ODR/9
  74:../LSM9DS1_Driver.c **** 	// 1 = ODR/100   3 = ODR/400
  75:../LSM9DS1_Driver.c **** 	settings.accel.highResBandwidth = 0;
 218              		.loc 1 75 0
 219 0178 40F20003 		movw	r3, #:lower16:settings
 220 017c C0F20003 		movt	r3, #:upper16:settings
 221 0180 4FF00002 		mov	r2, #0
 222 0184 9A77     		strb	r2, [r3, #30]
  76:../LSM9DS1_Driver.c **** 
  77:../LSM9DS1_Driver.c **** 	settings.mag.enabled = TRUE;
 223              		.loc 1 77 0
 224 0186 40F20003 		movw	r3, #:lower16:settings
 225 018a C0F20003 		movt	r3, #:upper16:settings
 226 018e 4FF00102 		mov	r2, #1
 227 0192 DA77     		strb	r2, [r3, #31]
  78:../LSM9DS1_Driver.c **** 	// mag scale can be 4, 8, 12, or 16
  79:../LSM9DS1_Driver.c **** 	settings.mag.scale = 4;
 228              		.loc 1 79 0
 229 0194 40F20003 		movw	r3, #:lower16:settings
 230 0198 C0F20003 		movt	r3, #:upper16:settings
 231 019c 4FF00402 		mov	r2, #4
 232 01a0 83F82020 		strb	r2, [r3, #32]
  80:../LSM9DS1_Driver.c **** 	// mag data rate can be 0-7
  81:../LSM9DS1_Driver.c **** 	// 0 = 0.625 Hz  4 = 10 Hz
  82:../LSM9DS1_Driver.c **** 	// 1 = 1.25 Hz   5 = 20 Hz
  83:../LSM9DS1_Driver.c **** 	// 2 = 2.5 Hz    6 = 40 Hz
  84:../LSM9DS1_Driver.c **** 	// 3 = 5 Hz      7 = 80 Hz
  85:../LSM9DS1_Driver.c **** 	settings.mag.sampleRate = 7;
 233              		.loc 1 85 0
 234 01a4 40F20003 		movw	r3, #:lower16:settings
 235 01a8 C0F20003 		movt	r3, #:upper16:settings
 236 01ac 4FF00702 		mov	r2, #7
 237 01b0 83F82120 		strb	r2, [r3, #33]
  86:../LSM9DS1_Driver.c **** 	settings.mag.tempCompensationEnable = FALSE;
 238              		.loc 1 86 0
 239 01b4 40F20003 		movw	r3, #:lower16:settings
 240 01b8 C0F20003 		movt	r3, #:upper16:settings
 241 01bc 4FF00002 		mov	r2, #0
 242 01c0 83F82220 		strb	r2, [r3, #34]
  87:../LSM9DS1_Driver.c **** 	// magPerformance can be any value between 0-3
  88:../LSM9DS1_Driver.c **** 	// 0 = Low power mode      2 = high performance
  89:../LSM9DS1_Driver.c **** 	// 1 = medium performance  3 = ultra-high performance
  90:../LSM9DS1_Driver.c **** 	settings.mag.XYPerformance = 3;
 243              		.loc 1 90 0
 244 01c4 40F20003 		movw	r3, #:lower16:settings
 245 01c8 C0F20003 		movt	r3, #:upper16:settings
 246 01cc 4FF00302 		mov	r2, #3
 247 01d0 83F82320 		strb	r2, [r3, #35]
  91:../LSM9DS1_Driver.c **** 	settings.mag.ZPerformance = 3;
 248              		.loc 1 91 0
 249 01d4 40F20003 		movw	r3, #:lower16:settings
 250 01d8 C0F20003 		movt	r3, #:upper16:settings
 251 01dc 4FF00302 		mov	r2, #3
 252 01e0 83F82420 		strb	r2, [r3, #36]
  92:../LSM9DS1_Driver.c **** 	settings.mag.lowPowerEnable = FALSE;
 253              		.loc 1 92 0
 254 01e4 40F20003 		movw	r3, #:lower16:settings
 255 01e8 C0F20003 		movt	r3, #:upper16:settings
 256 01ec 4FF00002 		mov	r2, #0
 257 01f0 83F82520 		strb	r2, [r3, #37]
  93:../LSM9DS1_Driver.c **** 	// magOperatingMode can be 0-2
  94:../LSM9DS1_Driver.c **** 	// 0 = continuous conversion
  95:../LSM9DS1_Driver.c **** 	// 1 = single-conversion
  96:../LSM9DS1_Driver.c **** 	// 2 = power down
  97:../LSM9DS1_Driver.c **** 	settings.mag.operatingMode = 0;
 258              		.loc 1 97 0
 259 01f4 40F20003 		movw	r3, #:lower16:settings
 260 01f8 C0F20003 		movt	r3, #:upper16:settings
 261 01fc 4FF00002 		mov	r2, #0
 262 0200 83F82620 		strb	r2, [r3, #38]
  98:../LSM9DS1_Driver.c **** 
  99:../LSM9DS1_Driver.c **** 	settings.temp.enabled = TRUE;
 263              		.loc 1 99 0
 264 0204 40F20003 		movw	r3, #:lower16:settings
 265 0208 C0F20003 		movt	r3, #:upper16:settings
 266 020c 4FF00102 		mov	r2, #1
 267 0210 83F82720 		strb	r2, [r3, #39]
 268              	.LBB2:
 100:../LSM9DS1_Driver.c **** 
 101:../LSM9DS1_Driver.c **** 	for (int i=0; i<3; i++)
 269              		.loc 1 101 0
 270 0214 4FF00003 		mov	r3, #0
 271 0218 FB60     		str	r3, [r7, #12]
 272 021a 3FE0     		b	.L2
 273              	.L3:
 102:../LSM9DS1_Driver.c **** 	{
 103:../LSM9DS1_Driver.c **** 		gBias[i] = 0;
 274              		.loc 1 103 0 discriminator 2
 275 021c 40F20003 		movw	r3, #:lower16:gBias
 276 0220 C0F20003 		movt	r3, #:upper16:gBias
 277 0224 FA68     		ldr	r2, [r7, #12]
 278 0226 4FEA8202 		lsl	r2, r2, #2
 279 022a 9B18     		adds	r3, r3, r2
 280 022c 4FF00002 		mov	r2, #0
 281 0230 1A60     		str	r2, [r3, #0]	@ float
 104:../LSM9DS1_Driver.c **** 		aBias[i] = 0;
 282              		.loc 1 104 0 discriminator 2
 283 0232 40F20003 		movw	r3, #:lower16:aBias
 284 0236 C0F20003 		movt	r3, #:upper16:aBias
 285 023a FA68     		ldr	r2, [r7, #12]
 286 023c 4FEA8202 		lsl	r2, r2, #2
 287 0240 9B18     		adds	r3, r3, r2
 288 0242 4FF00002 		mov	r2, #0
 289 0246 1A60     		str	r2, [r3, #0]	@ float
 105:../LSM9DS1_Driver.c **** 		mBias[i] = 0;
 290              		.loc 1 105 0 discriminator 2
 291 0248 40F20003 		movw	r3, #:lower16:mBias
 292 024c C0F20003 		movt	r3, #:upper16:mBias
 293 0250 FA68     		ldr	r2, [r7, #12]
 294 0252 4FEA8202 		lsl	r2, r2, #2
 295 0256 9B18     		adds	r3, r3, r2
 296 0258 4FF00002 		mov	r2, #0
 297 025c 1A60     		str	r2, [r3, #0]	@ float
 106:../LSM9DS1_Driver.c **** 		gBiasRaw[i] = 0;
 298              		.loc 1 106 0 discriminator 2
 299 025e 40F20003 		movw	r3, #:lower16:gBiasRaw
 300 0262 C0F20003 		movt	r3, #:upper16:gBiasRaw
 301 0266 FA68     		ldr	r2, [r7, #12]
 302 0268 4FF00001 		mov	r1, #0
 303 026c 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 107:../LSM9DS1_Driver.c **** 		aBiasRaw[i] = 0;
 304              		.loc 1 107 0 discriminator 2
 305 0270 40F20003 		movw	r3, #:lower16:aBiasRaw
 306 0274 C0F20003 		movt	r3, #:upper16:aBiasRaw
 307 0278 FA68     		ldr	r2, [r7, #12]
 308 027a 4FF00001 		mov	r1, #0
 309 027e 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 108:../LSM9DS1_Driver.c **** 		mBiasRaw[i] = 0;
 310              		.loc 1 108 0 discriminator 2
 311 0282 40F20003 		movw	r3, #:lower16:mBiasRaw
 312 0286 C0F20003 		movt	r3, #:upper16:mBiasRaw
 313 028a FA68     		ldr	r2, [r7, #12]
 314 028c 4FF00001 		mov	r1, #0
 315 0290 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 101:../LSM9DS1_Driver.c **** 	for (int i=0; i<3; i++)
 316              		.loc 1 101 0 discriminator 2
 317 0294 FB68     		ldr	r3, [r7, #12]
 318 0296 03F10103 		add	r3, r3, #1
 319 029a FB60     		str	r3, [r7, #12]
 320              	.L2:
 101:../LSM9DS1_Driver.c **** 	for (int i=0; i<3; i++)
 321              		.loc 1 101 0 is_stmt 0 discriminator 1
 322 029c FB68     		ldr	r3, [r7, #12]
 323 029e 022B     		cmp	r3, #2
 324 02a0 BCDD     		ble	.L3
 325              	.LBE2:
 109:../LSM9DS1_Driver.c **** 	}
 110:../LSM9DS1_Driver.c **** 
 111:../LSM9DS1_Driver.c **** 	_autoCalc = FALSE;
 326              		.loc 1 111 0 is_stmt 1
 327 02a2 40F20003 		movw	r3, #:lower16:_autoCalc
 328 02a6 C0F20003 		movt	r3, #:upper16:_autoCalc
 329 02aa 4FF00002 		mov	r2, #0
 330 02ae 1A70     		strb	r2, [r3, #0]
 112:../LSM9DS1_Driver.c **** }
 331              		.loc 1 112 0
 332 02b0 07F11407 		add	r7, r7, #20
 333 02b4 BD46     		mov	sp, r7
 334 02b6 80BC     		pop	{r7}
 335 02b8 7047     		bx	lr
 336              		.cfi_endproc
 337              	.LFE117:
 339 02ba 00BF     		.section	.text.begin,"ax",%progbits
 340              		.align	2
 341              		.global	begin
 342              		.thumb
 343              		.thumb_func
 345              	begin:
 346              	.LFB118:
 113:../LSM9DS1_Driver.c **** 
 114:../LSM9DS1_Driver.c **** uint16_t begin(void)
 115:../LSM9DS1_Driver.c **** {
 347              		.loc 1 115 0
 348              		.cfi_startproc
 349              		@ args = 0, pretend = 0, frame = 8
 350              		@ frame_needed = 1, uses_anonymous_args = 0
 351 0000 80B5     		push	{r7, lr}
 352              	.LCFI3:
 353              		.cfi_def_cfa_offset 8
 354              		.cfi_offset 7, -8
 355              		.cfi_offset 14, -4
 356 0002 82B0     		sub	sp, sp, #8
 357              	.LCFI4:
 358              		.cfi_def_cfa_offset 16
 359 0004 00AF     		add	r7, sp, #0
 360              	.LCFI5:
 361              		.cfi_def_cfa_register 7
 116:../LSM9DS1_Driver.c **** 	//! Todo: don't use _xgAddress or _mAddress, duplicating memory
 117:../LSM9DS1_Driver.c **** 	_xgAddress = settings.device.agAddress;
 362              		.loc 1 117 0
 363 0006 40F20003 		movw	r3, #:lower16:settings
 364 000a C0F20003 		movt	r3, #:upper16:settings
 365 000e 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 366 0010 40F20003 		movw	r3, #:lower16:_xgAddress
 367 0014 C0F20003 		movt	r3, #:upper16:_xgAddress
 368 0018 1A70     		strb	r2, [r3, #0]
 118:../LSM9DS1_Driver.c **** 	_mAddress = settings.device.mAddress;
 369              		.loc 1 118 0
 370 001a 40F20003 		movw	r3, #:lower16:settings
 371 001e C0F20003 		movt	r3, #:upper16:settings
 372 0022 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 373 0024 40F20003 		movw	r3, #:lower16:_mAddress
 374 0028 C0F20003 		movt	r3, #:upper16:_mAddress
 375 002c 1A70     		strb	r2, [r3, #0]
 119:../LSM9DS1_Driver.c **** 
 120:../LSM9DS1_Driver.c **** 	constrainScales();
 376              		.loc 1 120 0
 377 002e FFF7FEFF 		bl	constrainScales
 121:../LSM9DS1_Driver.c **** 
 122:../LSM9DS1_Driver.c **** 	// Once we have the scale values, we can calculate the resolution
 123:../LSM9DS1_Driver.c **** 	// of each sensor. That's what these functions are for. One for each sensor
 124:../LSM9DS1_Driver.c **** 	calcgRes(); // Calculate DPS / ADC tick, stored in gRes variable
 378              		.loc 1 124 0
 379 0032 FFF7FEFF 		bl	calcgRes
 125:../LSM9DS1_Driver.c **** 	calcmRes(); // Calculate Gs / ADC tick, stored in mRes variable
 380              		.loc 1 125 0
 381 0036 FFF7FEFF 		bl	calcmRes
 126:../LSM9DS1_Driver.c **** 	calcaRes(); // Calculate g / ADC tick, stored in aRes variable
 382              		.loc 1 126 0
 383 003a FFF7FEFF 		bl	calcaRes
 127:../LSM9DS1_Driver.c **** 
 128:../LSM9DS1_Driver.c **** 	if (settings.device.commInterface == IMU_MODE_I2C)	// If we're using I2C
 384              		.loc 1 128 0
 385 003e 40F20003 		movw	r3, #:lower16:settings
 386 0042 C0F20003 		movt	r3, #:upper16:settings
 387 0046 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 388 0048 012B     		cmp	r3, #1
 389 004a 02D1     		bne	.L5
 129:../LSM9DS1_Driver.c **** 		initI2C();	// Initialize I2C
 390              		.loc 1 129 0
 391 004c FFF7FEFF 		bl	initI2C
 392 0050 08E0     		b	.L6
 393              	.L5:
 130:../LSM9DS1_Driver.c **** 	else if (settings.device.commInterface == IMU_MODE_SPI) 	// else, if we're using SPI
 394              		.loc 1 130 0
 395 0052 40F20003 		movw	r3, #:lower16:settings
 396 0056 C0F20003 		movt	r3, #:upper16:settings
 397 005a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 398 005c 002B     		cmp	r3, #0
 399 005e 01D1     		bne	.L6
 131:../LSM9DS1_Driver.c **** 		initSPI();	// Initialize SPI
 400              		.loc 1 131 0
 401 0060 FFF7FEFF 		bl	initSPI
 402              	.L6:
 132:../LSM9DS1_Driver.c **** 
 133:../LSM9DS1_Driver.c **** 	// To verify communication, we can read from the WHO_AM_I register of
 134:../LSM9DS1_Driver.c **** 	// each device. Store those in a variable so we can return them.
 135:../LSM9DS1_Driver.c **** 	uint8_t mTest = mReadByte(WHO_AM_I_M);		// Read the gyro WHO_AM_I
 403              		.loc 1 135 0
 404 0064 4FF00F00 		mov	r0, #15
 405 0068 FFF7FEFF 		bl	mReadByte
 406 006c 0346     		mov	r3, r0
 407 006e FB71     		strb	r3, [r7, #7]
 136:../LSM9DS1_Driver.c **** 	uint8_t xgTest = xgReadByte(WHO_AM_I_XG);	// Read the accel/mag WHO_AM_I
 408              		.loc 1 136 0
 409 0070 4FF00F00 		mov	r0, #15
 410 0074 FFF7FEFF 		bl	xgReadByte
 411 0078 0346     		mov	r3, r0
 412 007a BB71     		strb	r3, [r7, #6]
 137:../LSM9DS1_Driver.c **** 
 138:../LSM9DS1_Driver.c **** 	uint16_t whoAmICombined = (xgTest << 8) | mTest;
 413              		.loc 1 138 0
 414 007c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 415 007e 4FEA0323 		lsl	r3, r3, #8
 416 0082 9AB2     		uxth	r2, r3
 417 0084 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 418 0086 9BB2     		uxth	r3, r3
 419 0088 1343     		orrs	r3, r3, r2
 420 008a 9BB2     		uxth	r3, r3
 421 008c BB80     		strh	r3, [r7, #4]	@ movhi
 139:../LSM9DS1_Driver.c **** 
 140:../LSM9DS1_Driver.c **** 	if (whoAmICombined != ((WHO_AM_I_AG_RSP << 8) | WHO_AM_I_M_RSP))
 422              		.loc 1 140 0
 423 008e BA88     		ldrh	r2, [r7, #4]
 424 0090 46F63D03 		movw	r3, #26685
 425 0094 9A42     		cmp	r2, r3
 426 0096 02D0     		beq	.L7
 141:../LSM9DS1_Driver.c **** 	{
 142:../LSM9DS1_Driver.c **** 		return 0;
 427              		.loc 1 142 0
 428 0098 4FF00003 		mov	r3, #0
 429 009c 06E0     		b	.L8
 430              	.L7:
 143:../LSM9DS1_Driver.c **** 	}
 144:../LSM9DS1_Driver.c **** 
 145:../LSM9DS1_Driver.c **** 	// Gyro initialization stuff:
 146:../LSM9DS1_Driver.c **** 	initGyro();	// This will "turn on" the gyro. Setting up interrupts, etc.
 431              		.loc 1 146 0
 432 009e FFF7FEFF 		bl	initGyro
 147:../LSM9DS1_Driver.c **** 
 148:../LSM9DS1_Driver.c **** 	// Accelerometer initialization stuff:
 149:../LSM9DS1_Driver.c **** 	initAccel(); // "Turn on" all axes of the accel. Set up interrupts, etc.
 433              		.loc 1 149 0
 434 00a2 FFF7FEFF 		bl	initAccel
 150:../LSM9DS1_Driver.c **** 
 151:../LSM9DS1_Driver.c **** 	// Magnetometer initialization stuff:
 152:../LSM9DS1_Driver.c **** 	initMag(); // "Turn on" all axes of the mag. Set up interrupts, etc.
 435              		.loc 1 152 0
 436 00a6 FFF7FEFF 		bl	initMag
 153:../LSM9DS1_Driver.c **** 
 154:../LSM9DS1_Driver.c **** 	// Once everything is initialized, return the WHO_AM_I registers we read:
 155:../LSM9DS1_Driver.c **** 	return whoAmICombined;
 437              		.loc 1 155 0
 438 00aa BB88     		ldrh	r3, [r7, #4]
 439              	.L8:
 156:../LSM9DS1_Driver.c **** 
 157:../LSM9DS1_Driver.c **** }
 440              		.loc 1 157 0
 441 00ac 1846     		mov	r0, r3
 442 00ae 07F10807 		add	r7, r7, #8
 443 00b2 BD46     		mov	sp, r7
 444 00b4 80BD     		pop	{r7, pc}
 445              		.cfi_endproc
 446              	.LFE118:
 448 00b6 00BF     		.section	.text.constrainScales,"ax",%progbits
 449              		.align	2
 450              		.global	constrainScales
 451              		.thumb
 452              		.thumb_func
 454              	constrainScales:
 455              	.LFB119:
 158:../LSM9DS1_Driver.c **** 
 159:../LSM9DS1_Driver.c **** void constrainScales()
 160:../LSM9DS1_Driver.c **** {
 456              		.loc 1 160 0
 457              		.cfi_startproc
 458              		@ args = 0, pretend = 0, frame = 0
 459              		@ frame_needed = 1, uses_anonymous_args = 0
 460              		@ link register save eliminated.
 461 0000 80B4     		push	{r7}
 462              	.LCFI6:
 463              		.cfi_def_cfa_offset 4
 464              		.cfi_offset 7, -4
 465 0002 00AF     		add	r7, sp, #0
 466              	.LCFI7:
 467              		.cfi_def_cfa_register 7
 161:../LSM9DS1_Driver.c **** 	if ((settings.gyro.scale != 245) && (settings.gyro.scale != 500) && (settings.gyro.scale != 2000))
 468              		.loc 1 161 0
 469 0004 40F20003 		movw	r3, #:lower16:settings
 470 0008 C0F20003 		movt	r3, #:upper16:settings
 471 000c DB88     		ldrh	r3, [r3, #6]
 472 000e F52B     		cmp	r3, #245
 473 0010 16D0     		beq	.L10
 474              		.loc 1 161 0 is_stmt 0 discriminator 1
 475 0012 40F20003 		movw	r3, #:lower16:settings
 476 0016 C0F20003 		movt	r3, #:upper16:settings
 477 001a DB88     		ldrh	r3, [r3, #6]
 478 001c B3F5FA7F 		cmp	r3, #500
 479 0020 0ED0     		beq	.L10
 480 0022 40F20003 		movw	r3, #:lower16:settings
 481 0026 C0F20003 		movt	r3, #:upper16:settings
 482 002a DB88     		ldrh	r3, [r3, #6]
 483 002c B3F5FA6F 		cmp	r3, #2000
 484 0030 06D0     		beq	.L10
 162:../LSM9DS1_Driver.c **** 	{
 163:../LSM9DS1_Driver.c **** 		settings.gyro.scale = 245;
 485              		.loc 1 163 0 is_stmt 1
 486 0032 40F20003 		movw	r3, #:lower16:settings
 487 0036 C0F20003 		movt	r3, #:upper16:settings
 488 003a 4FF0F502 		mov	r2, #245
 489 003e DA80     		strh	r2, [r3, #6]	@ movhi
 490              	.L10:
 164:../LSM9DS1_Driver.c **** 	}
 165:../LSM9DS1_Driver.c **** 
 166:../LSM9DS1_Driver.c **** 	if ((settings.accel.scale != 2) && (settings.accel.scale != 4) && (settings.accel.scale != 8) && (
 491              		.loc 1 166 0
 492 0040 40F20003 		movw	r3, #:lower16:settings
 493 0044 C0F20003 		movt	r3, #:upper16:settings
 494 0048 DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
 495 004a 022B     		cmp	r3, #2
 496 004c 1BD0     		beq	.L11
 497              		.loc 1 166 0 is_stmt 0 discriminator 1
 498 004e 40F20003 		movw	r3, #:lower16:settings
 499 0052 C0F20003 		movt	r3, #:upper16:settings
 500 0056 DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
 501 0058 042B     		cmp	r3, #4
 502 005a 14D0     		beq	.L11
 503 005c 40F20003 		movw	r3, #:lower16:settings
 504 0060 C0F20003 		movt	r3, #:upper16:settings
 505 0064 DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
 506 0066 082B     		cmp	r3, #8
 507 0068 0DD0     		beq	.L11
 508 006a 40F20003 		movw	r3, #:lower16:settings
 509 006e C0F20003 		movt	r3, #:upper16:settings
 510 0072 DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
 511 0074 102B     		cmp	r3, #16
 512 0076 06D0     		beq	.L11
 167:../LSM9DS1_Driver.c **** 	{
 168:../LSM9DS1_Driver.c **** 		settings.accel.scale = 2;
 513              		.loc 1 168 0 is_stmt 1
 514 0078 40F20003 		movw	r3, #:lower16:settings
 515 007c C0F20003 		movt	r3, #:upper16:settings
 516 0080 4FF00202 		mov	r2, #2
 517 0084 DA75     		strb	r2, [r3, #23]
 518              	.L11:
 169:../LSM9DS1_Driver.c **** 	}
 170:../LSM9DS1_Driver.c **** 
 171:../LSM9DS1_Driver.c **** 	if ((settings.mag.scale != 4) && (settings.mag.scale != 8) && (settings.mag.scale != 12) && (setti
 519              		.loc 1 171 0
 520 0086 40F20003 		movw	r3, #:lower16:settings
 521 008a C0F20003 		movt	r3, #:upper16:settings
 522 008e 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 523 0092 042B     		cmp	r3, #4
 524 0094 1FD0     		beq	.L9
 525              		.loc 1 171 0 is_stmt 0 discriminator 1
 526 0096 40F20003 		movw	r3, #:lower16:settings
 527 009a C0F20003 		movt	r3, #:upper16:settings
 528 009e 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 529 00a2 082B     		cmp	r3, #8
 530 00a4 17D0     		beq	.L9
 531 00a6 40F20003 		movw	r3, #:lower16:settings
 532 00aa C0F20003 		movt	r3, #:upper16:settings
 533 00ae 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 534 00b2 0C2B     		cmp	r3, #12
 535 00b4 0FD0     		beq	.L9
 536 00b6 40F20003 		movw	r3, #:lower16:settings
 537 00ba C0F20003 		movt	r3, #:upper16:settings
 538 00be 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 539 00c2 102B     		cmp	r3, #16
 540 00c4 07D0     		beq	.L9
 172:../LSM9DS1_Driver.c **** 	{
 173:../LSM9DS1_Driver.c **** 		settings.mag.scale = 4;
 541              		.loc 1 173 0 is_stmt 1
 542 00c6 40F20003 		movw	r3, #:lower16:settings
 543 00ca C0F20003 		movt	r3, #:upper16:settings
 544 00ce 4FF00402 		mov	r2, #4
 545 00d2 83F82020 		strb	r2, [r3, #32]
 546              	.L9:
 174:../LSM9DS1_Driver.c **** 	}
 175:../LSM9DS1_Driver.c **** }
 547              		.loc 1 175 0
 548 00d6 BD46     		mov	sp, r7
 549 00d8 80BC     		pop	{r7}
 550 00da 7047     		bx	lr
 551              		.cfi_endproc
 552              	.LFE119:
 554              		.section	.text.initI2C,"ax",%progbits
 555              		.align	2
 556              		.global	initI2C
 557              		.thumb
 558              		.thumb_func
 560              	initI2C:
 561              	.LFB120:
 176:../LSM9DS1_Driver.c **** 
 177:../LSM9DS1_Driver.c **** 
 178:../LSM9DS1_Driver.c **** void initI2C(void)
 179:../LSM9DS1_Driver.c **** {
 562              		.loc 1 179 0
 563              		.cfi_startproc
 564              		@ args = 0, pretend = 0, frame = 0
 565              		@ frame_needed = 1, uses_anonymous_args = 0
 566              		@ link register save eliminated.
 567 0000 80B4     		push	{r7}
 568              	.LCFI8:
 569              		.cfi_def_cfa_offset 4
 570              		.cfi_offset 7, -4
 571 0002 00AF     		add	r7, sp, #0
 572              	.LCFI9:
 573              		.cfi_def_cfa_register 7
 180:../LSM9DS1_Driver.c **** 	;
 181:../LSM9DS1_Driver.c **** }
 574              		.loc 1 181 0
 575 0004 BD46     		mov	sp, r7
 576 0006 80BC     		pop	{r7}
 577 0008 7047     		bx	lr
 578              		.cfi_endproc
 579              	.LFE120:
 581 000a 00BF     		.section	.text.initSPI,"ax",%progbits
 582              		.align	2
 583              		.global	initSPI
 584              		.thumb
 585              		.thumb_func
 587              	initSPI:
 588              	.LFB121:
 182:../LSM9DS1_Driver.c **** 
 183:../LSM9DS1_Driver.c **** void initSPI(void)
 184:../LSM9DS1_Driver.c **** {
 589              		.loc 1 184 0
 590              		.cfi_startproc
 591              		@ args = 0, pretend = 0, frame = 0
 592              		@ frame_needed = 1, uses_anonymous_args = 0
 593              		@ link register save eliminated.
 594 0000 80B4     		push	{r7}
 595              	.LCFI10:
 596              		.cfi_def_cfa_offset 4
 597              		.cfi_offset 7, -4
 598 0002 00AF     		add	r7, sp, #0
 599              	.LCFI11:
 600              		.cfi_def_cfa_register 7
 185:../LSM9DS1_Driver.c **** 	;
 186:../LSM9DS1_Driver.c **** }
 601              		.loc 1 186 0
 602 0004 BD46     		mov	sp, r7
 603 0006 80BC     		pop	{r7}
 604 0008 7047     		bx	lr
 605              		.cfi_endproc
 606              	.LFE121:
 608 000a 00BF     		.section	.text.calcgRes,"ax",%progbits
 609              		.align	2
 610              		.global	calcgRes
 611              		.thumb
 612              		.thumb_func
 614              	calcgRes:
 615              	.LFB122:
 187:../LSM9DS1_Driver.c **** 
 188:../LSM9DS1_Driver.c **** void calcgRes()
 189:../LSM9DS1_Driver.c **** {
 616              		.loc 1 189 0
 617              		.cfi_startproc
 618              		@ args = 0, pretend = 0, frame = 0
 619              		@ frame_needed = 1, uses_anonymous_args = 0
 620              		@ link register save eliminated.
 621 0000 80B4     		push	{r7}
 622              	.LCFI12:
 623              		.cfi_def_cfa_offset 4
 624              		.cfi_offset 7, -4
 625 0002 00AF     		add	r7, sp, #0
 626              	.LCFI13:
 627              		.cfi_def_cfa_register 7
 190:../LSM9DS1_Driver.c **** 	gRes = ((float) settings.gyro.scale) / 32768.0;
 628              		.loc 1 190 0
 629 0004 40F20003 		movw	r3, #:lower16:settings
 630 0008 C0F20003 		movt	r3, #:upper16:settings
 631 000c DB88     		ldrh	r3, [r3, #6]
 632 000e 07EE903A 		fmsr	s15, r3	@ int
 633 0012 B8EE677A 		fuitos	s14, s15
 634 0016 DFED067A 		flds	s15, .L16
 635 001a C7EE277A 		fdivs	s15, s14, s15
 636 001e 40F20003 		movw	r3, #:lower16:gRes
 637 0022 C0F20003 		movt	r3, #:upper16:gRes
 638 0026 C3ED007A 		fsts	s15, [r3, #0]
 191:../LSM9DS1_Driver.c **** }
 639              		.loc 1 191 0
 640 002a BD46     		mov	sp, r7
 641 002c 80BC     		pop	{r7}
 642 002e 7047     		bx	lr
 643              	.L17:
 644              		.align	2
 645              	.L16:
 646 0030 00000047 		.word	1191182336
 647              		.cfi_endproc
 648              	.LFE122:
 650              		.section	.text.calcaRes,"ax",%progbits
 651              		.align	2
 652              		.global	calcaRes
 653              		.thumb
 654              		.thumb_func
 656              	calcaRes:
 657              	.LFB123:
 192:../LSM9DS1_Driver.c **** 
 193:../LSM9DS1_Driver.c **** void calcaRes()
 194:../LSM9DS1_Driver.c **** {
 658              		.loc 1 194 0
 659              		.cfi_startproc
 660              		@ args = 0, pretend = 0, frame = 0
 661              		@ frame_needed = 1, uses_anonymous_args = 0
 662              		@ link register save eliminated.
 663 0000 80B4     		push	{r7}
 664              	.LCFI14:
 665              		.cfi_def_cfa_offset 4
 666              		.cfi_offset 7, -4
 667 0002 00AF     		add	r7, sp, #0
 668              	.LCFI15:
 669              		.cfi_def_cfa_register 7
 195:../LSM9DS1_Driver.c **** 	aRes = ((float) settings.accel.scale) / 32768.0;
 670              		.loc 1 195 0
 671 0004 40F20003 		movw	r3, #:lower16:settings
 672 0008 C0F20003 		movt	r3, #:upper16:settings
 673 000c DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
 674 000e 07EE903A 		fmsr	s15, r3	@ int
 675 0012 B8EE677A 		fuitos	s14, s15
 676 0016 DFED067A 		flds	s15, .L19
 677 001a C7EE277A 		fdivs	s15, s14, s15
 678 001e 40F20003 		movw	r3, #:lower16:aRes
 679 0022 C0F20003 		movt	r3, #:upper16:aRes
 680 0026 C3ED007A 		fsts	s15, [r3, #0]
 196:../LSM9DS1_Driver.c **** }
 681              		.loc 1 196 0
 682 002a BD46     		mov	sp, r7
 683 002c 80BC     		pop	{r7}
 684 002e 7047     		bx	lr
 685              	.L20:
 686              		.align	2
 687              	.L19:
 688 0030 00000047 		.word	1191182336
 689              		.cfi_endproc
 690              	.LFE123:
 692              		.section	.text.calcmRes,"ax",%progbits
 693              		.align	2
 694              		.global	calcmRes
 695              		.thumb
 696              		.thumb_func
 698              	calcmRes:
 699              	.LFB124:
 197:../LSM9DS1_Driver.c **** 
 198:../LSM9DS1_Driver.c **** 
 199:../LSM9DS1_Driver.c **** void calcmRes()
 200:../LSM9DS1_Driver.c **** {
 700              		.loc 1 200 0
 701              		.cfi_startproc
 702              		@ args = 0, pretend = 0, frame = 0
 703              		@ frame_needed = 1, uses_anonymous_args = 0
 704              		@ link register save eliminated.
 705 0000 80B4     		push	{r7}
 706              	.LCFI16:
 707              		.cfi_def_cfa_offset 4
 708              		.cfi_offset 7, -4
 709 0002 00AF     		add	r7, sp, #0
 710              	.LCFI17:
 711              		.cfi_def_cfa_register 7
 201:../LSM9DS1_Driver.c **** 	//mRes = ((float) settings.mag.scale) / 32768.0;
 202:../LSM9DS1_Driver.c **** 	switch (settings.mag.scale)
 712              		.loc 1 202 0
 713 0004 40F20003 		movw	r3, #:lower16:settings
 714 0008 C0F20003 		movt	r3, #:upper16:settings
 715 000c 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 716 0010 A3F10403 		sub	r3, r3, #4
 717 0014 0C2B     		cmp	r3, #12
 718 0016 49D8     		bhi	.L21
 719 0018 01A2     		adr	r2, .L27
 720 001a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 721 001e 00BF     		.align	2
 722              	.L27:
 723 0020 55000000 		.word	.L23+1
 724 0024 AD000000 		.word	.L21+1
 725 0028 AD000000 		.word	.L21+1
 726 002c AD000000 		.word	.L21+1
 727 0030 6B000000 		.word	.L24+1
 728 0034 AD000000 		.word	.L21+1
 729 0038 AD000000 		.word	.L21+1
 730 003c AD000000 		.word	.L21+1
 731 0040 81000000 		.word	.L25+1
 732 0044 AD000000 		.word	.L21+1
 733 0048 AD000000 		.word	.L21+1
 734 004c AD000000 		.word	.L21+1
 735 0050 97000000 		.word	.L26+1
 736              	.L23:
 203:../LSM9DS1_Driver.c **** 	{
 204:../LSM9DS1_Driver.c **** 		case 4:
 205:../LSM9DS1_Driver.c **** 			mRes = magSensitivity[0];
 737              		.loc 1 205 0
 738 0054 40F20003 		movw	r3, #:lower16:magSensitivity
 739 0058 C0F20003 		movt	r3, #:upper16:magSensitivity
 740 005c 1A68     		ldr	r2, [r3, #0]	@ float
 741 005e 40F20003 		movw	r3, #:lower16:mRes
 742 0062 C0F20003 		movt	r3, #:upper16:mRes
 743 0066 1A60     		str	r2, [r3, #0]	@ float
 206:../LSM9DS1_Driver.c **** 			break;
 744              		.loc 1 206 0
 745 0068 20E0     		b	.L21
 746              	.L24:
 207:../LSM9DS1_Driver.c **** 		case 8:
 208:../LSM9DS1_Driver.c **** 			mRes = magSensitivity[1];
 747              		.loc 1 208 0
 748 006a 40F20003 		movw	r3, #:lower16:magSensitivity
 749 006e C0F20003 		movt	r3, #:upper16:magSensitivity
 750 0072 5A68     		ldr	r2, [r3, #4]	@ float
 751 0074 40F20003 		movw	r3, #:lower16:mRes
 752 0078 C0F20003 		movt	r3, #:upper16:mRes
 753 007c 1A60     		str	r2, [r3, #0]	@ float
 209:../LSM9DS1_Driver.c **** 			break;
 754              		.loc 1 209 0
 755 007e 15E0     		b	.L21
 756              	.L25:
 210:../LSM9DS1_Driver.c **** 		case 12:
 211:../LSM9DS1_Driver.c **** 			mRes = magSensitivity[2];
 757              		.loc 1 211 0
 758 0080 40F20003 		movw	r3, #:lower16:magSensitivity
 759 0084 C0F20003 		movt	r3, #:upper16:magSensitivity
 760 0088 9A68     		ldr	r2, [r3, #8]	@ float
 761 008a 40F20003 		movw	r3, #:lower16:mRes
 762 008e C0F20003 		movt	r3, #:upper16:mRes
 763 0092 1A60     		str	r2, [r3, #0]	@ float
 212:../LSM9DS1_Driver.c **** 			break;
 764              		.loc 1 212 0
 765 0094 0AE0     		b	.L21
 766              	.L26:
 213:../LSM9DS1_Driver.c **** 		case 16:
 214:../LSM9DS1_Driver.c **** 			mRes = magSensitivity[3];
 767              		.loc 1 214 0
 768 0096 40F20003 		movw	r3, #:lower16:magSensitivity
 769 009a C0F20003 		movt	r3, #:upper16:magSensitivity
 770 009e DA68     		ldr	r2, [r3, #12]	@ float
 771 00a0 40F20003 		movw	r3, #:lower16:mRes
 772 00a4 C0F20003 		movt	r3, #:upper16:mRes
 773 00a8 1A60     		str	r2, [r3, #0]	@ float
 215:../LSM9DS1_Driver.c **** 			break;
 774              		.loc 1 215 0
 775 00aa 00BF     		nop
 776              	.L21:
 216:../LSM9DS1_Driver.c **** 	}
 217:../LSM9DS1_Driver.c **** 
 218:../LSM9DS1_Driver.c **** }
 777              		.loc 1 218 0
 778 00ac BD46     		mov	sp, r7
 779 00ae 80BC     		pop	{r7}
 780 00b0 7047     		bx	lr
 781              		.cfi_endproc
 782              	.LFE124:
 784 00b2 00BF     		.section	.text.delay,"ax",%progbits
 785              		.align	2
 786              		.global	delay
 787              		.thumb
 788              		.thumb_func
 790              	delay:
 791              	.LFB125:
 219:../LSM9DS1_Driver.c **** 
 220:../LSM9DS1_Driver.c **** void delay(int d)
 221:../LSM9DS1_Driver.c **** {
 792              		.loc 1 221 0
 793              		.cfi_startproc
 794              		@ args = 0, pretend = 0, frame = 16
 795              		@ frame_needed = 1, uses_anonymous_args = 0
 796              		@ link register save eliminated.
 797 0000 80B4     		push	{r7}
 798              	.LCFI18:
 799              		.cfi_def_cfa_offset 4
 800              		.cfi_offset 7, -4
 801 0002 85B0     		sub	sp, sp, #20
 802              	.LCFI19:
 803              		.cfi_def_cfa_offset 24
 804 0004 00AF     		add	r7, sp, #0
 805              	.LCFI20:
 806              		.cfi_def_cfa_register 7
 807 0006 7860     		str	r0, [r7, #4]
 808              	.LBB3:
 222:../LSM9DS1_Driver.c **** 	for(int i = 0; i < d; i++) i++;
 809              		.loc 1 222 0
 810 0008 4FF00003 		mov	r3, #0
 811 000c FB60     		str	r3, [r7, #12]
 812 000e 07E0     		b	.L29
 813              	.L30:
 814              		.loc 1 222 0 is_stmt 0 discriminator 2
 815 0010 FB68     		ldr	r3, [r7, #12]
 816 0012 03F10103 		add	r3, r3, #1
 817 0016 FB60     		str	r3, [r7, #12]
 818 0018 FB68     		ldr	r3, [r7, #12]
 819 001a 03F10103 		add	r3, r3, #1
 820 001e FB60     		str	r3, [r7, #12]
 821              	.L29:
 822              		.loc 1 222 0 discriminator 1
 823 0020 FA68     		ldr	r2, [r7, #12]
 824 0022 7B68     		ldr	r3, [r7, #4]
 825 0024 9A42     		cmp	r2, r3
 826 0026 F3DB     		blt	.L30
 827              	.LBE3:
 223:../LSM9DS1_Driver.c **** }
 828              		.loc 1 223 0 is_stmt 1
 829 0028 07F11407 		add	r7, r7, #20
 830 002c BD46     		mov	sp, r7
 831 002e 80BC     		pop	{r7}
 832 0030 7047     		bx	lr
 833              		.cfi_endproc
 834              	.LFE125:
 836 0032 00BF     		.section	.text.I2CreadByte,"ax",%progbits
 837              		.align	2
 838              		.global	I2CreadByte
 839              		.thumb
 840              		.thumb_func
 842              	I2CreadByte:
 843              	.LFB126:
 224:../LSM9DS1_Driver.c **** 
 225:../LSM9DS1_Driver.c **** uint8_t I2CreadByte(uint8_t address, uint8_t subAddress)
 226:../LSM9DS1_Driver.c **** {
 844              		.loc 1 226 0
 845              		.cfi_startproc
 846              		@ args = 0, pretend = 0, frame = 40
 847              		@ frame_needed = 1, uses_anonymous_args = 0
 848 0000 80B5     		push	{r7, lr}
 849              	.LCFI21:
 850              		.cfi_def_cfa_offset 8
 851              		.cfi_offset 7, -8
 852              		.cfi_offset 14, -4
 853 0002 8AB0     		sub	sp, sp, #40
 854              	.LCFI22:
 855              		.cfi_def_cfa_offset 48
 856 0004 00AF     		add	r7, sp, #0
 857              	.LCFI23:
 858              		.cfi_def_cfa_register 7
 859 0006 0246     		mov	r2, r0
 860 0008 0B46     		mov	r3, r1
 861 000a FA71     		strb	r2, [r7, #7]
 862 000c BB71     		strb	r3, [r7, #6]
 227:../LSM9DS1_Driver.c **** 	uint32_t stageOfReading = 0;
 863              		.loc 1 227 0
 864 000e 4FF00003 		mov	r3, #0
 865 0012 7B62     		str	r3, [r7, #36]
 228:../LSM9DS1_Driver.c **** 
 229:../LSM9DS1_Driver.c **** 	//deviceAddress address = *((deviceAddress*)T);
 230:../LSM9DS1_Driver.c **** 
 231:../LSM9DS1_Driver.c **** 		I2C001_DataType data1;
 232:../LSM9DS1_Driver.c **** 		data1.Data1.TDF_Type = I2C_TDF_MStart;
 866              		.loc 1 232 0
 867 0014 4FF00403 		mov	r3, #4
 868 0018 87F82130 		strb	r3, [r7, #33]
 233:../LSM9DS1_Driver.c **** 		data1.Data1.Data = ((address<<1) | I2C_WRITE);
 869              		.loc 1 233 0
 870 001c FB79     		ldrb	r3, [r7, #7]
 871 001e 4FEA4303 		lsl	r3, r3, #1
 872 0022 DBB2     		uxtb	r3, r3
 873 0024 87F82030 		strb	r3, [r7, #32]
 234:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data1));
 874              		.loc 1 234 0
 875 0028 00BF     		nop
 876              	.L32:
 877              		.loc 1 234 0 is_stmt 0 discriminator 1
 878 002a 07F12003 		add	r3, r7, #32
 879 002e 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 880 0032 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 881 0036 1946     		mov	r1, r3
 882 0038 FFF7FEFF 		bl	I2C001_WriteData
 883 003c 0346     		mov	r3, r0
 884 003e 002B     		cmp	r3, #0
 885 0040 F3D0     		beq	.L32
 235:../LSM9DS1_Driver.c **** 
 236:../LSM9DS1_Driver.c **** 		delay(10000);
 886              		.loc 1 236 0 is_stmt 1
 887 0042 42F21070 		movw	r0, #10000
 888 0046 FFF7FEFF 		bl	delay
 237:../LSM9DS1_Driver.c **** 
 238:../LSM9DS1_Driver.c **** 		I2C001_DataType data2;
 239:../LSM9DS1_Driver.c **** 		data2.Data1.TDF_Type = I2C_TDF_MTxData;
 889              		.loc 1 239 0
 890 004a 4FF00003 		mov	r3, #0
 891 004e 7B77     		strb	r3, [r7, #29]
 240:../LSM9DS1_Driver.c **** 		data2.Data1.Data = subAddress;
 892              		.loc 1 240 0
 893 0050 BB79     		ldrb	r3, [r7, #6]
 894 0052 3B77     		strb	r3, [r7, #28]
 241:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data2));
 895              		.loc 1 241 0
 896 0054 00BF     		nop
 897              	.L33:
 898              		.loc 1 241 0 is_stmt 0 discriminator 1
 899 0056 07F11C03 		add	r3, r7, #28
 900 005a 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 901 005e C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 902 0062 1946     		mov	r1, r3
 903 0064 FFF7FEFF 		bl	I2C001_WriteData
 904 0068 0346     		mov	r3, r0
 905 006a 002B     		cmp	r3, #0
 906 006c F3D0     		beq	.L33
 242:../LSM9DS1_Driver.c **** 
 243:../LSM9DS1_Driver.c **** 		delay(10000);
 907              		.loc 1 243 0 is_stmt 1
 908 006e 42F21070 		movw	r0, #10000
 909 0072 FFF7FEFF 		bl	delay
 244:../LSM9DS1_Driver.c **** 
 245:../LSM9DS1_Driver.c **** 
 246:../LSM9DS1_Driver.c **** 		I2C001_DataType data3;
 247:../LSM9DS1_Driver.c **** 		data3.Data1.TDF_Type = I2C_TDF_MRStart;
 910              		.loc 1 247 0
 911 0076 4FF00503 		mov	r3, #5
 912 007a 7B76     		strb	r3, [r7, #25]
 248:../LSM9DS1_Driver.c **** 		data3.Data1.Data = ((address<<1) | I2C_READ);
 913              		.loc 1 248 0
 914 007c FB79     		ldrb	r3, [r7, #7]
 915 007e 4FEA4303 		lsl	r3, r3, #1
 916 0082 DBB2     		uxtb	r3, r3
 917 0084 43F00103 		orr	r3, r3, #1
 918 0088 DBB2     		uxtb	r3, r3
 919 008a 3B76     		strb	r3, [r7, #24]
 249:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data3));
 920              		.loc 1 249 0
 921 008c 00BF     		nop
 922              	.L34:
 923              		.loc 1 249 0 is_stmt 0 discriminator 1
 924 008e 07F11803 		add	r3, r7, #24
 925 0092 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 926 0096 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 927 009a 1946     		mov	r1, r3
 928 009c FFF7FEFF 		bl	I2C001_WriteData
 929 00a0 0346     		mov	r3, r0
 930 00a2 002B     		cmp	r3, #0
 931 00a4 F3D0     		beq	.L34
 250:../LSM9DS1_Driver.c **** 
 251:../LSM9DS1_Driver.c **** 		delay(10000);
 932              		.loc 1 251 0 is_stmt 1
 933 00a6 42F21070 		movw	r0, #10000
 934 00aa FFF7FEFF 		bl	delay
 252:../LSM9DS1_Driver.c **** 
 253:../LSM9DS1_Driver.c **** 
 254:../LSM9DS1_Driver.c **** 		I2C001_DataType data4;
 255:../LSM9DS1_Driver.c **** 		data4.Data1.TDF_Type = I2C_TDF_MRxAck1;
 935              		.loc 1 255 0
 936 00ae 4FF00303 		mov	r3, #3
 937 00b2 7B75     		strb	r3, [r7, #21]
 256:../LSM9DS1_Driver.c **** 		data4.Data1.Data = ubyteFF;
 938              		.loc 1 256 0
 939 00b4 4FF0FF03 		mov	r3, #255
 940 00b8 3B75     		strb	r3, [r7, #20]
 257:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data4));
 941              		.loc 1 257 0
 942 00ba 00BF     		nop
 943              	.L35:
 944              		.loc 1 257 0 is_stmt 0 discriminator 1
 945 00bc 07F11403 		add	r3, r7, #20
 946 00c0 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 947 00c4 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 948 00c8 1946     		mov	r1, r3
 949 00ca FFF7FEFF 		bl	I2C001_WriteData
 950 00ce 0346     		mov	r3, r0
 951 00d0 002B     		cmp	r3, #0
 952 00d2 F3D0     		beq	.L35
 258:../LSM9DS1_Driver.c **** 
 259:../LSM9DS1_Driver.c **** 		delay(10000);
 953              		.loc 1 259 0 is_stmt 1
 954 00d4 42F21070 		movw	r0, #10000
 955 00d8 FFF7FEFF 		bl	delay
 260:../LSM9DS1_Driver.c **** 
 261:../LSM9DS1_Driver.c **** 		I2C001_DataType data5;
 262:../LSM9DS1_Driver.c **** 		data5.Data1.TDF_Type = I2C_TDF_MStop;
 956              		.loc 1 262 0
 957 00dc 4FF00603 		mov	r3, #6
 958 00e0 7B74     		strb	r3, [r7, #17]
 263:../LSM9DS1_Driver.c **** 		data5.Data1.Data = ubyteFF;
 959              		.loc 1 263 0
 960 00e2 4FF0FF03 		mov	r3, #255
 961 00e6 3B74     		strb	r3, [r7, #16]
 264:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data5));
 962              		.loc 1 264 0
 963 00e8 00BF     		nop
 964              	.L36:
 965              		.loc 1 264 0 is_stmt 0 discriminator 1
 966 00ea 07F11003 		add	r3, r7, #16
 967 00ee 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 968 00f2 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 969 00f6 1946     		mov	r1, r3
 970 00f8 FFF7FEFF 		bl	I2C001_WriteData
 971 00fc 0346     		mov	r3, r0
 972 00fe 002B     		cmp	r3, #0
 973 0100 F3D0     		beq	.L36
 265:../LSM9DS1_Driver.c **** 		stageOfReading++;
 974              		.loc 1 265 0 is_stmt 1
 975 0102 7B6A     		ldr	r3, [r7, #36]
 976 0104 03F10103 		add	r3, r3, #1
 977 0108 7B62     		str	r3, [r7, #36]
 266:../LSM9DS1_Driver.c **** 
 267:../LSM9DS1_Driver.c **** 		delay(10000);
 978              		.loc 1 267 0
 979 010a 42F21070 		movw	r0, #10000
 980 010e FFF7FEFF 		bl	delay
 268:../LSM9DS1_Driver.c **** 
 269:../LSM9DS1_Driver.c **** 		uint16_t DataReceive1 = 0;
 981              		.loc 1 269 0
 982 0112 4FF00003 		mov	r3, #0
 983 0116 FB81     		strh	r3, [r7, #14]	@ movhi
 270:../LSM9DS1_Driver.c **** 		if(I2C001_ReadData(&I2C001_Handle0,&DataReceive1))
 984              		.loc 1 270 0
 985 0118 07F10E03 		add	r3, r7, #14
 986 011c 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 987 0120 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 988 0124 1946     		mov	r1, r3
 989 0126 FFF7FEFF 		bl	I2C001_ReadData
 990 012a 0346     		mov	r3, r0
 991 012c 002B     		cmp	r3, #0
 992 012e 04D0     		beq	.L37
 271:../LSM9DS1_Driver.c **** 		{
 272:../LSM9DS1_Driver.c **** 			stageOfReading++;
 993              		.loc 1 272 0
 994 0130 7B6A     		ldr	r3, [r7, #36]
 995 0132 03F10103 		add	r3, r3, #1
 996 0136 7B62     		str	r3, [r7, #36]
 997 0138 03E0     		b	.L38
 998              	.L37:
 273:../LSM9DS1_Driver.c **** 		}
 274:../LSM9DS1_Driver.c **** 		else
 275:../LSM9DS1_Driver.c **** 		{
 276:../LSM9DS1_Driver.c **** 			stageOfReading--;
 999              		.loc 1 276 0
 1000 013a 7B6A     		ldr	r3, [r7, #36]
 1001 013c 03F1FF33 		add	r3, r3, #-1
 1002 0140 7B62     		str	r3, [r7, #36]
 1003              	.L38:
 277:../LSM9DS1_Driver.c **** 		}
 278:../LSM9DS1_Driver.c **** 
 279:../LSM9DS1_Driver.c **** 		return (uint8_t)DataReceive1;
 1004              		.loc 1 279 0
 1005 0142 FB89     		ldrh	r3, [r7, #14]
 1006 0144 DBB2     		uxtb	r3, r3
 280:../LSM9DS1_Driver.c **** }
 1007              		.loc 1 280 0
 1008 0146 1846     		mov	r0, r3
 1009 0148 07F12807 		add	r7, r7, #40
 1010 014c BD46     		mov	sp, r7
 1011 014e 80BD     		pop	{r7, pc}
 1012              		.cfi_endproc
 1013              	.LFE126:
 1015              		.section	.text.mReadByte,"ax",%progbits
 1016              		.align	2
 1017              		.global	mReadByte
 1018              		.thumb
 1019              		.thumb_func
 1021              	mReadByte:
 1022              	.LFB127:
 281:../LSM9DS1_Driver.c **** 
 282:../LSM9DS1_Driver.c **** 
 283:../LSM9DS1_Driver.c **** uint8_t mReadByte(uint8_t subAddress)
 284:../LSM9DS1_Driver.c **** {
 1023              		.loc 1 284 0
 1024              		.cfi_startproc
 1025              		@ args = 0, pretend = 0, frame = 8
 1026              		@ frame_needed = 1, uses_anonymous_args = 0
 1027 0000 80B5     		push	{r7, lr}
 1028              	.LCFI24:
 1029              		.cfi_def_cfa_offset 8
 1030              		.cfi_offset 7, -8
 1031              		.cfi_offset 14, -4
 1032 0002 82B0     		sub	sp, sp, #8
 1033              	.LCFI25:
 1034              		.cfi_def_cfa_offset 16
 1035 0004 00AF     		add	r7, sp, #0
 1036              	.LCFI26:
 1037              		.cfi_def_cfa_register 7
 1038 0006 0346     		mov	r3, r0
 1039 0008 FB71     		strb	r3, [r7, #7]
 285:../LSM9DS1_Driver.c **** 	// Whether we're using I2C or SPI, read a byte using the
 286:../LSM9DS1_Driver.c **** 	// accelerometer-specific I2C address or SPI CS pin.
 287:../LSM9DS1_Driver.c **** 	if (settings.device.commInterface == IMU_MODE_I2C)
 1040              		.loc 1 287 0
 1041 000a 40F20003 		movw	r3, #:lower16:settings
 1042 000e C0F20003 		movt	r3, #:upper16:settings
 1043 0012 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1044 0014 012B     		cmp	r3, #1
 1045 0016 0BD1     		bne	.L41
 288:../LSM9DS1_Driver.c **** 		return I2CreadByte(_mAddress, subAddress);
 1046              		.loc 1 288 0
 1047 0018 40F20003 		movw	r3, #:lower16:_mAddress
 1048 001c C0F20003 		movt	r3, #:upper16:_mAddress
 1049 0020 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1050 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1051 0024 1046     		mov	r0, r2
 1052 0026 1946     		mov	r1, r3
 1053 0028 FFF7FEFF 		bl	I2CreadByte
 1054 002c 0346     		mov	r3, r0
 1055 002e FFE7     		b	.L40
 1056              	.L41:
 1057              	.L40:
 289:../LSM9DS1_Driver.c **** 	/*else if (settings.device.commInterface == IMU_MODE_SPI)
 290:../LSM9DS1_Driver.c **** 		return SPIreadByte(_mAddress, subAddress);*/
 291:../LSM9DS1_Driver.c **** }
 1058              		.loc 1 291 0
 1059 0030 1846     		mov	r0, r3
 1060 0032 07F10807 		add	r7, r7, #8
 1061 0036 BD46     		mov	sp, r7
 1062 0038 80BD     		pop	{r7, pc}
 1063              		.cfi_endproc
 1064              	.LFE127:
 1066 003a 00BF     		.section	.text.xgReadByte,"ax",%progbits
 1067              		.align	2
 1068              		.global	xgReadByte
 1069              		.thumb
 1070              		.thumb_func
 1072              	xgReadByte:
 1073              	.LFB128:
 292:../LSM9DS1_Driver.c **** 
 293:../LSM9DS1_Driver.c **** uint8_t xgReadByte(uint8_t subAddress)
 294:../LSM9DS1_Driver.c **** {
 1074              		.loc 1 294 0
 1075              		.cfi_startproc
 1076              		@ args = 0, pretend = 0, frame = 8
 1077              		@ frame_needed = 1, uses_anonymous_args = 0
 1078 0000 80B5     		push	{r7, lr}
 1079              	.LCFI27:
 1080              		.cfi_def_cfa_offset 8
 1081              		.cfi_offset 7, -8
 1082              		.cfi_offset 14, -4
 1083 0002 82B0     		sub	sp, sp, #8
 1084              	.LCFI28:
 1085              		.cfi_def_cfa_offset 16
 1086 0004 00AF     		add	r7, sp, #0
 1087              	.LCFI29:
 1088              		.cfi_def_cfa_register 7
 1089 0006 0346     		mov	r3, r0
 1090 0008 FB71     		strb	r3, [r7, #7]
 295:../LSM9DS1_Driver.c **** 	// Whether we're using I2C or SPI, read a byte using the
 296:../LSM9DS1_Driver.c **** 	// gyro-specific I2C address or SPI CS pin.
 297:../LSM9DS1_Driver.c **** 	if (settings.device.commInterface == IMU_MODE_I2C)
 1091              		.loc 1 297 0
 1092 000a 40F20003 		movw	r3, #:lower16:settings
 1093 000e C0F20003 		movt	r3, #:upper16:settings
 1094 0012 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1095 0014 012B     		cmp	r3, #1
 1096 0016 0BD1     		bne	.L44
 298:../LSM9DS1_Driver.c **** 		return I2CreadByte(_xgAddress, subAddress);
 1097              		.loc 1 298 0
 1098 0018 40F20003 		movw	r3, #:lower16:_xgAddress
 1099 001c C0F20003 		movt	r3, #:upper16:_xgAddress
 1100 0020 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1101 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1102 0024 1046     		mov	r0, r2
 1103 0026 1946     		mov	r1, r3
 1104 0028 FFF7FEFF 		bl	I2CreadByte
 1105 002c 0346     		mov	r3, r0
 1106 002e FFE7     		b	.L43
 1107              	.L44:
 1108              	.L43:
 299:../LSM9DS1_Driver.c **** 	/*else if (settings.device.commInterface == IMU_MODE_SPI)
 300:../LSM9DS1_Driver.c **** 		return SPIreadByte(_xgAddress, subAddress);*/
 301:../LSM9DS1_Driver.c **** }
 1109              		.loc 1 301 0
 1110 0030 1846     		mov	r0, r3
 1111 0032 07F10807 		add	r7, r7, #8
 1112 0036 BD46     		mov	sp, r7
 1113 0038 80BD     		pop	{r7, pc}
 1114              		.cfi_endproc
 1115              	.LFE128:
 1117 003a 00BF     		.section	.text.initGyro,"ax",%progbits
 1118              		.align	2
 1119              		.global	initGyro
 1120              		.thumb
 1121              		.thumb_func
 1123              	initGyro:
 1124              	.LFB129:
 302:../LSM9DS1_Driver.c **** 
 303:../LSM9DS1_Driver.c **** void initGyro(void)
 304:../LSM9DS1_Driver.c **** {
 1125              		.loc 1 304 0
 1126              		.cfi_startproc
 1127              		@ args = 0, pretend = 0, frame = 8
 1128              		@ frame_needed = 1, uses_anonymous_args = 0
 1129 0000 80B5     		push	{r7, lr}
 1130              	.LCFI30:
 1131              		.cfi_def_cfa_offset 8
 1132              		.cfi_offset 7, -8
 1133              		.cfi_offset 14, -4
 1134 0002 82B0     		sub	sp, sp, #8
 1135              	.LCFI31:
 1136              		.cfi_def_cfa_offset 16
 1137 0004 00AF     		add	r7, sp, #0
 1138              	.LCFI32:
 1139              		.cfi_def_cfa_register 7
 305:../LSM9DS1_Driver.c **** 	uint8_t tempRegValue = 0;
 1140              		.loc 1 305 0
 1141 0006 4FF00003 		mov	r3, #0
 1142 000a FB71     		strb	r3, [r7, #7]
 306:../LSM9DS1_Driver.c **** 
 307:../LSM9DS1_Driver.c **** 	// CTRL_REG1_G (Default value: 0x00)
 308:../LSM9DS1_Driver.c **** 	// [ODR_G2][ODR_G1][ODR_G0][FS_G1][FS_G0][0][BW_G1][BW_G0]
 309:../LSM9DS1_Driver.c **** 	// ODR_G[2:0] - Output data rate selection
 310:../LSM9DS1_Driver.c **** 	// FS_G[1:0] - Gyroscope full-scale selection
 311:../LSM9DS1_Driver.c **** 	// BW_G[1:0] - Gyroscope bandwidth selection
 312:../LSM9DS1_Driver.c **** 
 313:../LSM9DS1_Driver.c **** 	// To disable gyro, set sample rate bits to 0. We'll only set sample
 314:../LSM9DS1_Driver.c **** 	// rate if the gyro is enabled.
 315:../LSM9DS1_Driver.c **** 	if (settings.gyro.enabled)
 1143              		.loc 1 315 0
 1144 000c 40F20003 		movw	r3, #:lower16:settings
 1145 0010 C0F20003 		movt	r3, #:upper16:settings
 1146 0014 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1147 0016 002B     		cmp	r3, #0
 1148 0018 07D0     		beq	.L47
 316:../LSM9DS1_Driver.c **** 	{
 317:../LSM9DS1_Driver.c **** 		tempRegValue = (settings.gyro.sampleRate & 0x07) << 5;
 1149              		.loc 1 317 0
 1150 001a 40F20003 		movw	r3, #:lower16:settings
 1151 001e C0F20003 		movt	r3, #:upper16:settings
 1152 0022 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 1153 0024 4FEA4313 		lsl	r3, r3, #5
 1154 0028 FB71     		strb	r3, [r7, #7]
 1155              	.L47:
 318:../LSM9DS1_Driver.c **** 	}
 319:../LSM9DS1_Driver.c **** 
 320:../LSM9DS1_Driver.c **** 	switch (settings.gyro.scale)
 1156              		.loc 1 320 0
 1157 002a 40F20003 		movw	r3, #:lower16:settings
 1158 002e C0F20003 		movt	r3, #:upper16:settings
 1159 0032 DB88     		ldrh	r3, [r3, #6]
 1160 0034 B3F5FA7F 		cmp	r3, #500
 1161 0038 03D0     		beq	.L49
 1162 003a B3F5FA6F 		cmp	r3, #2000
 1163 003e 05D0     		beq	.L50
 1164 0040 09E0     		b	.L48
 1165              	.L49:
 321:../LSM9DS1_Driver.c **** 	{
 322:../LSM9DS1_Driver.c **** 		case 500:
 323:../LSM9DS1_Driver.c **** 			tempRegValue |= (0x1 << 3);
 1166              		.loc 1 323 0
 1167 0042 FB79     		ldrb	r3, [r7, #7]
 1168 0044 43F00803 		orr	r3, r3, #8
 1169 0048 FB71     		strb	r3, [r7, #7]
 324:../LSM9DS1_Driver.c **** 			break;
 1170              		.loc 1 324 0
 1171 004a 04E0     		b	.L48
 1172              	.L50:
 325:../LSM9DS1_Driver.c **** 		case 2000:
 326:../LSM9DS1_Driver.c **** 			tempRegValue |= (0x3 << 3);
 1173              		.loc 1 326 0
 1174 004c FB79     		ldrb	r3, [r7, #7]
 1175 004e 43F01803 		orr	r3, r3, #24
 1176 0052 FB71     		strb	r3, [r7, #7]
 327:../LSM9DS1_Driver.c **** 			break;
 1177              		.loc 1 327 0
 1178 0054 00BF     		nop
 1179              	.L48:
 328:../LSM9DS1_Driver.c **** 		// Otherwise we'll set it to 245 dps (0x0 << 4)
 329:../LSM9DS1_Driver.c **** 	}
 330:../LSM9DS1_Driver.c **** 	tempRegValue |= (settings.gyro.bandwidth & 0x3);
 1180              		.loc 1 330 0
 1181 0056 40F20003 		movw	r3, #:lower16:settings
 1182 005a C0F20003 		movt	r3, #:upper16:settings
 1183 005e 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 1184 0060 DBB2     		uxtb	r3, r3
 1185 0062 03F00303 		and	r3, r3, #3
 1186 0066 DAB2     		uxtb	r2, r3
 1187 0068 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1188 006a 1343     		orrs	r3, r3, r2
 1189 006c DBB2     		uxtb	r3, r3
 1190 006e FB71     		strb	r3, [r7, #7]
 331:../LSM9DS1_Driver.c **** 	xgWriteByte(CTRL_REG1_G, tempRegValue);
 1191              		.loc 1 331 0
 1192 0070 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1193 0072 4FF01000 		mov	r0, #16
 1194 0076 1946     		mov	r1, r3
 1195 0078 FFF7FEFF 		bl	xgWriteByte
 332:../LSM9DS1_Driver.c **** 
 333:../LSM9DS1_Driver.c **** 	// CTRL_REG2_G (Default value: 0x00)
 334:../LSM9DS1_Driver.c **** 	// [0][0][0][0][INT_SEL1][INT_SEL0][OUT_SEL1][OUT_SEL0]
 335:../LSM9DS1_Driver.c **** 	// INT_SEL[1:0] - INT selection configuration
 336:../LSM9DS1_Driver.c **** 	// OUT_SEL[1:0] - Out selection configuration
 337:../LSM9DS1_Driver.c **** 	xgWriteByte(CTRL_REG2_G, 0x00);
 1196              		.loc 1 337 0
 1197 007c 4FF01100 		mov	r0, #17
 1198 0080 4FF00001 		mov	r1, #0
 1199 0084 FFF7FEFF 		bl	xgWriteByte
 338:../LSM9DS1_Driver.c **** 
 339:../LSM9DS1_Driver.c **** 	// CTRL_REG3_G (Default value: 0x00)
 340:../LSM9DS1_Driver.c **** 	// [LP_mode][HP_EN][0][0][HPCF3_G][HPCF2_G][HPCF1_G][HPCF0_G]
 341:../LSM9DS1_Driver.c **** 	// LP_mode - Low-power mode enable (0: disabled, 1: enabled)
 342:../LSM9DS1_Driver.c **** 	// HP_EN - HPF enable (0:disabled, 1: enabled)
 343:../LSM9DS1_Driver.c **** 	// HPCF_G[3:0] - HPF cutoff frequency
 344:../LSM9DS1_Driver.c **** 	tempRegValue = settings.gyro.lowPowerEnable ? (1<<7) : 0;
 1200              		.loc 1 344 0
 1201 0088 40F20003 		movw	r3, #:lower16:settings
 1202 008c C0F20003 		movt	r3, #:upper16:settings
 1203 0090 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 1204 0092 002B     		cmp	r3, #0
 1205 0094 02D0     		beq	.L51
 1206              		.loc 1 344 0 is_stmt 0 discriminator 1
 1207 0096 4FF08003 		mov	r3, #128
 1208 009a 01E0     		b	.L52
 1209              	.L51:
 1210              		.loc 1 344 0 discriminator 2
 1211 009c 4FF00003 		mov	r3, #0
 1212              	.L52:
 1213              		.loc 1 344 0 discriminator 3
 1214 00a0 FB71     		strb	r3, [r7, #7]
 345:../LSM9DS1_Driver.c **** 	if (settings.gyro.HPFEnable)
 1215              		.loc 1 345 0 is_stmt 1 discriminator 3
 1216 00a2 40F20003 		movw	r3, #:lower16:settings
 1217 00a6 C0F20003 		movt	r3, #:upper16:settings
 1218 00aa DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 1219 00ac 002B     		cmp	r3, #0
 1220 00ae 0FD0     		beq	.L53
 346:../LSM9DS1_Driver.c **** 	{
 347:../LSM9DS1_Driver.c **** 		tempRegValue |= ((1<<6) | (settings.gyro.HPFCutoff & 0x0F));
 1221              		.loc 1 347 0
 1222 00b0 40F20003 		movw	r3, #:lower16:settings
 1223 00b4 C0F20003 		movt	r3, #:upper16:settings
 1224 00b8 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 1225 00ba DBB2     		uxtb	r3, r3
 1226 00bc 03F00F03 		and	r3, r3, #15
 1227 00c0 DBB2     		uxtb	r3, r3
 1228 00c2 43F04003 		orr	r3, r3, #64
 1229 00c6 DAB2     		uxtb	r2, r3
 1230 00c8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1231 00ca 1343     		orrs	r3, r3, r2
 1232 00cc DBB2     		uxtb	r3, r3
 1233 00ce FB71     		strb	r3, [r7, #7]
 1234              	.L53:
 348:../LSM9DS1_Driver.c **** 	}
 349:../LSM9DS1_Driver.c **** 	xgWriteByte(CTRL_REG3_G, tempRegValue);
 1235              		.loc 1 349 0
 1236 00d0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1237 00d2 4FF01200 		mov	r0, #18
 1238 00d6 1946     		mov	r1, r3
 1239 00d8 FFF7FEFF 		bl	xgWriteByte
 350:../LSM9DS1_Driver.c **** 
 351:../LSM9DS1_Driver.c **** 	// CTRL_REG4 (Default value: 0x38)
 352:../LSM9DS1_Driver.c **** 	// [0][0][Zen_G][Yen_G][Xen_G][0][LIR_XL1][4D_XL1]
 353:../LSM9DS1_Driver.c **** 	// Zen_G - Z-axis output enable (0:disable, 1:enable)
 354:../LSM9DS1_Driver.c **** 	// Yen_G - Y-axis output enable (0:disable, 1:enable)
 355:../LSM9DS1_Driver.c **** 	// Xen_G - X-axis output enable (0:disable, 1:enable)
 356:../LSM9DS1_Driver.c **** 	// LIR_XL1 - Latched interrupt (0:not latched, 1:latched)
 357:../LSM9DS1_Driver.c **** 	// 4D_XL1 - 4D option on interrupt (0:6D used, 1:4D used)
 358:../LSM9DS1_Driver.c **** 	tempRegValue = 0;
 1240              		.loc 1 358 0
 1241 00dc 4FF00003 		mov	r3, #0
 1242 00e0 FB71     		strb	r3, [r7, #7]
 359:../LSM9DS1_Driver.c **** 	if (settings.gyro.enableZ) tempRegValue |= (1<<5);
 1243              		.loc 1 359 0
 1244 00e2 40F20003 		movw	r3, #:lower16:settings
 1245 00e6 C0F20003 		movt	r3, #:upper16:settings
 1246 00ea DB7C     		ldrb	r3, [r3, #19]	@ zero_extendqisi2
 1247 00ec 002B     		cmp	r3, #0
 1248 00ee 03D0     		beq	.L54
 1249              		.loc 1 359 0 is_stmt 0 discriminator 1
 1250 00f0 FB79     		ldrb	r3, [r7, #7]
 1251 00f2 43F02003 		orr	r3, r3, #32
 1252 00f6 FB71     		strb	r3, [r7, #7]
 1253              	.L54:
 360:../LSM9DS1_Driver.c **** 	if (settings.gyro.enableY) tempRegValue |= (1<<4);
 1254              		.loc 1 360 0 is_stmt 1
 1255 00f8 40F20003 		movw	r3, #:lower16:settings
 1256 00fc C0F20003 		movt	r3, #:upper16:settings
 1257 0100 9B7C     		ldrb	r3, [r3, #18]	@ zero_extendqisi2
 1258 0102 002B     		cmp	r3, #0
 1259 0104 03D0     		beq	.L55
 1260              		.loc 1 360 0 is_stmt 0 discriminator 1
 1261 0106 FB79     		ldrb	r3, [r7, #7]
 1262 0108 43F01003 		orr	r3, r3, #16
 1263 010c FB71     		strb	r3, [r7, #7]
 1264              	.L55:
 361:../LSM9DS1_Driver.c **** 	if (settings.gyro.enableX) tempRegValue |= (1<<3);
 1265              		.loc 1 361 0 is_stmt 1
 1266 010e 40F20003 		movw	r3, #:lower16:settings
 1267 0112 C0F20003 		movt	r3, #:upper16:settings
 1268 0116 5B7C     		ldrb	r3, [r3, #17]	@ zero_extendqisi2
 1269 0118 002B     		cmp	r3, #0
 1270 011a 03D0     		beq	.L56
 1271              		.loc 1 361 0 is_stmt 0 discriminator 1
 1272 011c FB79     		ldrb	r3, [r7, #7]
 1273 011e 43F00803 		orr	r3, r3, #8
 1274 0122 FB71     		strb	r3, [r7, #7]
 1275              	.L56:
 362:../LSM9DS1_Driver.c **** 	if (settings.gyro.latchInterrupt) tempRegValue |= (1<<1);
 1276              		.loc 1 362 0 is_stmt 1
 1277 0124 40F20003 		movw	r3, #:lower16:settings
 1278 0128 C0F20003 		movt	r3, #:upper16:settings
 1279 012c 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 1280 012e 002B     		cmp	r3, #0
 1281 0130 03D0     		beq	.L57
 1282              		.loc 1 362 0 is_stmt 0 discriminator 1
 1283 0132 FB79     		ldrb	r3, [r7, #7]
 1284 0134 43F00203 		orr	r3, r3, #2
 1285 0138 FB71     		strb	r3, [r7, #7]
 1286              	.L57:
 363:../LSM9DS1_Driver.c **** 	xgWriteByte(CTRL_REG4, tempRegValue);
 1287              		.loc 1 363 0 is_stmt 1
 1288 013a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1289 013c 4FF01E00 		mov	r0, #30
 1290 0140 1946     		mov	r1, r3
 1291 0142 FFF7FEFF 		bl	xgWriteByte
 364:../LSM9DS1_Driver.c **** 
 365:../LSM9DS1_Driver.c **** 	// ORIENT_CFG_G (Default value: 0x00)
 366:../LSM9DS1_Driver.c **** 	// [0][0][SignX_G][SignY_G][SignZ_G][Orient_2][Orient_1][Orient_0]
 367:../LSM9DS1_Driver.c **** 	// SignX_G - Pitch axis (X) angular rate sign (0: positive, 1: negative)
 368:../LSM9DS1_Driver.c **** 	// Orient [2:0] - Directional user orientation selection
 369:../LSM9DS1_Driver.c **** 	tempRegValue = 0;
 1292              		.loc 1 369 0
 1293 0146 4FF00003 		mov	r3, #0
 1294 014a FB71     		strb	r3, [r7, #7]
 370:../LSM9DS1_Driver.c **** 	if (settings.gyro.flipX) tempRegValue |= (1<<5);
 1295              		.loc 1 370 0
 1296 014c 40F20003 		movw	r3, #:lower16:settings
 1297 0150 C0F20003 		movt	r3, #:upper16:settings
 1298 0154 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 1299 0156 002B     		cmp	r3, #0
 1300 0158 03D0     		beq	.L58
 1301              		.loc 1 370 0 is_stmt 0 discriminator 1
 1302 015a FB79     		ldrb	r3, [r7, #7]
 1303 015c 43F02003 		orr	r3, r3, #32
 1304 0160 FB71     		strb	r3, [r7, #7]
 1305              	.L58:
 371:../LSM9DS1_Driver.c **** 	if (settings.gyro.flipY) tempRegValue |= (1<<4);
 1306              		.loc 1 371 0 is_stmt 1
 1307 0162 40F20003 		movw	r3, #:lower16:settings
 1308 0166 C0F20003 		movt	r3, #:upper16:settings
 1309 016a 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
 1310 016c 002B     		cmp	r3, #0
 1311 016e 03D0     		beq	.L59
 1312              		.loc 1 371 0 is_stmt 0 discriminator 1
 1313 0170 FB79     		ldrb	r3, [r7, #7]
 1314 0172 43F01003 		orr	r3, r3, #16
 1315 0176 FB71     		strb	r3, [r7, #7]
 1316              	.L59:
 372:../LSM9DS1_Driver.c **** 	if (settings.gyro.flipZ) tempRegValue |= (1<<3);
 1317              		.loc 1 372 0 is_stmt 1
 1318 0178 40F20003 		movw	r3, #:lower16:settings
 1319 017c C0F20003 		movt	r3, #:upper16:settings
 1320 0180 DB7B     		ldrb	r3, [r3, #15]	@ zero_extendqisi2
 1321 0182 002B     		cmp	r3, #0
 1322 0184 03D0     		beq	.L60
 1323              		.loc 1 372 0 is_stmt 0 discriminator 1
 1324 0186 FB79     		ldrb	r3, [r7, #7]
 1325 0188 43F00803 		orr	r3, r3, #8
 1326 018c FB71     		strb	r3, [r7, #7]
 1327              	.L60:
 373:../LSM9DS1_Driver.c **** 	xgWriteByte(ORIENT_CFG_G, tempRegValue);
 1328              		.loc 1 373 0 is_stmt 1
 1329 018e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1330 0190 4FF01300 		mov	r0, #19
 1331 0194 1946     		mov	r1, r3
 1332 0196 FFF7FEFF 		bl	xgWriteByte
 374:../LSM9DS1_Driver.c **** }
 1333              		.loc 1 374 0
 1334 019a 07F10807 		add	r7, r7, #8
 1335 019e BD46     		mov	sp, r7
 1336 01a0 80BD     		pop	{r7, pc}
 1337              		.cfi_endproc
 1338              	.LFE129:
 1340 01a2 00BF     		.section	.text.xgWriteByte,"ax",%progbits
 1341              		.align	2
 1342              		.global	xgWriteByte
 1343              		.thumb
 1344              		.thumb_func
 1346              	xgWriteByte:
 1347              	.LFB130:
 375:../LSM9DS1_Driver.c **** 
 376:../LSM9DS1_Driver.c **** 
 377:../LSM9DS1_Driver.c **** void xgWriteByte(uint8_t subAddress, uint8_t data)
 378:../LSM9DS1_Driver.c **** {
 1348              		.loc 1 378 0
 1349              		.cfi_startproc
 1350              		@ args = 0, pretend = 0, frame = 8
 1351              		@ frame_needed = 1, uses_anonymous_args = 0
 1352 0000 80B5     		push	{r7, lr}
 1353              	.LCFI33:
 1354              		.cfi_def_cfa_offset 8
 1355              		.cfi_offset 7, -8
 1356              		.cfi_offset 14, -4
 1357 0002 82B0     		sub	sp, sp, #8
 1358              	.LCFI34:
 1359              		.cfi_def_cfa_offset 16
 1360 0004 00AF     		add	r7, sp, #0
 1361              	.LCFI35:
 1362              		.cfi_def_cfa_register 7
 1363 0006 0246     		mov	r2, r0
 1364 0008 0B46     		mov	r3, r1
 1365 000a FA71     		strb	r2, [r7, #7]
 1366 000c BB71     		strb	r3, [r7, #6]
 379:../LSM9DS1_Driver.c **** 	// Whether we're using I2C or SPI, write a byte using the
 380:../LSM9DS1_Driver.c **** 	// gyro-specific I2C address or SPI CS pin.
 381:../LSM9DS1_Driver.c **** 	if (settings.device.commInterface == IMU_MODE_I2C)
 1367              		.loc 1 381 0
 1368 000e 40F20003 		movw	r3, #:lower16:settings
 1369 0012 C0F20003 		movt	r3, #:upper16:settings
 1370 0016 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1371 0018 012B     		cmp	r3, #1
 1372 001a 0BD1     		bne	.L61
 382:../LSM9DS1_Driver.c **** 	{
 383:../LSM9DS1_Driver.c **** 		I2CwriteByte(_xgAddress, subAddress, data);
 1373              		.loc 1 383 0
 1374 001c 40F20003 		movw	r3, #:lower16:_xgAddress
 1375 0020 C0F20003 		movt	r3, #:upper16:_xgAddress
 1376 0024 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 1377 0026 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1378 0028 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1379 002a 0846     		mov	r0, r1
 1380 002c 1146     		mov	r1, r2
 1381 002e 1A46     		mov	r2, r3
 1382 0030 FFF7FEFF 		bl	I2CwriteByte
 1383              	.L61:
 384:../LSM9DS1_Driver.c **** 	}
 385:../LSM9DS1_Driver.c **** }
 1384              		.loc 1 385 0
 1385 0034 07F10807 		add	r7, r7, #8
 1386 0038 BD46     		mov	sp, r7
 1387 003a 80BD     		pop	{r7, pc}
 1388              		.cfi_endproc
 1389              	.LFE130:
 1391              		.section	.text.I2CwriteByte,"ax",%progbits
 1392              		.align	2
 1393              		.global	I2CwriteByte
 1394              		.thumb
 1395              		.thumb_func
 1397              	I2CwriteByte:
 1398              	.LFB131:
 386:../LSM9DS1_Driver.c **** 
 387:../LSM9DS1_Driver.c **** void I2CwriteByte(uint8_t address, uint8_t subAddress, uint8_t data)
 388:../LSM9DS1_Driver.c **** {
 1399              		.loc 1 388 0
 1400              		.cfi_startproc
 1401              		@ args = 0, pretend = 0, frame = 24
 1402              		@ frame_needed = 1, uses_anonymous_args = 0
 1403 0000 80B5     		push	{r7, lr}
 1404              	.LCFI36:
 1405              		.cfi_def_cfa_offset 8
 1406              		.cfi_offset 7, -8
 1407              		.cfi_offset 14, -4
 1408 0002 86B0     		sub	sp, sp, #24
 1409              	.LCFI37:
 1410              		.cfi_def_cfa_offset 32
 1411 0004 00AF     		add	r7, sp, #0
 1412              	.LCFI38:
 1413              		.cfi_def_cfa_register 7
 1414 0006 1346     		mov	r3, r2
 1415 0008 0246     		mov	r2, r0
 1416 000a FA71     		strb	r2, [r7, #7]
 1417 000c 0A46     		mov	r2, r1
 1418 000e BA71     		strb	r2, [r7, #6]
 1419 0010 7B71     		strb	r3, [r7, #5]
 389:../LSM9DS1_Driver.c **** 	/*addressTimerWrite = address;
 390:../LSM9DS1_Driver.c **** 	subAddressTimerWrite = subAddress;
 391:../LSM9DS1_Driver.c **** 	dataWrite = data;*/
 392:../LSM9DS1_Driver.c **** 
 393:../LSM9DS1_Driver.c **** 	//makeTimer(50, SYSTM001_PERIODIC, timerHandlerI2CwriteByte, NULL, &WriteTimerStatus, &WriteTimerI
 394:../LSM9DS1_Driver.c **** 
 395:../LSM9DS1_Driver.c **** 
 396:../LSM9DS1_Driver.c **** 		I2C001_DataType data1;
 397:../LSM9DS1_Driver.c **** 		data1.Data1.TDF_Type = I2C_TDF_MStart;
 1420              		.loc 1 397 0
 1421 0012 4FF00403 		mov	r3, #4
 1422 0016 7B75     		strb	r3, [r7, #21]
 398:../LSM9DS1_Driver.c **** 		data1.Data1.Data = ((address<<1) | I2C_WRITE);
 1423              		.loc 1 398 0
 1424 0018 FB79     		ldrb	r3, [r7, #7]
 1425 001a 4FEA4303 		lsl	r3, r3, #1
 1426 001e DBB2     		uxtb	r3, r3
 1427 0020 3B75     		strb	r3, [r7, #20]
 399:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data1));
 1428              		.loc 1 399 0
 1429 0022 00BF     		nop
 1430              	.L64:
 1431              		.loc 1 399 0 is_stmt 0 discriminator 1
 1432 0024 07F11403 		add	r3, r7, #20
 1433 0028 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 1434 002c C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 1435 0030 1946     		mov	r1, r3
 1436 0032 FFF7FEFF 		bl	I2C001_WriteData
 1437 0036 0346     		mov	r3, r0
 1438 0038 002B     		cmp	r3, #0
 1439 003a F3D0     		beq	.L64
 400:../LSM9DS1_Driver.c **** 
 401:../LSM9DS1_Driver.c **** 		delay(10000);
 1440              		.loc 1 401 0 is_stmt 1
 1441 003c 42F21070 		movw	r0, #10000
 1442 0040 FFF7FEFF 		bl	delay
 402:../LSM9DS1_Driver.c **** 
 403:../LSM9DS1_Driver.c **** 		I2C001_DataType data2;
 404:../LSM9DS1_Driver.c **** 		data2.Data1.TDF_Type = I2C_TDF_MTxData;
 1443              		.loc 1 404 0
 1444 0044 4FF00003 		mov	r3, #0
 1445 0048 7B74     		strb	r3, [r7, #17]
 405:../LSM9DS1_Driver.c **** 		data2.Data1.Data = subAddress;
 1446              		.loc 1 405 0
 1447 004a BB79     		ldrb	r3, [r7, #6]
 1448 004c 3B74     		strb	r3, [r7, #16]
 406:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data2));
 1449              		.loc 1 406 0
 1450 004e 00BF     		nop
 1451              	.L65:
 1452              		.loc 1 406 0 is_stmt 0 discriminator 1
 1453 0050 07F11003 		add	r3, r7, #16
 1454 0054 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 1455 0058 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 1456 005c 1946     		mov	r1, r3
 1457 005e FFF7FEFF 		bl	I2C001_WriteData
 1458 0062 0346     		mov	r3, r0
 1459 0064 002B     		cmp	r3, #0
 1460 0066 F3D0     		beq	.L65
 407:../LSM9DS1_Driver.c **** 
 408:../LSM9DS1_Driver.c **** 		delay(10000);
 1461              		.loc 1 408 0 is_stmt 1
 1462 0068 42F21070 		movw	r0, #10000
 1463 006c FFF7FEFF 		bl	delay
 409:../LSM9DS1_Driver.c **** 
 410:../LSM9DS1_Driver.c **** 		I2C001_DataType data3;
 411:../LSM9DS1_Driver.c **** 		data3.Data1.TDF_Type = I2C_TDF_MTxData;
 1464              		.loc 1 411 0
 1465 0070 4FF00003 		mov	r3, #0
 1466 0074 7B73     		strb	r3, [r7, #13]
 412:../LSM9DS1_Driver.c **** 		data3.Data1.Data = data;
 1467              		.loc 1 412 0
 1468 0076 7B79     		ldrb	r3, [r7, #5]
 1469 0078 3B73     		strb	r3, [r7, #12]
 413:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data3));
 1470              		.loc 1 413 0
 1471 007a 00BF     		nop
 1472              	.L66:
 1473              		.loc 1 413 0 is_stmt 0 discriminator 1
 1474 007c 07F10C03 		add	r3, r7, #12
 1475 0080 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 1476 0084 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 1477 0088 1946     		mov	r1, r3
 1478 008a FFF7FEFF 		bl	I2C001_WriteData
 1479 008e 0346     		mov	r3, r0
 1480 0090 002B     		cmp	r3, #0
 1481 0092 F3D0     		beq	.L66
 414:../LSM9DS1_Driver.c **** 
 415:../LSM9DS1_Driver.c **** 		delay(10000);
 1482              		.loc 1 415 0 is_stmt 1
 1483 0094 42F21070 		movw	r0, #10000
 1484 0098 FFF7FEFF 		bl	delay
 416:../LSM9DS1_Driver.c **** 
 417:../LSM9DS1_Driver.c **** 		I2C001_DataType data4;
 418:../LSM9DS1_Driver.c **** 		data4.Data1.TDF_Type = I2C_TDF_MStop;
 1485              		.loc 1 418 0
 1486 009c 4FF00603 		mov	r3, #6
 1487 00a0 7B72     		strb	r3, [r7, #9]
 419:../LSM9DS1_Driver.c **** 		data4.Data1.Data = ubyteFF;
 1488              		.loc 1 419 0
 1489 00a2 4FF0FF03 		mov	r3, #255
 1490 00a6 3B72     		strb	r3, [r7, #8]
 420:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data4));
 1491              		.loc 1 420 0
 1492 00a8 00BF     		nop
 1493              	.L67:
 1494              		.loc 1 420 0 is_stmt 0 discriminator 1
 1495 00aa 07F10803 		add	r3, r7, #8
 1496 00ae 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 1497 00b2 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 1498 00b6 1946     		mov	r1, r3
 1499 00b8 FFF7FEFF 		bl	I2C001_WriteData
 1500 00bc 0346     		mov	r3, r0
 1501 00be 002B     		cmp	r3, #0
 1502 00c0 F3D0     		beq	.L67
 421:../LSM9DS1_Driver.c **** 
 422:../LSM9DS1_Driver.c **** 		delay(10000);
 1503              		.loc 1 422 0 is_stmt 1
 1504 00c2 42F21070 		movw	r0, #10000
 1505 00c6 FFF7FEFF 		bl	delay
 423:../LSM9DS1_Driver.c **** }
 1506              		.loc 1 423 0
 1507 00ca 07F11807 		add	r7, r7, #24
 1508 00ce BD46     		mov	sp, r7
 1509 00d0 80BD     		pop	{r7, pc}
 1510              		.cfi_endproc
 1511              	.LFE131:
 1513 00d2 00BF     		.section	.text.initAccel,"ax",%progbits
 1514              		.align	2
 1515              		.global	initAccel
 1516              		.thumb
 1517              		.thumb_func
 1519              	initAccel:
 1520              	.LFB132:
 424:../LSM9DS1_Driver.c **** 
 425:../LSM9DS1_Driver.c **** void initAccel(void)
 426:../LSM9DS1_Driver.c **** {
 1521              		.loc 1 426 0
 1522              		.cfi_startproc
 1523              		@ args = 0, pretend = 0, frame = 8
 1524              		@ frame_needed = 1, uses_anonymous_args = 0
 1525 0000 80B5     		push	{r7, lr}
 1526              	.LCFI39:
 1527              		.cfi_def_cfa_offset 8
 1528              		.cfi_offset 7, -8
 1529              		.cfi_offset 14, -4
 1530 0002 82B0     		sub	sp, sp, #8
 1531              	.LCFI40:
 1532              		.cfi_def_cfa_offset 16
 1533 0004 00AF     		add	r7, sp, #0
 1534              	.LCFI41:
 1535              		.cfi_def_cfa_register 7
 427:../LSM9DS1_Driver.c **** 	uint8_t tempRegValue = 0;
 1536              		.loc 1 427 0
 1537 0006 4FF00003 		mov	r3, #0
 1538 000a FB71     		strb	r3, [r7, #7]
 428:../LSM9DS1_Driver.c **** 
 429:../LSM9DS1_Driver.c **** 	//	CTRL_REG5_XL (0x1F) (Default value: 0x38)
 430:../LSM9DS1_Driver.c **** 	//	[DEC_1][DEC_0][Zen_XL][Yen_XL][Zen_XL][0][0][0]
 431:../LSM9DS1_Driver.c **** 	//	DEC[0:1] - Decimation of accel data on OUT REG and FIFO.
 432:../LSM9DS1_Driver.c **** 	//		00: None, 01: 2 samples, 10: 4 samples 11: 8 samples
 433:../LSM9DS1_Driver.c **** 	//	Zen_XL - Z-axis output enabled
 434:../LSM9DS1_Driver.c **** 	//	Yen_XL - Y-axis output enabled
 435:../LSM9DS1_Driver.c **** 	//	Xen_XL - X-axis output enabled
 436:../LSM9DS1_Driver.c **** 	if (settings.accel.enableZ) tempRegValue |= (1<<5);
 1539              		.loc 1 436 0
 1540 000c 40F20003 		movw	r3, #:lower16:settings
 1541 0010 C0F20003 		movt	r3, #:upper16:settings
 1542 0014 DB7E     		ldrb	r3, [r3, #27]	@ zero_extendqisi2
 1543 0016 002B     		cmp	r3, #0
 1544 0018 03D0     		beq	.L69
 1545              		.loc 1 436 0 is_stmt 0 discriminator 1
 1546 001a FB79     		ldrb	r3, [r7, #7]
 1547 001c 43F02003 		orr	r3, r3, #32
 1548 0020 FB71     		strb	r3, [r7, #7]
 1549              	.L69:
 437:../LSM9DS1_Driver.c **** 	if (settings.accel.enableY) tempRegValue |= (1<<4);
 1550              		.loc 1 437 0 is_stmt 1
 1551 0022 40F20003 		movw	r3, #:lower16:settings
 1552 0026 C0F20003 		movt	r3, #:upper16:settings
 1553 002a 9B7E     		ldrb	r3, [r3, #26]	@ zero_extendqisi2
 1554 002c 002B     		cmp	r3, #0
 1555 002e 03D0     		beq	.L70
 1556              		.loc 1 437 0 is_stmt 0 discriminator 1
 1557 0030 FB79     		ldrb	r3, [r7, #7]
 1558 0032 43F01003 		orr	r3, r3, #16
 1559 0036 FB71     		strb	r3, [r7, #7]
 1560              	.L70:
 438:../LSM9DS1_Driver.c **** 	if (settings.accel.enableX) tempRegValue |= (1<<3);
 1561              		.loc 1 438 0 is_stmt 1
 1562 0038 40F20003 		movw	r3, #:lower16:settings
 1563 003c C0F20003 		movt	r3, #:upper16:settings
 1564 0040 5B7E     		ldrb	r3, [r3, #25]	@ zero_extendqisi2
 1565 0042 002B     		cmp	r3, #0
 1566 0044 03D0     		beq	.L71
 1567              		.loc 1 438 0 is_stmt 0 discriminator 1
 1568 0046 FB79     		ldrb	r3, [r7, #7]
 1569 0048 43F00803 		orr	r3, r3, #8
 1570 004c FB71     		strb	r3, [r7, #7]
 1571              	.L71:
 439:../LSM9DS1_Driver.c **** 
 440:../LSM9DS1_Driver.c **** 	xgWriteByte(CTRL_REG5_XL, tempRegValue);
 1572              		.loc 1 440 0 is_stmt 1
 1573 004e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1574 0050 4FF01F00 		mov	r0, #31
 1575 0054 1946     		mov	r1, r3
 1576 0056 FFF7FEFF 		bl	xgWriteByte
 441:../LSM9DS1_Driver.c **** 
 442:../LSM9DS1_Driver.c **** 	// CTRL_REG6_XL (0x20) (Default value: 0x00)
 443:../LSM9DS1_Driver.c **** 	// [ODR_XL2][ODR_XL1][ODR_XL0][FS1_XL][FS0_XL][BW_SCAL_ODR][BW_XL1][BW_XL0]
 444:../LSM9DS1_Driver.c **** 	// ODR_XL[2:0] - Output data rate & power mode selection
 445:../LSM9DS1_Driver.c **** 	// FS_XL[1:0] - Full-scale selection
 446:../LSM9DS1_Driver.c **** 	// BW_SCAL_ODR - Bandwidth selection
 447:../LSM9DS1_Driver.c **** 	// BW_XL[1:0] - Anti-aliasing filter bandwidth selection
 448:../LSM9DS1_Driver.c **** 	tempRegValue = 0;
 1577              		.loc 1 448 0
 1578 005a 4FF00003 		mov	r3, #0
 1579 005e FB71     		strb	r3, [r7, #7]
 449:../LSM9DS1_Driver.c **** 	// To disable the accel, set the sampleRate bits to 0.
 450:../LSM9DS1_Driver.c **** 	if (settings.accel.enabled)
 1580              		.loc 1 450 0
 1581 0060 40F20003 		movw	r3, #:lower16:settings
 1582 0064 C0F20003 		movt	r3, #:upper16:settings
 1583 0068 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 1584 006a 002B     		cmp	r3, #0
 1585 006c 0BD0     		beq	.L72
 451:../LSM9DS1_Driver.c **** 	{
 452:../LSM9DS1_Driver.c **** 		tempRegValue |= ((settings.accel.sampleRate & 0x07) << 5);
 1586              		.loc 1 452 0
 1587 006e 40F20003 		movw	r3, #:lower16:settings
 1588 0072 C0F20003 		movt	r3, #:upper16:settings
 1589 0076 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 1590 0078 4FEA4313 		lsl	r3, r3, #5
 1591 007c DAB2     		uxtb	r2, r3
 1592 007e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1593 0080 1343     		orrs	r3, r3, r2
 1594 0082 DBB2     		uxtb	r3, r3
 1595 0084 FB71     		strb	r3, [r7, #7]
 1596              	.L72:
 453:../LSM9DS1_Driver.c **** 	}
 454:../LSM9DS1_Driver.c **** 	switch (settings.accel.scale)
 1597              		.loc 1 454 0
 1598 0086 40F20003 		movw	r3, #:lower16:settings
 1599 008a C0F20003 		movt	r3, #:upper16:settings
 1600 008e DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
 1601 0090 082B     		cmp	r3, #8
 1602 0092 08D0     		beq	.L75
 1603 0094 102B     		cmp	r3, #16
 1604 0096 0BD0     		beq	.L76
 1605 0098 042B     		cmp	r3, #4
 1606 009a 0ED1     		bne	.L73
 1607              	.L74:
 455:../LSM9DS1_Driver.c **** 	{
 456:../LSM9DS1_Driver.c **** 		case 4:
 457:../LSM9DS1_Driver.c **** 			tempRegValue |= (0x2 << 3);
 1608              		.loc 1 457 0
 1609 009c FB79     		ldrb	r3, [r7, #7]
 1610 009e 43F01003 		orr	r3, r3, #16
 1611 00a2 FB71     		strb	r3, [r7, #7]
 458:../LSM9DS1_Driver.c **** 			break;
 1612              		.loc 1 458 0
 1613 00a4 09E0     		b	.L73
 1614              	.L75:
 459:../LSM9DS1_Driver.c **** 		case 8:
 460:../LSM9DS1_Driver.c **** 			tempRegValue |= (0x3 << 3);
 1615              		.loc 1 460 0
 1616 00a6 FB79     		ldrb	r3, [r7, #7]
 1617 00a8 43F01803 		orr	r3, r3, #24
 1618 00ac FB71     		strb	r3, [r7, #7]
 461:../LSM9DS1_Driver.c **** 			break;
 1619              		.loc 1 461 0
 1620 00ae 04E0     		b	.L73
 1621              	.L76:
 462:../LSM9DS1_Driver.c **** 		case 16:
 463:../LSM9DS1_Driver.c **** 			tempRegValue |= (0x1 << 3);
 1622              		.loc 1 463 0
 1623 00b0 FB79     		ldrb	r3, [r7, #7]
 1624 00b2 43F00803 		orr	r3, r3, #8
 1625 00b6 FB71     		strb	r3, [r7, #7]
 464:../LSM9DS1_Driver.c **** 			break;
 1626              		.loc 1 464 0
 1627 00b8 00BF     		nop
 1628              	.L73:
 465:../LSM9DS1_Driver.c **** 		// Otherwise it'll be set to 2g (0x0 << 3)
 466:../LSM9DS1_Driver.c **** 	}
 467:../LSM9DS1_Driver.c **** 	if (settings.accel.bandwidth >= 0)
 1629              		.loc 1 467 0
 1630 00ba 40F20003 		movw	r3, #:lower16:settings
 1631 00be C0F20003 		movt	r3, #:upper16:settings
 1632 00c2 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 1633 00c4 5BB2     		sxtb	r3, r3
 1634 00c6 002B     		cmp	r3, #0
 1635 00c8 0FDB     		blt	.L77
 468:../LSM9DS1_Driver.c **** 	{
 469:../LSM9DS1_Driver.c **** 		tempRegValue |= (1<<2); // Set BW_SCAL_ODR
 1636              		.loc 1 469 0
 1637 00ca FB79     		ldrb	r3, [r7, #7]
 1638 00cc 43F00403 		orr	r3, r3, #4
 1639 00d0 FB71     		strb	r3, [r7, #7]
 470:../LSM9DS1_Driver.c **** 		tempRegValue |= (settings.accel.bandwidth & 0x03);
 1640              		.loc 1 470 0
 1641 00d2 40F20003 		movw	r3, #:lower16:settings
 1642 00d6 C0F20003 		movt	r3, #:upper16:settings
 1643 00da 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 1644 00dc 03F00303 		and	r3, r3, #3
 1645 00e0 DAB2     		uxtb	r2, r3
 1646 00e2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1647 00e4 1343     		orrs	r3, r3, r2
 1648 00e6 DBB2     		uxtb	r3, r3
 1649 00e8 FB71     		strb	r3, [r7, #7]
 1650              	.L77:
 471:../LSM9DS1_Driver.c **** 	}
 472:../LSM9DS1_Driver.c **** 	xgWriteByte(CTRL_REG6_XL, tempRegValue);
 1651              		.loc 1 472 0
 1652 00ea FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1653 00ec 4FF02000 		mov	r0, #32
 1654 00f0 1946     		mov	r1, r3
 1655 00f2 FFF7FEFF 		bl	xgWriteByte
 473:../LSM9DS1_Driver.c **** 
 474:../LSM9DS1_Driver.c **** 	// CTRL_REG7_XL (0x21) (Default value: 0x00)
 475:../LSM9DS1_Driver.c **** 	// [HR][DCF1][DCF0][0][0][FDS][0][HPIS1]
 476:../LSM9DS1_Driver.c **** 	// HR - High resolution mode (0: disable, 1: enable)
 477:../LSM9DS1_Driver.c **** 	// DCF[1:0] - Digital filter cutoff frequency
 478:../LSM9DS1_Driver.c **** 	// FDS - Filtered data selection
 479:../LSM9DS1_Driver.c **** 	// HPIS1 - HPF enabled for interrupt function
 480:../LSM9DS1_Driver.c **** 	tempRegValue = 0;
 1656              		.loc 1 480 0
 1657 00f6 4FF00003 		mov	r3, #0
 1658 00fa FB71     		strb	r3, [r7, #7]
 481:../LSM9DS1_Driver.c **** 	if (settings.accel.highResEnable)
 1659              		.loc 1 481 0
 1660 00fc 40F20003 		movw	r3, #:lower16:settings
 1661 0100 C0F20003 		movt	r3, #:upper16:settings
 1662 0104 5B7F     		ldrb	r3, [r3, #29]	@ zero_extendqisi2
 1663 0106 002B     		cmp	r3, #0
 1664 0108 11D0     		beq	.L78
 482:../LSM9DS1_Driver.c **** 	{
 483:../LSM9DS1_Driver.c **** 		tempRegValue |= (1<<7); // Set HR bit
 1665              		.loc 1 483 0
 1666 010a FB79     		ldrb	r3, [r7, #7]
 1667 010c 63F07F03 		orn	r3, r3, #127
 1668 0110 FB71     		strb	r3, [r7, #7]
 484:../LSM9DS1_Driver.c **** 		tempRegValue |= (settings.accel.highResBandwidth & 0x3) << 5;
 1669              		.loc 1 484 0
 1670 0112 40F20003 		movw	r3, #:lower16:settings
 1671 0116 C0F20003 		movt	r3, #:upper16:settings
 1672 011a 9B7F     		ldrb	r3, [r3, #30]	@ zero_extendqisi2
 1673 011c 03F00303 		and	r3, r3, #3
 1674 0120 4FEA4313 		lsl	r3, r3, #5
 1675 0124 DAB2     		uxtb	r2, r3
 1676 0126 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1677 0128 1343     		orrs	r3, r3, r2
 1678 012a DBB2     		uxtb	r3, r3
 1679 012c FB71     		strb	r3, [r7, #7]
 1680              	.L78:
 485:../LSM9DS1_Driver.c **** 	}
 486:../LSM9DS1_Driver.c **** 	xgWriteByte(CTRL_REG7_XL, tempRegValue);
 1681              		.loc 1 486 0
 1682 012e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1683 0130 4FF02100 		mov	r0, #33
 1684 0134 1946     		mov	r1, r3
 1685 0136 FFF7FEFF 		bl	xgWriteByte
 487:../LSM9DS1_Driver.c **** }
 1686              		.loc 1 487 0
 1687 013a 07F10807 		add	r7, r7, #8
 1688 013e BD46     		mov	sp, r7
 1689 0140 80BD     		pop	{r7, pc}
 1690              		.cfi_endproc
 1691              	.LFE132:
 1693 0142 00BF     		.section	.text.initMag,"ax",%progbits
 1694              		.align	2
 1695              		.global	initMag
 1696              		.thumb
 1697              		.thumb_func
 1699              	initMag:
 1700              	.LFB133:
 488:../LSM9DS1_Driver.c **** 
 489:../LSM9DS1_Driver.c **** void initMag(void)
 490:../LSM9DS1_Driver.c **** {
 1701              		.loc 1 490 0
 1702              		.cfi_startproc
 1703              		@ args = 0, pretend = 0, frame = 8
 1704              		@ frame_needed = 1, uses_anonymous_args = 0
 1705 0000 80B5     		push	{r7, lr}
 1706              	.LCFI42:
 1707              		.cfi_def_cfa_offset 8
 1708              		.cfi_offset 7, -8
 1709              		.cfi_offset 14, -4
 1710 0002 82B0     		sub	sp, sp, #8
 1711              	.LCFI43:
 1712              		.cfi_def_cfa_offset 16
 1713 0004 00AF     		add	r7, sp, #0
 1714              	.LCFI44:
 1715              		.cfi_def_cfa_register 7
 491:../LSM9DS1_Driver.c **** 	uint8_t tempRegValue = 0;
 1716              		.loc 1 491 0
 1717 0006 4FF00003 		mov	r3, #0
 1718 000a FB71     		strb	r3, [r7, #7]
 492:../LSM9DS1_Driver.c **** 
 493:../LSM9DS1_Driver.c **** 	// CTRL_REG1_M (Default value: 0x10)
 494:../LSM9DS1_Driver.c **** 	// [TEMP_COMP][OM1][OM0][DO2][DO1][DO0][0][ST]
 495:../LSM9DS1_Driver.c **** 	// TEMP_COMP - Temperature compensation
 496:../LSM9DS1_Driver.c **** 	// OM[1:0] - X & Y axes op mode selection
 497:../LSM9DS1_Driver.c **** 	//	00:low-power, 01:medium performance
 498:../LSM9DS1_Driver.c **** 	//	10: high performance, 11:ultra-high performance
 499:../LSM9DS1_Driver.c **** 	// DO[2:0] - Output data rate selection
 500:../LSM9DS1_Driver.c **** 	// ST - Self-test enable
 501:../LSM9DS1_Driver.c **** 	if (settings.mag.tempCompensationEnable) tempRegValue |= (1<<7);
 1719              		.loc 1 501 0
 1720 000c 40F20003 		movw	r3, #:lower16:settings
 1721 0010 C0F20003 		movt	r3, #:upper16:settings
 1722 0014 93F82230 		ldrb	r3, [r3, #34]	@ zero_extendqisi2
 1723 0018 002B     		cmp	r3, #0
 1724 001a 03D0     		beq	.L80
 1725              		.loc 1 501 0 is_stmt 0 discriminator 1
 1726 001c FB79     		ldrb	r3, [r7, #7]
 1727 001e 63F07F03 		orn	r3, r3, #127
 1728 0022 FB71     		strb	r3, [r7, #7]
 1729              	.L80:
 502:../LSM9DS1_Driver.c **** 	tempRegValue |= (settings.mag.XYPerformance & 0x3) << 5;
 1730              		.loc 1 502 0 is_stmt 1
 1731 0024 40F20003 		movw	r3, #:lower16:settings
 1732 0028 C0F20003 		movt	r3, #:upper16:settings
 1733 002c 93F82330 		ldrb	r3, [r3, #35]	@ zero_extendqisi2
 1734 0030 03F00303 		and	r3, r3, #3
 1735 0034 4FEA4313 		lsl	r3, r3, #5
 1736 0038 DAB2     		uxtb	r2, r3
 1737 003a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1738 003c 1343     		orrs	r3, r3, r2
 1739 003e DBB2     		uxtb	r3, r3
 1740 0040 FB71     		strb	r3, [r7, #7]
 503:../LSM9DS1_Driver.c **** 	tempRegValue |= (settings.mag.sampleRate & 0x7) << 2;
 1741              		.loc 1 503 0
 1742 0042 40F20003 		movw	r3, #:lower16:settings
 1743 0046 C0F20003 		movt	r3, #:upper16:settings
 1744 004a 93F82130 		ldrb	r3, [r3, #33]	@ zero_extendqisi2
 1745 004e 03F00703 		and	r3, r3, #7
 1746 0052 4FEA8303 		lsl	r3, r3, #2
 1747 0056 DAB2     		uxtb	r2, r3
 1748 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1749 005a 1343     		orrs	r3, r3, r2
 1750 005c DBB2     		uxtb	r3, r3
 1751 005e FB71     		strb	r3, [r7, #7]
 504:../LSM9DS1_Driver.c **** 	mWriteByte(CTRL_REG1_M, tempRegValue);
 1752              		.loc 1 504 0
 1753 0060 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1754 0062 4FF02000 		mov	r0, #32
 1755 0066 1946     		mov	r1, r3
 1756 0068 FFF7FEFF 		bl	mWriteByte
 505:../LSM9DS1_Driver.c **** 
 506:../LSM9DS1_Driver.c **** 	// CTRL_REG2_M (Default value 0x00)
 507:../LSM9DS1_Driver.c **** 	// [0][FS1][FS0][0][REBOOT][SOFT_RST][0][0]
 508:../LSM9DS1_Driver.c **** 	// FS[1:0] - Full-scale configuration
 509:../LSM9DS1_Driver.c **** 	// REBOOT - Reboot memory content (0:normal, 1:reboot)
 510:../LSM9DS1_Driver.c **** 	// SOFT_RST - Reset config and user registers (0:default, 1:reset)
 511:../LSM9DS1_Driver.c **** 	tempRegValue = 0;
 1757              		.loc 1 511 0
 1758 006c 4FF00003 		mov	r3, #0
 1759 0070 FB71     		strb	r3, [r7, #7]
 512:../LSM9DS1_Driver.c **** 	switch (settings.mag.scale)
 1760              		.loc 1 512 0
 1761 0072 40F20003 		movw	r3, #:lower16:settings
 1762 0076 C0F20003 		movt	r3, #:upper16:settings
 1763 007a 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 1764 007e 0C2B     		cmp	r3, #12
 1765 0080 08D0     		beq	.L83
 1766 0082 102B     		cmp	r3, #16
 1767 0084 0BD0     		beq	.L84
 1768 0086 082B     		cmp	r3, #8
 1769 0088 0ED1     		bne	.L81
 1770              	.L82:
 513:../LSM9DS1_Driver.c **** 	{
 514:../LSM9DS1_Driver.c **** 	case 8:
 515:../LSM9DS1_Driver.c **** 		tempRegValue |= (0x1 << 5);
 1771              		.loc 1 515 0
 1772 008a FB79     		ldrb	r3, [r7, #7]
 1773 008c 43F02003 		orr	r3, r3, #32
 1774 0090 FB71     		strb	r3, [r7, #7]
 516:../LSM9DS1_Driver.c **** 		break;
 1775              		.loc 1 516 0
 1776 0092 09E0     		b	.L81
 1777              	.L83:
 517:../LSM9DS1_Driver.c **** 	case 12:
 518:../LSM9DS1_Driver.c **** 		tempRegValue |= (0x2 << 5);
 1778              		.loc 1 518 0
 1779 0094 FB79     		ldrb	r3, [r7, #7]
 1780 0096 43F04003 		orr	r3, r3, #64
 1781 009a FB71     		strb	r3, [r7, #7]
 519:../LSM9DS1_Driver.c **** 		break;
 1782              		.loc 1 519 0
 1783 009c 04E0     		b	.L81
 1784              	.L84:
 520:../LSM9DS1_Driver.c **** 	case 16:
 521:../LSM9DS1_Driver.c **** 		tempRegValue |= (0x3 << 5);
 1785              		.loc 1 521 0
 1786 009e FB79     		ldrb	r3, [r7, #7]
 1787 00a0 43F06003 		orr	r3, r3, #96
 1788 00a4 FB71     		strb	r3, [r7, #7]
 522:../LSM9DS1_Driver.c **** 		break;
 1789              		.loc 1 522 0
 1790 00a6 00BF     		nop
 1791              	.L81:
 523:../LSM9DS1_Driver.c **** 	// Otherwise we'll default to 4 gauss (00)
 524:../LSM9DS1_Driver.c **** 	}
 525:../LSM9DS1_Driver.c **** 	mWriteByte(CTRL_REG2_M, tempRegValue); // +/-4Gauss
 1792              		.loc 1 525 0
 1793 00a8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1794 00aa 4FF02100 		mov	r0, #33
 1795 00ae 1946     		mov	r1, r3
 1796 00b0 FFF7FEFF 		bl	mWriteByte
 526:../LSM9DS1_Driver.c **** 
 527:../LSM9DS1_Driver.c **** 	// CTRL_REG3_M (Default value: 0x03)
 528:../LSM9DS1_Driver.c **** 	// [I2C_DISABLE][0][LP][0][0][SIM][MD1][MD0]
 529:../LSM9DS1_Driver.c **** 	// I2C_DISABLE - Disable I2C interace (0:enable, 1:disable)
 530:../LSM9DS1_Driver.c **** 	// LP - Low-power mode cofiguration (1:enable)
 531:../LSM9DS1_Driver.c **** 	// SIM - SPI mode selection (0:write-only, 1:read/write enable)
 532:../LSM9DS1_Driver.c **** 	// MD[1:0] - Operating mode
 533:../LSM9DS1_Driver.c **** 	//	00:continuous conversion, 01:single-conversion,
 534:../LSM9DS1_Driver.c **** 	//  10,11: Power-down
 535:../LSM9DS1_Driver.c **** 	tempRegValue = 0;
 1797              		.loc 1 535 0
 1798 00b4 4FF00003 		mov	r3, #0
 1799 00b8 FB71     		strb	r3, [r7, #7]
 536:../LSM9DS1_Driver.c **** 	if (settings.mag.lowPowerEnable) tempRegValue |= (1<<5);
 1800              		.loc 1 536 0
 1801 00ba 40F20003 		movw	r3, #:lower16:settings
 1802 00be C0F20003 		movt	r3, #:upper16:settings
 1803 00c2 93F82530 		ldrb	r3, [r3, #37]	@ zero_extendqisi2
 1804 00c6 002B     		cmp	r3, #0
 1805 00c8 03D0     		beq	.L85
 1806              		.loc 1 536 0 is_stmt 0 discriminator 1
 1807 00ca FB79     		ldrb	r3, [r7, #7]
 1808 00cc 43F02003 		orr	r3, r3, #32
 1809 00d0 FB71     		strb	r3, [r7, #7]
 1810              	.L85:
 537:../LSM9DS1_Driver.c **** 	tempRegValue |= (settings.mag.operatingMode & 0x3);
 1811              		.loc 1 537 0 is_stmt 1
 1812 00d2 40F20003 		movw	r3, #:lower16:settings
 1813 00d6 C0F20003 		movt	r3, #:upper16:settings
 1814 00da 93F82630 		ldrb	r3, [r3, #38]	@ zero_extendqisi2
 1815 00de DBB2     		uxtb	r3, r3
 1816 00e0 03F00303 		and	r3, r3, #3
 1817 00e4 DAB2     		uxtb	r2, r3
 1818 00e6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1819 00e8 1343     		orrs	r3, r3, r2
 1820 00ea DBB2     		uxtb	r3, r3
 1821 00ec FB71     		strb	r3, [r7, #7]
 538:../LSM9DS1_Driver.c **** 	mWriteByte(CTRL_REG3_M, tempRegValue); // Continuous conversion mode
 1822              		.loc 1 538 0
 1823 00ee FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1824 00f0 4FF02200 		mov	r0, #34
 1825 00f4 1946     		mov	r1, r3
 1826 00f6 FFF7FEFF 		bl	mWriteByte
 539:../LSM9DS1_Driver.c **** 
 540:../LSM9DS1_Driver.c **** 	// CTRL_REG4_M (Default value: 0x00)
 541:../LSM9DS1_Driver.c **** 	// [0][0][0][0][OMZ1][OMZ0][BLE][0]
 542:../LSM9DS1_Driver.c **** 	// OMZ[1:0] - Z-axis operative mode selection
 543:../LSM9DS1_Driver.c **** 	//	00:low-power mode, 01:medium performance
 544:../LSM9DS1_Driver.c **** 	//	10:high performance, 10:ultra-high performance
 545:../LSM9DS1_Driver.c **** 	// BLE - Big/little endian data
 546:../LSM9DS1_Driver.c **** 	tempRegValue = 0;
 1827              		.loc 1 546 0
 1828 00fa 4FF00003 		mov	r3, #0
 1829 00fe FB71     		strb	r3, [r7, #7]
 547:../LSM9DS1_Driver.c **** 	tempRegValue = (settings.mag.ZPerformance & 0x3) << 2;
 1830              		.loc 1 547 0
 1831 0100 40F20003 		movw	r3, #:lower16:settings
 1832 0104 C0F20003 		movt	r3, #:upper16:settings
 1833 0108 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 1834 010c 03F00303 		and	r3, r3, #3
 1835 0110 DBB2     		uxtb	r3, r3
 1836 0112 4FEA8303 		lsl	r3, r3, #2
 1837 0116 FB71     		strb	r3, [r7, #7]
 548:../LSM9DS1_Driver.c **** 	mWriteByte(CTRL_REG4_M, tempRegValue);
 1838              		.loc 1 548 0
 1839 0118 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1840 011a 4FF02300 		mov	r0, #35
 1841 011e 1946     		mov	r1, r3
 1842 0120 FFF7FEFF 		bl	mWriteByte
 549:../LSM9DS1_Driver.c **** 
 550:../LSM9DS1_Driver.c **** 	// CTRL_REG5_M (Default value: 0x00)
 551:../LSM9DS1_Driver.c **** 	// [0][BDU][0][0][0][0][0][0]
 552:../LSM9DS1_Driver.c **** 	// BDU - Block data update for magnetic data
 553:../LSM9DS1_Driver.c **** 	//	0:continuous, 1:not updated until MSB/LSB are read
 554:../LSM9DS1_Driver.c **** 	tempRegValue = 0;
 1843              		.loc 1 554 0
 1844 0124 4FF00003 		mov	r3, #0
 1845 0128 FB71     		strb	r3, [r7, #7]
 555:../LSM9DS1_Driver.c **** 	mWriteByte(CTRL_REG5_M, tempRegValue);
 1846              		.loc 1 555 0
 1847 012a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1848 012c 4FF02400 		mov	r0, #36
 1849 0130 1946     		mov	r1, r3
 1850 0132 FFF7FEFF 		bl	mWriteByte
 556:../LSM9DS1_Driver.c **** }
 1851              		.loc 1 556 0
 1852 0136 07F10807 		add	r7, r7, #8
 1853 013a BD46     		mov	sp, r7
 1854 013c 80BD     		pop	{r7, pc}
 1855              		.cfi_endproc
 1856              	.LFE133:
 1858 013e 00BF     		.section	.text.mWriteByte,"ax",%progbits
 1859              		.align	2
 1860              		.global	mWriteByte
 1861              		.thumb
 1862              		.thumb_func
 1864              	mWriteByte:
 1865              	.LFB134:
 557:../LSM9DS1_Driver.c **** 
 558:../LSM9DS1_Driver.c **** void mWriteByte(uint8_t subAddress, uint8_t data)
 559:../LSM9DS1_Driver.c **** {
 1866              		.loc 1 559 0
 1867              		.cfi_startproc
 1868              		@ args = 0, pretend = 0, frame = 8
 1869              		@ frame_needed = 1, uses_anonymous_args = 0
 1870 0000 80B5     		push	{r7, lr}
 1871              	.LCFI45:
 1872              		.cfi_def_cfa_offset 8
 1873              		.cfi_offset 7, -8
 1874              		.cfi_offset 14, -4
 1875 0002 82B0     		sub	sp, sp, #8
 1876              	.LCFI46:
 1877              		.cfi_def_cfa_offset 16
 1878 0004 00AF     		add	r7, sp, #0
 1879              	.LCFI47:
 1880              		.cfi_def_cfa_register 7
 1881 0006 0246     		mov	r2, r0
 1882 0008 0B46     		mov	r3, r1
 1883 000a FA71     		strb	r2, [r7, #7]
 1884 000c BB71     		strb	r3, [r7, #6]
 560:../LSM9DS1_Driver.c **** 	// Whether we're using I2C or SPI, write a byte using the
 561:../LSM9DS1_Driver.c **** 	// accelerometer-specific I2C address or SPI CS pin.
 562:../LSM9DS1_Driver.c **** 	if (settings.device.commInterface == IMU_MODE_I2C)
 1885              		.loc 1 562 0
 1886 000e 40F20003 		movw	r3, #:lower16:settings
 1887 0012 C0F20003 		movt	r3, #:upper16:settings
 1888 0016 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1889 0018 012B     		cmp	r3, #1
 1890 001a 0CD1     		bne	.L86
 563:../LSM9DS1_Driver.c **** 	{
 564:../LSM9DS1_Driver.c **** 		return I2CwriteByte(_mAddress, subAddress, data);
 1891              		.loc 1 564 0
 1892 001c 40F20003 		movw	r3, #:lower16:_mAddress
 1893 0020 C0F20003 		movt	r3, #:upper16:_mAddress
 1894 0024 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 1895 0026 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1896 0028 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1897 002a 0846     		mov	r0, r1
 1898 002c 1146     		mov	r1, r2
 1899 002e 1A46     		mov	r2, r3
 1900 0030 FFF7FEFF 		bl	I2CwriteByte
 1901 0034 00BF     		nop
 1902              	.L86:
 565:../LSM9DS1_Driver.c **** 	}
 566:../LSM9DS1_Driver.c **** }
 1903              		.loc 1 566 0
 1904 0036 07F10807 		add	r7, r7, #8
 1905 003a BD46     		mov	sp, r7
 1906 003c 80BD     		pop	{r7, pc}
 1907              		.cfi_endproc
 1908              	.LFE134:
 1910 003e 00BF     		.section	.text.enableFIFO,"ax",%progbits
 1911              		.align	2
 1912              		.global	enableFIFO
 1913              		.thumb
 1914              		.thumb_func
 1916              	enableFIFO:
 1917              	.LFB135:
 567:../LSM9DS1_Driver.c **** 
 568:../LSM9DS1_Driver.c **** void enableFIFO(bool enable)
 569:../LSM9DS1_Driver.c **** {
 1918              		.loc 1 569 0
 1919              		.cfi_startproc
 1920              		@ args = 0, pretend = 0, frame = 16
 1921              		@ frame_needed = 1, uses_anonymous_args = 0
 1922 0000 80B5     		push	{r7, lr}
 1923              	.LCFI48:
 1924              		.cfi_def_cfa_offset 8
 1925              		.cfi_offset 7, -8
 1926              		.cfi_offset 14, -4
 1927 0002 84B0     		sub	sp, sp, #16
 1928              	.LCFI49:
 1929              		.cfi_def_cfa_offset 24
 1930 0004 00AF     		add	r7, sp, #0
 1931              	.LCFI50:
 1932              		.cfi_def_cfa_register 7
 1933 0006 0346     		mov	r3, r0
 1934 0008 FB71     		strb	r3, [r7, #7]
 570:../LSM9DS1_Driver.c **** 	uint8_t temp = xgReadByte(CTRL_REG9);
 1935              		.loc 1 570 0
 1936 000a 4FF02300 		mov	r0, #35
 1937 000e FFF7FEFF 		bl	xgReadByte
 1938 0012 0346     		mov	r3, r0
 1939 0014 FB73     		strb	r3, [r7, #15]
 571:../LSM9DS1_Driver.c **** 	if(enable)
 1940              		.loc 1 571 0
 1941 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1942 0018 002B     		cmp	r3, #0
 1943 001a 04D0     		beq	.L89
 572:../LSM9DS1_Driver.c **** 	{
 573:../LSM9DS1_Driver.c **** 		temp |= (1<<1);
 1944              		.loc 1 573 0
 1945 001c FB7B     		ldrb	r3, [r7, #15]
 1946 001e 43F00203 		orr	r3, r3, #2
 1947 0022 FB73     		strb	r3, [r7, #15]
 1948 0024 03E0     		b	.L90
 1949              	.L89:
 574:../LSM9DS1_Driver.c **** 	}
 575:../LSM9DS1_Driver.c **** 	else
 576:../LSM9DS1_Driver.c **** 	{
 577:../LSM9DS1_Driver.c **** 		temp &= ~(1<<1);
 1950              		.loc 1 577 0
 1951 0026 FB7B     		ldrb	r3, [r7, #15]
 1952 0028 23F00203 		bic	r3, r3, #2
 1953 002c FB73     		strb	r3, [r7, #15]
 1954              	.L90:
 578:../LSM9DS1_Driver.c **** 	}
 579:../LSM9DS1_Driver.c **** 
 580:../LSM9DS1_Driver.c **** 	xgWriteByte(CTRL_REG9, temp);
 1955              		.loc 1 580 0
 1956 002e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1957 0030 4FF02300 		mov	r0, #35
 1958 0034 1946     		mov	r1, r3
 1959 0036 FFF7FEFF 		bl	xgWriteByte
 581:../LSM9DS1_Driver.c **** }
 1960              		.loc 1 581 0
 1961 003a 07F11007 		add	r7, r7, #16
 1962 003e BD46     		mov	sp, r7
 1963 0040 80BD     		pop	{r7, pc}
 1964              		.cfi_endproc
 1965              	.LFE135:
 1967 0042 00BF     		.section	.text.setFIFO,"ax",%progbits
 1968              		.align	2
 1969              		.global	setFIFO
 1970              		.thumb
 1971              		.thumb_func
 1973              	setFIFO:
 1974              	.LFB136:
 582:../LSM9DS1_Driver.c **** 
 583:../LSM9DS1_Driver.c **** void setFIFO(fifoMode_type fifoMode, uint8_t fifoThs)
 584:../LSM9DS1_Driver.c **** {
 1975              		.loc 1 584 0
 1976              		.cfi_startproc
 1977              		@ args = 0, pretend = 0, frame = 16
 1978              		@ frame_needed = 1, uses_anonymous_args = 0
 1979 0000 80B5     		push	{r7, lr}
 1980              	.LCFI51:
 1981              		.cfi_def_cfa_offset 8
 1982              		.cfi_offset 7, -8
 1983              		.cfi_offset 14, -4
 1984 0002 84B0     		sub	sp, sp, #16
 1985              	.LCFI52:
 1986              		.cfi_def_cfa_offset 24
 1987 0004 00AF     		add	r7, sp, #0
 1988              	.LCFI53:
 1989              		.cfi_def_cfa_register 7
 1990 0006 0246     		mov	r2, r0
 1991 0008 0B46     		mov	r3, r1
 1992 000a FA71     		strb	r2, [r7, #7]
 1993 000c BB71     		strb	r3, [r7, #6]
 585:../LSM9DS1_Driver.c **** 	// Limit threshold - 0x1F (31) is the maximum. If more than that was asked
 586:../LSM9DS1_Driver.c **** 	// limit it to the maximum.
 587:../LSM9DS1_Driver.c **** 	uint8_t threshold = fifoThs <= 0x1F ? fifoThs : 0x1F;
 1994              		.loc 1 587 0
 1995 000e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1996 0010 1F2B     		cmp	r3, #31
 1997 0012 28BF     		it	cs
 1998 0014 1F23     		movcs	r3, #31
 1999 0016 FB73     		strb	r3, [r7, #15]
 588:../LSM9DS1_Driver.c **** 	xgWriteByte(FIFO_CTRL, ((fifoMode & 0x7) << 5) | (threshold & 0x1F));
 2000              		.loc 1 588 0
 2001 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2002 001a 4FEA4313 		lsl	r3, r3, #5
 2003 001e DAB2     		uxtb	r2, r3
 2004 0020 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2005 0022 03F01F03 		and	r3, r3, #31
 2006 0026 DBB2     		uxtb	r3, r3
 2007 0028 1343     		orrs	r3, r3, r2
 2008 002a DBB2     		uxtb	r3, r3
 2009 002c DBB2     		uxtb	r3, r3
 2010 002e 4FF02E00 		mov	r0, #46
 2011 0032 1946     		mov	r1, r3
 2012 0034 FFF7FEFF 		bl	xgWriteByte
 589:../LSM9DS1_Driver.c **** }
 2013              		.loc 1 589 0
 2014 0038 07F11007 		add	r7, r7, #16
 2015 003c BD46     		mov	sp, r7
 2016 003e 80BD     		pop	{r7, pc}
 2017              		.cfi_endproc
 2018              	.LFE136:
 2020              		.global	__aeabi_f2d
 2021              		.global	__aeabi_ddiv
 2022              		.global	__aeabi_d2iz
 2023              		.section	.text.calibrate,"ax",%progbits
 2024              		.align	2
 2025              		.global	calibrate
 2026              		.thumb
 2027              		.thumb_func
 2029              	calibrate:
 2030              	.LFB137:
 590:../LSM9DS1_Driver.c **** 
 591:../LSM9DS1_Driver.c **** void calibrate(bool autoCalc)
 592:../LSM9DS1_Driver.c **** {
 2031              		.loc 1 592 0
 2032              		.cfi_startproc
 2033              		@ args = 0, pretend = 0, frame = 48
 2034              		@ frame_needed = 1, uses_anonymous_args = 0
 2035 0000 B0B5     		push	{r4, r5, r7, lr}
 2036              	.LCFI54:
 2037              		.cfi_def_cfa_offset 16
 2038              		.cfi_offset 4, -16
 2039              		.cfi_offset 5, -12
 2040              		.cfi_offset 7, -8
 2041              		.cfi_offset 14, -4
 2042 0002 8CB0     		sub	sp, sp, #48
 2043              	.LCFI55:
 2044              		.cfi_def_cfa_offset 64
 2045 0004 00AF     		add	r7, sp, #0
 2046              	.LCFI56:
 2047              		.cfi_def_cfa_register 7
 2048 0006 0346     		mov	r3, r0
 2049 0008 FB71     		strb	r3, [r7, #7]
 593:../LSM9DS1_Driver.c **** 	uint8_t data[6] = {0, 0, 0, 0, 0, 0};
 2050              		.loc 1 593 0
 2051 000a 4FF00003 		mov	r3, #0
 2052 000e 87F82430 		strb	r3, [r7, #36]
 2053 0012 4FF00003 		mov	r3, #0
 2054 0016 87F82530 		strb	r3, [r7, #37]
 2055 001a 4FF00003 		mov	r3, #0
 2056 001e 87F82630 		strb	r3, [r7, #38]
 2057 0022 4FF00003 		mov	r3, #0
 2058 0026 87F82730 		strb	r3, [r7, #39]
 2059 002a 4FF00003 		mov	r3, #0
 2060 002e 87F82830 		strb	r3, [r7, #40]
 2061 0032 4FF00003 		mov	r3, #0
 2062 0036 87F82930 		strb	r3, [r7, #41]
 594:../LSM9DS1_Driver.c **** 	uint8_t samples = 0;
 2063              		.loc 1 594 0
 2064 003a 4FF00003 		mov	r3, #0
 2065 003e 87F82B30 		strb	r3, [r7, #43]
 595:../LSM9DS1_Driver.c **** 	int ii;
 596:../LSM9DS1_Driver.c **** 	int32_t aBiasRawTemp[3] = {0, 0, 0};
 2066              		.loc 1 596 0
 2067 0042 4FF00003 		mov	r3, #0
 2068 0046 BB61     		str	r3, [r7, #24]
 2069 0048 4FF00003 		mov	r3, #0
 2070 004c FB61     		str	r3, [r7, #28]
 2071 004e 4FF00003 		mov	r3, #0
 2072 0052 3B62     		str	r3, [r7, #32]
 597:../LSM9DS1_Driver.c **** 	int32_t gBiasRawTemp[3] = {0, 0, 0};
 2073              		.loc 1 597 0
 2074 0054 4FF00003 		mov	r3, #0
 2075 0058 FB60     		str	r3, [r7, #12]
 2076 005a 4FF00003 		mov	r3, #0
 2077 005e 3B61     		str	r3, [r7, #16]
 2078 0060 4FF00003 		mov	r3, #0
 2079 0064 7B61     		str	r3, [r7, #20]
 598:../LSM9DS1_Driver.c **** 
 599:../LSM9DS1_Driver.c **** 	// Turn on FIFO and set threshold to 32 samples
 600:../LSM9DS1_Driver.c **** 	enableFIFO(TRUE);
 2080              		.loc 1 600 0
 2081 0066 4FF00100 		mov	r0, #1
 2082 006a FFF7FEFF 		bl	enableFIFO
 601:../LSM9DS1_Driver.c **** 	setFIFO(FIFO_THS, 0x1F);
 2083              		.loc 1 601 0
 2084 006e 4FF00100 		mov	r0, #1
 2085 0072 4FF01F01 		mov	r1, #31
 2086 0076 FFF7FEFF 		bl	setFIFO
 602:../LSM9DS1_Driver.c **** 	/*while (samples < 29)
 603:../LSM9DS1_Driver.c **** 	{*/
 604:../LSM9DS1_Driver.c **** 		samples = (xgReadByte(FIFO_SRC) & 0x3F); // Read number of stored samples
 2087              		.loc 1 604 0
 2088 007a 4FF02F00 		mov	r0, #47
 2089 007e FFF7FEFF 		bl	xgReadByte
 2090 0082 0346     		mov	r3, r0
 2091 0084 03F03F03 		and	r3, r3, #63
 2092 0088 87F82B30 		strb	r3, [r7, #43]
 605:../LSM9DS1_Driver.c **** 		//samples = 10;
 606:../LSM9DS1_Driver.c **** 	//}
 607:../LSM9DS1_Driver.c **** 	for(ii = 0; ii < samples ; ii++)
 2093              		.loc 1 607 0
 2094 008c 4FF00003 		mov	r3, #0
 2095 0090 FB62     		str	r3, [r7, #44]
 2096 0092 59E0     		b	.L93
 2097              	.L94:
 608:../LSM9DS1_Driver.c **** 	{	// Read the gyro data stored in the FIFO
 609:../LSM9DS1_Driver.c **** 		readGyro1();
 2098              		.loc 1 609 0 discriminator 2
 2099 0094 FFF7FEFF 		bl	readGyro1
 610:../LSM9DS1_Driver.c **** 		gBiasRawTemp[0] += gx;
 2100              		.loc 1 610 0 discriminator 2
 2101 0098 FA68     		ldr	r2, [r7, #12]
 2102 009a 40F20003 		movw	r3, #:lower16:gx
 2103 009e C0F20003 		movt	r3, #:upper16:gx
 2104 00a2 1B88     		ldrh	r3, [r3, #0]
 2105 00a4 1BB2     		sxth	r3, r3
 2106 00a6 D318     		adds	r3, r2, r3
 2107 00a8 FB60     		str	r3, [r7, #12]
 611:../LSM9DS1_Driver.c **** 		gBiasRawTemp[1] += gy;
 2108              		.loc 1 611 0 discriminator 2
 2109 00aa 3A69     		ldr	r2, [r7, #16]
 2110 00ac 40F20003 		movw	r3, #:lower16:gy
 2111 00b0 C0F20003 		movt	r3, #:upper16:gy
 2112 00b4 1B88     		ldrh	r3, [r3, #0]
 2113 00b6 1BB2     		sxth	r3, r3
 2114 00b8 D318     		adds	r3, r2, r3
 2115 00ba 3B61     		str	r3, [r7, #16]
 612:../LSM9DS1_Driver.c **** 		gBiasRawTemp[2] += gz;
 2116              		.loc 1 612 0 discriminator 2
 2117 00bc 7A69     		ldr	r2, [r7, #20]
 2118 00be 40F20003 		movw	r3, #:lower16:gz
 2119 00c2 C0F20003 		movt	r3, #:upper16:gz
 2120 00c6 1B88     		ldrh	r3, [r3, #0]
 2121 00c8 1BB2     		sxth	r3, r3
 2122 00ca D318     		adds	r3, r2, r3
 2123 00cc 7B61     		str	r3, [r7, #20]
 613:../LSM9DS1_Driver.c **** 
 614:../LSM9DS1_Driver.c **** 		readAccel1();
 2124              		.loc 1 614 0 discriminator 2
 2125 00ce FFF7FEFF 		bl	readAccel1
 615:../LSM9DS1_Driver.c **** 		aBiasRawTemp[0] += ax;
 2126              		.loc 1 615 0 discriminator 2
 2127 00d2 BA69     		ldr	r2, [r7, #24]
 2128 00d4 40F20003 		movw	r3, #:lower16:ax
 2129 00d8 C0F20003 		movt	r3, #:upper16:ax
 2130 00dc 1B88     		ldrh	r3, [r3, #0]
 2131 00de 1BB2     		sxth	r3, r3
 2132 00e0 D318     		adds	r3, r2, r3
 2133 00e2 BB61     		str	r3, [r7, #24]
 616:../LSM9DS1_Driver.c **** 		aBiasRawTemp[1] += ay;
 2134              		.loc 1 616 0 discriminator 2
 2135 00e4 FA69     		ldr	r2, [r7, #28]
 2136 00e6 40F20003 		movw	r3, #:lower16:ay
 2137 00ea C0F20003 		movt	r3, #:upper16:ay
 2138 00ee 1B88     		ldrh	r3, [r3, #0]
 2139 00f0 1BB2     		sxth	r3, r3
 2140 00f2 D318     		adds	r3, r2, r3
 2141 00f4 FB61     		str	r3, [r7, #28]
 617:../LSM9DS1_Driver.c **** 		aBiasRawTemp[2] += az - (int16_t)(1./aRes); // Assumes sensor facing up!
 2142              		.loc 1 617 0 discriminator 2
 2143 00f6 3C6A     		ldr	r4, [r7, #32]
 2144 00f8 40F20003 		movw	r3, #:lower16:az
 2145 00fc C0F20003 		movt	r3, #:upper16:az
 2146 0100 1B88     		ldrh	r3, [r3, #0]
 2147 0102 1DB2     		sxth	r5, r3
 2148 0104 40F20003 		movw	r3, #:lower16:aRes
 2149 0108 C0F20003 		movt	r3, #:upper16:aRes
 2150 010c 1B68     		ldr	r3, [r3, #0]	@ float
 2151 010e 1846     		mov	r0, r3	@ float
 2152 0110 FFF7FEFF 		bl	__aeabi_f2d
 2153 0114 0246     		mov	r2, r0
 2154 0116 0B46     		mov	r3, r1
 2155 0118 4FF00000 		mov	r0, #0
 2156 011c 4FF00001 		mov	r1, #0
 2157 0120 C3F6F071 		movt	r1, 16368
 2158 0124 FFF7FEFF 		bl	__aeabi_ddiv
 2159 0128 0246     		mov	r2, r0
 2160 012a 0B46     		mov	r3, r1
 2161 012c 1046     		mov	r0, r2
 2162 012e 1946     		mov	r1, r3
 2163 0130 FFF7FEFF 		bl	__aeabi_d2iz
 2164 0134 0346     		mov	r3, r0
 2165 0136 9BB2     		uxth	r3, r3
 2166 0138 1BB2     		sxth	r3, r3
 2167 013a EB1A     		subs	r3, r5, r3
 2168 013c E318     		adds	r3, r4, r3
 2169 013e 3B62     		str	r3, [r7, #32]
 607:../LSM9DS1_Driver.c **** 	for(ii = 0; ii < samples ; ii++)
 2170              		.loc 1 607 0 discriminator 2
 2171 0140 FB6A     		ldr	r3, [r7, #44]
 2172 0142 03F10103 		add	r3, r3, #1
 2173 0146 FB62     		str	r3, [r7, #44]
 2174              	.L93:
 607:../LSM9DS1_Driver.c **** 	for(ii = 0; ii < samples ; ii++)
 2175              		.loc 1 607 0 is_stmt 0 discriminator 1
 2176 0148 97F82B20 		ldrb	r2, [r7, #43]	@ zero_extendqisi2
 2177 014c FB6A     		ldr	r3, [r7, #44]
 2178 014e 9A42     		cmp	r2, r3
 2179 0150 A0DC     		bgt	.L94
 618:../LSM9DS1_Driver.c **** 	}
 619:../LSM9DS1_Driver.c **** 	for (ii = 0; ii < samples/*3*/; ii++)
 2180              		.loc 1 619 0 is_stmt 1
 2181 0152 4FF00003 		mov	r3, #0
 2182 0156 FB62     		str	r3, [r7, #44]
 2183 0158 55E0     		b	.L95
 2184              	.L96:
 620:../LSM9DS1_Driver.c **** 	{
 621:../LSM9DS1_Driver.c **** 		gBiasRaw[ii] = gBiasRawTemp[ii] / samples;
 2185              		.loc 1 621 0 discriminator 2
 2186 015a FB6A     		ldr	r3, [r7, #44]
 2187 015c 4FEA8303 		lsl	r3, r3, #2
 2188 0160 07F13002 		add	r2, r7, #48
 2189 0164 D318     		adds	r3, r2, r3
 2190 0166 53F8242C 		ldr	r2, [r3, #-36]
 2191 016a 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 2192 016e 92FBF3F3 		sdiv	r3, r2, r3
 2193 0172 99B2     		uxth	r1, r3
 2194 0174 40F20003 		movw	r3, #:lower16:gBiasRaw
 2195 0178 C0F20003 		movt	r3, #:upper16:gBiasRaw
 2196 017c FA6A     		ldr	r2, [r7, #44]
 2197 017e 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 622:../LSM9DS1_Driver.c **** 		gBias[ii] = calcGyro(gBiasRaw[ii]);
 2198              		.loc 1 622 0 discriminator 2
 2199 0182 40F20003 		movw	r3, #:lower16:gBiasRaw
 2200 0186 C0F20003 		movt	r3, #:upper16:gBiasRaw
 2201 018a FA6A     		ldr	r2, [r7, #44]
 2202 018c 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 2203 0190 1BB2     		sxth	r3, r3
 2204 0192 1846     		mov	r0, r3
 2205 0194 FFF7FEFF 		bl	calcGyro
 2206 0198 0246     		mov	r2, r0	@ float
 2207 019a 40F20003 		movw	r3, #:lower16:gBias
 2208 019e C0F20003 		movt	r3, #:upper16:gBias
 2209 01a2 F96A     		ldr	r1, [r7, #44]
 2210 01a4 4FEA8101 		lsl	r1, r1, #2
 2211 01a8 5B18     		adds	r3, r3, r1
 2212 01aa 1A60     		str	r2, [r3, #0]	@ float
 623:../LSM9DS1_Driver.c **** 		aBiasRaw[ii] = aBiasRawTemp[ii] / samples;
 2213              		.loc 1 623 0 discriminator 2
 2214 01ac FB6A     		ldr	r3, [r7, #44]
 2215 01ae 4FEA8303 		lsl	r3, r3, #2
 2216 01b2 07F13002 		add	r2, r7, #48
 2217 01b6 D318     		adds	r3, r2, r3
 2218 01b8 53F8182C 		ldr	r2, [r3, #-24]
 2219 01bc 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 2220 01c0 92FBF3F3 		sdiv	r3, r2, r3
 2221 01c4 99B2     		uxth	r1, r3
 2222 01c6 40F20003 		movw	r3, #:lower16:aBiasRaw
 2223 01ca C0F20003 		movt	r3, #:upper16:aBiasRaw
 2224 01ce FA6A     		ldr	r2, [r7, #44]
 2225 01d0 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 624:../LSM9DS1_Driver.c **** 		aBias[ii] = calcAccel(aBiasRaw[ii]);
 2226              		.loc 1 624 0 discriminator 2
 2227 01d4 40F20003 		movw	r3, #:lower16:aBiasRaw
 2228 01d8 C0F20003 		movt	r3, #:upper16:aBiasRaw
 2229 01dc FA6A     		ldr	r2, [r7, #44]
 2230 01de 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 2231 01e2 1BB2     		sxth	r3, r3
 2232 01e4 1846     		mov	r0, r3
 2233 01e6 FFF7FEFF 		bl	calcAccel
 2234 01ea 0246     		mov	r2, r0	@ float
 2235 01ec 40F20003 		movw	r3, #:lower16:aBias
 2236 01f0 C0F20003 		movt	r3, #:upper16:aBias
 2237 01f4 F96A     		ldr	r1, [r7, #44]
 2238 01f6 4FEA8101 		lsl	r1, r1, #2
 2239 01fa 5B18     		adds	r3, r3, r1
 2240 01fc 1A60     		str	r2, [r3, #0]	@ float
 619:../LSM9DS1_Driver.c **** 	for (ii = 0; ii < samples/*3*/; ii++)
 2241              		.loc 1 619 0 discriminator 2
 2242 01fe FB6A     		ldr	r3, [r7, #44]
 2243 0200 03F10103 		add	r3, r3, #1
 2244 0204 FB62     		str	r3, [r7, #44]
 2245              	.L95:
 619:../LSM9DS1_Driver.c **** 	for (ii = 0; ii < samples/*3*/; ii++)
 2246              		.loc 1 619 0 is_stmt 0 discriminator 1
 2247 0206 97F82B20 		ldrb	r2, [r7, #43]	@ zero_extendqisi2
 2248 020a FB6A     		ldr	r3, [r7, #44]
 2249 020c 9A42     		cmp	r2, r3
 2250 020e A4DC     		bgt	.L96
 625:../LSM9DS1_Driver.c **** 	}
 626:../LSM9DS1_Driver.c **** 
 627:../LSM9DS1_Driver.c **** 	enableFIFO(FALSE);
 2251              		.loc 1 627 0 is_stmt 1
 2252 0210 4FF00000 		mov	r0, #0
 2253 0214 FFF7FEFF 		bl	enableFIFO
 628:../LSM9DS1_Driver.c **** 	setFIFO(FIFO_OFF, 0x00);
 2254              		.loc 1 628 0
 2255 0218 4FF00000 		mov	r0, #0
 2256 021c 4FF00001 		mov	r1, #0
 2257 0220 FFF7FEFF 		bl	setFIFO
 629:../LSM9DS1_Driver.c **** 
 630:../LSM9DS1_Driver.c **** 	if (autoCalc) _autoCalc = TRUE;
 2258              		.loc 1 630 0
 2259 0224 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2260 0226 002B     		cmp	r3, #0
 2261 0228 06D0     		beq	.L92
 2262              		.loc 1 630 0 is_stmt 0 discriminator 1
 2263 022a 40F20003 		movw	r3, #:lower16:_autoCalc
 2264 022e C0F20003 		movt	r3, #:upper16:_autoCalc
 2265 0232 4FF00102 		mov	r2, #1
 2266 0236 1A70     		strb	r2, [r3, #0]
 2267              	.L92:
 631:../LSM9DS1_Driver.c **** }
 2268              		.loc 1 631 0 is_stmt 1
 2269 0238 07F13007 		add	r7, r7, #48
 2270 023c BD46     		mov	sp, r7
 2271 023e B0BD     		pop	{r4, r5, r7, pc}
 2272              		.cfi_endproc
 2273              	.LFE137:
 2275              		.section	.text.xgReadBytes,"ax",%progbits
 2276              		.align	2
 2277              		.global	xgReadBytes
 2278              		.thumb
 2279              		.thumb_func
 2281              	xgReadBytes:
 2282              	.LFB138:
 632:../LSM9DS1_Driver.c **** 
 633:../LSM9DS1_Driver.c **** 
 634:../LSM9DS1_Driver.c **** void xgReadBytes(uint8_t subAddress, uint8_t * dest, uint8_t count)
 635:../LSM9DS1_Driver.c **** {
 2283              		.loc 1 635 0
 2284              		.cfi_startproc
 2285              		@ args = 0, pretend = 0, frame = 8
 2286              		@ frame_needed = 1, uses_anonymous_args = 0
 2287 0000 80B5     		push	{r7, lr}
 2288              	.LCFI57:
 2289              		.cfi_def_cfa_offset 8
 2290              		.cfi_offset 7, -8
 2291              		.cfi_offset 14, -4
 2292 0002 82B0     		sub	sp, sp, #8
 2293              	.LCFI58:
 2294              		.cfi_def_cfa_offset 16
 2295 0004 00AF     		add	r7, sp, #0
 2296              	.LCFI59:
 2297              		.cfi_def_cfa_register 7
 2298 0006 3960     		str	r1, [r7, #0]
 2299 0008 1346     		mov	r3, r2
 2300 000a 0246     		mov	r2, r0
 2301 000c FA71     		strb	r2, [r7, #7]
 2302 000e BB71     		strb	r3, [r7, #6]
 636:../LSM9DS1_Driver.c **** 	// Whether we're using I2C or SPI, read multiple bytes using the
 637:../LSM9DS1_Driver.c **** 	// gyro-specific I2C address or SPI CS pin.
 638:../LSM9DS1_Driver.c **** 	if (settings.device.commInterface == IMU_MODE_I2C)
 2303              		.loc 1 638 0
 2304 0010 40F20003 		movw	r3, #:lower16:settings
 2305 0014 C0F20003 		movt	r3, #:upper16:settings
 2306 0018 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2307 001a 012B     		cmp	r3, #1
 2308 001c 0CD1     		bne	.L99
 639:../LSM9DS1_Driver.c **** 		I2CreadBytes(_xgAddress, subAddress, dest, count);
 2309              		.loc 1 639 0
 2310 001e 40F20003 		movw	r3, #:lower16:_xgAddress
 2311 0022 C0F20003 		movt	r3, #:upper16:_xgAddress
 2312 0026 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 2313 0028 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2314 002a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2315 002c 0846     		mov	r0, r1
 2316 002e 1146     		mov	r1, r2
 2317 0030 3A68     		ldr	r2, [r7, #0]
 2318 0032 FFF7FEFF 		bl	I2CreadBytes
 2319 0036 12E0     		b	.L98
 2320              	.L99:
 640:../LSM9DS1_Driver.c **** 		//I2CreadBytes1(_xgAddress, subAddress, dest, count);
 641:../LSM9DS1_Driver.c **** 	else if (settings.device.commInterface == IMU_MODE_SPI)
 2321              		.loc 1 641 0
 2322 0038 40F20003 		movw	r3, #:lower16:settings
 2323 003c C0F20003 		movt	r3, #:upper16:settings
 2324 0040 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2325 0042 002B     		cmp	r3, #0
 2326 0044 0BD1     		bne	.L98
 642:../LSM9DS1_Driver.c **** 		SPIreadBytes(_xgAddress, subAddress, dest, count);
 2327              		.loc 1 642 0
 2328 0046 40F20003 		movw	r3, #:lower16:_xgAddress
 2329 004a C0F20003 		movt	r3, #:upper16:_xgAddress
 2330 004e 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 2331 0050 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2332 0052 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2333 0054 0846     		mov	r0, r1
 2334 0056 1146     		mov	r1, r2
 2335 0058 3A68     		ldr	r2, [r7, #0]
 2336 005a FFF7FEFF 		bl	SPIreadBytes
 2337              	.L98:
 643:../LSM9DS1_Driver.c **** }
 2338              		.loc 1 643 0
 2339 005e 07F10807 		add	r7, r7, #8
 2340 0062 BD46     		mov	sp, r7
 2341 0064 80BD     		pop	{r7, pc}
 2342              		.cfi_endproc
 2343              	.LFE138:
 2345              		.section	.text.SPIreadBytes,"ax",%progbits
 2346              		.align	2
 2347              		.global	SPIreadBytes
 2348              		.thumb
 2349              		.thumb_func
 2351              	SPIreadBytes:
 2352              	.LFB139:
 644:../LSM9DS1_Driver.c **** 
 645:../LSM9DS1_Driver.c **** void SPIreadBytes(uint8_t csPin, uint8_t subAddress, uint8_t * dest, uint8_t count)
 646:../LSM9DS1_Driver.c **** {
 2353              		.loc 1 646 0
 2354              		.cfi_startproc
 2355              		@ args = 0, pretend = 0, frame = 8
 2356              		@ frame_needed = 1, uses_anonymous_args = 0
 2357              		@ link register save eliminated.
 2358 0000 80B4     		push	{r7}
 2359              	.LCFI60:
 2360              		.cfi_def_cfa_offset 4
 2361              		.cfi_offset 7, -4
 2362 0002 83B0     		sub	sp, sp, #12
 2363              	.LCFI61:
 2364              		.cfi_def_cfa_offset 16
 2365 0004 00AF     		add	r7, sp, #0
 2366              	.LCFI62:
 2367              		.cfi_def_cfa_register 7
 2368 0006 3A60     		str	r2, [r7, #0]
 2369 0008 0246     		mov	r2, r0
 2370 000a FA71     		strb	r2, [r7, #7]
 2371 000c 0A46     		mov	r2, r1
 2372 000e BA71     		strb	r2, [r7, #6]
 2373 0010 7B71     		strb	r3, [r7, #5]
 647:../LSM9DS1_Driver.c **** 	;
 648:../LSM9DS1_Driver.c **** }
 2374              		.loc 1 648 0
 2375 0012 07F10C07 		add	r7, r7, #12
 2376 0016 BD46     		mov	sp, r7
 2377 0018 80BC     		pop	{r7}
 2378 001a 7047     		bx	lr
 2379              		.cfi_endproc
 2380              	.LFE139:
 2382              		.section	.text.readGyro1,"ax",%progbits
 2383              		.align	2
 2384              		.global	readGyro1
 2385              		.thumb
 2386              		.thumb_func
 2388              	readGyro1:
 2389              	.LFB140:
 649:../LSM9DS1_Driver.c **** 
 650:../LSM9DS1_Driver.c **** void readGyro1(void)
 651:../LSM9DS1_Driver.c **** {
 2390              		.loc 1 651 0
 2391              		.cfi_startproc
 2392              		@ args = 0, pretend = 0, frame = 8
 2393              		@ frame_needed = 1, uses_anonymous_args = 0
 2394 0000 90B5     		push	{r4, r7, lr}
 2395              	.LCFI63:
 2396              		.cfi_def_cfa_offset 12
 2397              		.cfi_offset 4, -12
 2398              		.cfi_offset 7, -8
 2399              		.cfi_offset 14, -4
 2400 0002 83B0     		sub	sp, sp, #12
 2401              	.LCFI64:
 2402              		.cfi_def_cfa_offset 24
 2403 0004 00AF     		add	r7, sp, #0
 2404              	.LCFI65:
 2405              		.cfi_def_cfa_register 7
 652:../LSM9DS1_Driver.c **** 	uint8_t i = 0; //licznik dla czytania
 2406              		.loc 1 652 0
 2407 0006 4FF00003 		mov	r3, #0
 2408 000a FB71     		strb	r3, [r7, #7]
 653:../LSM9DS1_Driver.c **** 	uint8_t temp[6]; // We'll read six bytes from the gyro into temp
 654:../LSM9DS1_Driver.c **** 	uint8_t subAddr = OUT_X_L_G;
 2409              		.loc 1 654 0
 2410 000c 4FF01803 		mov	r3, #24
 2411 0010 BB71     		strb	r3, [r7, #6]
 655:../LSM9DS1_Driver.c **** 
 656:../LSM9DS1_Driver.c **** 
 657:../LSM9DS1_Driver.c **** 	while(i < 6)
 2412              		.loc 1 657 0
 2413 0012 24E0     		b	.L103
 2414              	.L104:
 658:../LSM9DS1_Driver.c **** 	{
 659:../LSM9DS1_Driver.c **** 		subAddr = OUT_X_L_G;
 2415              		.loc 1 659 0
 2416 0014 4FF01803 		mov	r3, #24
 2417 0018 BB71     		strb	r3, [r7, #6]
 660:../LSM9DS1_Driver.c **** 		subAddr = subAddr + i;
 2418              		.loc 1 660 0
 2419 001a BA79     		ldrb	r2, [r7, #6]
 2420 001c FB79     		ldrb	r3, [r7, #7]
 2421 001e D318     		adds	r3, r2, r3
 2422 0020 BB71     		strb	r3, [r7, #6]
 661:../LSM9DS1_Driver.c **** 		temp[i] = I2CreadBytes(_xgAddress, subAddr, NULL, 0);
 2423              		.loc 1 661 0
 2424 0022 FC79     		ldrb	r4, [r7, #7]	@ zero_extendqisi2
 2425 0024 40F20003 		movw	r3, #:lower16:_xgAddress
 2426 0028 C0F20003 		movt	r3, #:upper16:_xgAddress
 2427 002c 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 2428 002e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2429 0030 1046     		mov	r0, r2
 2430 0032 1946     		mov	r1, r3
 2431 0034 4FF00002 		mov	r2, #0
 2432 0038 4FF00003 		mov	r3, #0
 2433 003c FFF7FEFF 		bl	I2CreadBytes
 2434 0040 0346     		mov	r3, r0
 2435 0042 1A46     		mov	r2, r3
 2436 0044 07F10801 		add	r1, r7, #8
 2437 0048 0B19     		adds	r3, r1, r4
 2438 004a 03F8082C 		strb	r2, [r3, #-8]
 662:../LSM9DS1_Driver.c **** 		delay(10000);
 2439              		.loc 1 662 0
 2440 004e 42F21070 		movw	r0, #10000
 2441 0052 FFF7FEFF 		bl	delay
 663:../LSM9DS1_Driver.c **** 		i++;
 2442              		.loc 1 663 0
 2443 0056 FB79     		ldrb	r3, [r7, #7]
 2444 0058 03F10103 		add	r3, r3, #1
 2445 005c FB71     		strb	r3, [r7, #7]
 2446              	.L103:
 657:../LSM9DS1_Driver.c **** 	while(i < 6)
 2447              		.loc 1 657 0 discriminator 1
 2448 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2449 0060 052B     		cmp	r3, #5
 2450 0062 D7D9     		bls	.L104
 664:../LSM9DS1_Driver.c **** 	}
 665:../LSM9DS1_Driver.c **** 
 666:../LSM9DS1_Driver.c **** 	gx = ((int8_t)temp[1] << 8) | (int8_t)temp[0]; // Store x-axis values into gx
 2451              		.loc 1 666 0
 2452 0064 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 2453 0066 DBB2     		uxtb	r3, r3
 2454 0068 5BB2     		sxtb	r3, r3
 2455 006a 4FEA0323 		lsl	r3, r3, #8
 2456 006e 9AB2     		uxth	r2, r3
 2457 0070 3B78     		ldrb	r3, [r7, #0]	@ zero_extendqisi2
 2458 0072 DBB2     		uxtb	r3, r3
 2459 0074 5BB2     		sxtb	r3, r3
 2460 0076 9BB2     		uxth	r3, r3
 2461 0078 1343     		orrs	r3, r3, r2
 2462 007a 9AB2     		uxth	r2, r3
 2463 007c 40F20003 		movw	r3, #:lower16:gx
 2464 0080 C0F20003 		movt	r3, #:upper16:gx
 2465 0084 1A80     		strh	r2, [r3, #0]	@ movhi
 667:../LSM9DS1_Driver.c **** 
 668:../LSM9DS1_Driver.c **** 	gy = (temp[3] << 8) | temp[2]; // Store y-axis values into gy
 2466              		.loc 1 668 0
 2467 0086 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2468 0088 4FEA0323 		lsl	r3, r3, #8
 2469 008c 9AB2     		uxth	r2, r3
 2470 008e BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 2471 0090 1343     		orrs	r3, r3, r2
 2472 0092 9AB2     		uxth	r2, r3
 2473 0094 40F20003 		movw	r3, #:lower16:gy
 2474 0098 C0F20003 		movt	r3, #:upper16:gy
 2475 009c 1A80     		strh	r2, [r3, #0]	@ movhi
 669:../LSM9DS1_Driver.c **** 
 670:../LSM9DS1_Driver.c **** 	gz = (temp[5] << 8) | temp[4]; // Store z-axis values into gz
 2476              		.loc 1 670 0
 2477 009e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2478 00a0 4FEA0323 		lsl	r3, r3, #8
 2479 00a4 9AB2     		uxth	r2, r3
 2480 00a6 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 2481 00a8 1343     		orrs	r3, r3, r2
 2482 00aa 9AB2     		uxth	r2, r3
 2483 00ac 40F20003 		movw	r3, #:lower16:gz
 2484 00b0 C0F20003 		movt	r3, #:upper16:gz
 2485 00b4 1A80     		strh	r2, [r3, #0]	@ movhi
 671:../LSM9DS1_Driver.c **** 
 672:../LSM9DS1_Driver.c **** 
 673:../LSM9DS1_Driver.c **** 
 674:../LSM9DS1_Driver.c **** 	if (_autoCalc) //kalibracja
 2486              		.loc 1 674 0
 2487 00b6 40F20003 		movw	r3, #:lower16:_autoCalc
 2488 00ba C0F20003 		movt	r3, #:upper16:_autoCalc
 2489 00be 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2490 00c0 002B     		cmp	r3, #0
 2491 00c2 3BD0     		beq	.L102
 675:../LSM9DS1_Driver.c **** 	{
 676:../LSM9DS1_Driver.c **** 		gx -= gBiasRaw[X_AXIS];
 2492              		.loc 1 676 0
 2493 00c4 40F20003 		movw	r3, #:lower16:gx
 2494 00c8 C0F20003 		movt	r3, #:upper16:gx
 2495 00cc 1B88     		ldrh	r3, [r3, #0]
 2496 00ce 9AB2     		uxth	r2, r3
 2497 00d0 40F20003 		movw	r3, #:lower16:gBiasRaw
 2498 00d4 C0F20003 		movt	r3, #:upper16:gBiasRaw
 2499 00d8 1B88     		ldrh	r3, [r3, #0]
 2500 00da 9BB2     		uxth	r3, r3
 2501 00dc D31A     		subs	r3, r2, r3
 2502 00de 9BB2     		uxth	r3, r3
 2503 00e0 9AB2     		uxth	r2, r3
 2504 00e2 40F20003 		movw	r3, #:lower16:gx
 2505 00e6 C0F20003 		movt	r3, #:upper16:gx
 2506 00ea 1A80     		strh	r2, [r3, #0]	@ movhi
 677:../LSM9DS1_Driver.c **** 		gy -= gBiasRaw[Y_AXIS];
 2507              		.loc 1 677 0
 2508 00ec 40F20003 		movw	r3, #:lower16:gy
 2509 00f0 C0F20003 		movt	r3, #:upper16:gy
 2510 00f4 1B88     		ldrh	r3, [r3, #0]
 2511 00f6 9AB2     		uxth	r2, r3
 2512 00f8 40F20003 		movw	r3, #:lower16:gBiasRaw
 2513 00fc C0F20003 		movt	r3, #:upper16:gBiasRaw
 2514 0100 5B88     		ldrh	r3, [r3, #2]
 2515 0102 9BB2     		uxth	r3, r3
 2516 0104 D31A     		subs	r3, r2, r3
 2517 0106 9BB2     		uxth	r3, r3
 2518 0108 9AB2     		uxth	r2, r3
 2519 010a 40F20003 		movw	r3, #:lower16:gy
 2520 010e C0F20003 		movt	r3, #:upper16:gy
 2521 0112 1A80     		strh	r2, [r3, #0]	@ movhi
 678:../LSM9DS1_Driver.c **** 		gz -= gBiasRaw[Z_AXIS];
 2522              		.loc 1 678 0
 2523 0114 40F20003 		movw	r3, #:lower16:gz
 2524 0118 C0F20003 		movt	r3, #:upper16:gz
 2525 011c 1B88     		ldrh	r3, [r3, #0]
 2526 011e 9AB2     		uxth	r2, r3
 2527 0120 40F20003 		movw	r3, #:lower16:gBiasRaw
 2528 0124 C0F20003 		movt	r3, #:upper16:gBiasRaw
 2529 0128 9B88     		ldrh	r3, [r3, #4]
 2530 012a 9BB2     		uxth	r3, r3
 2531 012c D31A     		subs	r3, r2, r3
 2532 012e 9BB2     		uxth	r3, r3
 2533 0130 9AB2     		uxth	r2, r3
 2534 0132 40F20003 		movw	r3, #:lower16:gz
 2535 0136 C0F20003 		movt	r3, #:upper16:gz
 2536 013a 1A80     		strh	r2, [r3, #0]	@ movhi
 2537              	.L102:
 679:../LSM9DS1_Driver.c **** 	}
 680:../LSM9DS1_Driver.c **** 	/*gx = calcGyro(gx);
 681:../LSM9DS1_Driver.c **** 	gy = calcGyro(gy);
 682:../LSM9DS1_Driver.c **** 	gz = calcGyro(gz);*/
 683:../LSM9DS1_Driver.c **** }
 2538              		.loc 1 683 0
 2539 013c 07F10C07 		add	r7, r7, #12
 2540 0140 BD46     		mov	sp, r7
 2541 0142 90BD     		pop	{r4, r7, pc}
 2542              		.cfi_endproc
 2543              	.LFE140:
 2545              		.section	.text.readAccel1,"ax",%progbits
 2546              		.align	2
 2547              		.global	readAccel1
 2548              		.thumb
 2549              		.thumb_func
 2551              	readAccel1:
 2552              	.LFB141:
 684:../LSM9DS1_Driver.c **** 
 685:../LSM9DS1_Driver.c **** void readAccel1(void)
 686:../LSM9DS1_Driver.c **** {
 2553              		.loc 1 686 0
 2554              		.cfi_startproc
 2555              		@ args = 0, pretend = 0, frame = 8
 2556              		@ frame_needed = 1, uses_anonymous_args = 0
 2557 0000 90B5     		push	{r4, r7, lr}
 2558              	.LCFI66:
 2559              		.cfi_def_cfa_offset 12
 2560              		.cfi_offset 4, -12
 2561              		.cfi_offset 7, -8
 2562              		.cfi_offset 14, -4
 2563 0002 83B0     		sub	sp, sp, #12
 2564              	.LCFI67:
 2565              		.cfi_def_cfa_offset 24
 2566 0004 00AF     		add	r7, sp, #0
 2567              	.LCFI68:
 2568              		.cfi_def_cfa_register 7
 687:../LSM9DS1_Driver.c **** 	uint8_t i = 0; //licznik dla czytania
 2569              		.loc 1 687 0
 2570 0006 4FF00003 		mov	r3, #0
 2571 000a FB71     		strb	r3, [r7, #7]
 688:../LSM9DS1_Driver.c **** 	uint8_t temp[6]; // We'll read six bytes from the gyro into temp
 689:../LSM9DS1_Driver.c **** 	uint8_t subAddr = OUT_X_L_XL;
 2572              		.loc 1 689 0
 2573 000c 4FF02803 		mov	r3, #40
 2574 0010 BB71     		strb	r3, [r7, #6]
 690:../LSM9DS1_Driver.c **** 
 691:../LSM9DS1_Driver.c **** 	while(i < 6)
 2575              		.loc 1 691 0
 2576 0012 20E0     		b	.L107
 2577              	.L108:
 692:../LSM9DS1_Driver.c **** 	{
 693:../LSM9DS1_Driver.c **** 		subAddr = OUT_X_L_XL;
 2578              		.loc 1 693 0
 2579 0014 4FF02803 		mov	r3, #40
 2580 0018 BB71     		strb	r3, [r7, #6]
 694:../LSM9DS1_Driver.c **** 		subAddr = subAddr + i;
 2581              		.loc 1 694 0
 2582 001a BA79     		ldrb	r2, [r7, #6]
 2583 001c FB79     		ldrb	r3, [r7, #7]
 2584 001e D318     		adds	r3, r2, r3
 2585 0020 BB71     		strb	r3, [r7, #6]
 695:../LSM9DS1_Driver.c **** 		temp[i] = I2CreadBytes(_xgAddress, subAddr, NULL, 0);
 2586              		.loc 1 695 0
 2587 0022 FC79     		ldrb	r4, [r7, #7]	@ zero_extendqisi2
 2588 0024 40F20003 		movw	r3, #:lower16:_xgAddress
 2589 0028 C0F20003 		movt	r3, #:upper16:_xgAddress
 2590 002c 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 2591 002e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2592 0030 1046     		mov	r0, r2
 2593 0032 1946     		mov	r1, r3
 2594 0034 4FF00002 		mov	r2, #0
 2595 0038 4FF00003 		mov	r3, #0
 2596 003c FFF7FEFF 		bl	I2CreadBytes
 2597 0040 0346     		mov	r3, r0
 2598 0042 1A46     		mov	r2, r3
 2599 0044 07F10801 		add	r1, r7, #8
 2600 0048 0B19     		adds	r3, r1, r4
 2601 004a 03F8082C 		strb	r2, [r3, #-8]
 696:../LSM9DS1_Driver.c **** 		i++;
 2602              		.loc 1 696 0
 2603 004e FB79     		ldrb	r3, [r7, #7]
 2604 0050 03F10103 		add	r3, r3, #1
 2605 0054 FB71     		strb	r3, [r7, #7]
 2606              	.L107:
 691:../LSM9DS1_Driver.c **** 	while(i < 6)
 2607              		.loc 1 691 0 discriminator 1
 2608 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2609 0058 052B     		cmp	r3, #5
 2610 005a DBD9     		bls	.L108
 697:../LSM9DS1_Driver.c **** 	}
 698:../LSM9DS1_Driver.c **** 
 699:../LSM9DS1_Driver.c **** 	ax = (temp[1] << 8) | temp[0]; // Store x-axis values into ax
 2611              		.loc 1 699 0
 2612 005c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 2613 005e 4FEA0323 		lsl	r3, r3, #8
 2614 0062 9AB2     		uxth	r2, r3
 2615 0064 3B78     		ldrb	r3, [r7, #0]	@ zero_extendqisi2
 2616 0066 1343     		orrs	r3, r3, r2
 2617 0068 9AB2     		uxth	r2, r3
 2618 006a 40F20003 		movw	r3, #:lower16:ax
 2619 006e C0F20003 		movt	r3, #:upper16:ax
 2620 0072 1A80     		strh	r2, [r3, #0]	@ movhi
 700:../LSM9DS1_Driver.c **** 	ay = (temp[3] << 8) | temp[2]; // Store y-axis values into ay
 2621              		.loc 1 700 0
 2622 0074 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2623 0076 4FEA0323 		lsl	r3, r3, #8
 2624 007a 9AB2     		uxth	r2, r3
 2625 007c BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 2626 007e 1343     		orrs	r3, r3, r2
 2627 0080 9AB2     		uxth	r2, r3
 2628 0082 40F20003 		movw	r3, #:lower16:ay
 2629 0086 C0F20003 		movt	r3, #:upper16:ay
 2630 008a 1A80     		strh	r2, [r3, #0]	@ movhi
 701:../LSM9DS1_Driver.c **** 	az = (temp[5] << 8) | temp[4]; // Store z-axis values into az
 2631              		.loc 1 701 0
 2632 008c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2633 008e 4FEA0323 		lsl	r3, r3, #8
 2634 0092 9AB2     		uxth	r2, r3
 2635 0094 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 2636 0096 1343     		orrs	r3, r3, r2
 2637 0098 9AB2     		uxth	r2, r3
 2638 009a 40F20003 		movw	r3, #:lower16:az
 2639 009e C0F20003 		movt	r3, #:upper16:az
 2640 00a2 1A80     		strh	r2, [r3, #0]	@ movhi
 702:../LSM9DS1_Driver.c **** 
 703:../LSM9DS1_Driver.c **** 	if (_autoCalc) //kalibracja
 2641              		.loc 1 703 0
 2642 00a4 40F20003 		movw	r3, #:lower16:_autoCalc
 2643 00a8 C0F20003 		movt	r3, #:upper16:_autoCalc
 2644 00ac 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2645 00ae 002B     		cmp	r3, #0
 2646 00b0 3BD0     		beq	.L106
 704:../LSM9DS1_Driver.c **** 	{
 705:../LSM9DS1_Driver.c **** 		ax -= aBiasRaw[X_AXIS];
 2647              		.loc 1 705 0
 2648 00b2 40F20003 		movw	r3, #:lower16:ax
 2649 00b6 C0F20003 		movt	r3, #:upper16:ax
 2650 00ba 1B88     		ldrh	r3, [r3, #0]
 2651 00bc 9AB2     		uxth	r2, r3
 2652 00be 40F20003 		movw	r3, #:lower16:aBiasRaw
 2653 00c2 C0F20003 		movt	r3, #:upper16:aBiasRaw
 2654 00c6 1B88     		ldrh	r3, [r3, #0]
 2655 00c8 9BB2     		uxth	r3, r3
 2656 00ca D31A     		subs	r3, r2, r3
 2657 00cc 9BB2     		uxth	r3, r3
 2658 00ce 9AB2     		uxth	r2, r3
 2659 00d0 40F20003 		movw	r3, #:lower16:ax
 2660 00d4 C0F20003 		movt	r3, #:upper16:ax
 2661 00d8 1A80     		strh	r2, [r3, #0]	@ movhi
 706:../LSM9DS1_Driver.c **** 		ay -= aBiasRaw[Y_AXIS];
 2662              		.loc 1 706 0
 2663 00da 40F20003 		movw	r3, #:lower16:ay
 2664 00de C0F20003 		movt	r3, #:upper16:ay
 2665 00e2 1B88     		ldrh	r3, [r3, #0]
 2666 00e4 9AB2     		uxth	r2, r3
 2667 00e6 40F20003 		movw	r3, #:lower16:aBiasRaw
 2668 00ea C0F20003 		movt	r3, #:upper16:aBiasRaw
 2669 00ee 5B88     		ldrh	r3, [r3, #2]
 2670 00f0 9BB2     		uxth	r3, r3
 2671 00f2 D31A     		subs	r3, r2, r3
 2672 00f4 9BB2     		uxth	r3, r3
 2673 00f6 9AB2     		uxth	r2, r3
 2674 00f8 40F20003 		movw	r3, #:lower16:ay
 2675 00fc C0F20003 		movt	r3, #:upper16:ay
 2676 0100 1A80     		strh	r2, [r3, #0]	@ movhi
 707:../LSM9DS1_Driver.c **** 		az -= aBiasRaw[Z_AXIS];
 2677              		.loc 1 707 0
 2678 0102 40F20003 		movw	r3, #:lower16:az
 2679 0106 C0F20003 		movt	r3, #:upper16:az
 2680 010a 1B88     		ldrh	r3, [r3, #0]
 2681 010c 9AB2     		uxth	r2, r3
 2682 010e 40F20003 		movw	r3, #:lower16:aBiasRaw
 2683 0112 C0F20003 		movt	r3, #:upper16:aBiasRaw
 2684 0116 9B88     		ldrh	r3, [r3, #4]
 2685 0118 9BB2     		uxth	r3, r3
 2686 011a D31A     		subs	r3, r2, r3
 2687 011c 9BB2     		uxth	r3, r3
 2688 011e 9AB2     		uxth	r2, r3
 2689 0120 40F20003 		movw	r3, #:lower16:az
 2690 0124 C0F20003 		movt	r3, #:upper16:az
 2691 0128 1A80     		strh	r2, [r3, #0]	@ movhi
 2692              	.L106:
 708:../LSM9DS1_Driver.c **** 	}
 709:../LSM9DS1_Driver.c **** 
 710:../LSM9DS1_Driver.c **** 	/*ax = calcAccel(ax);
 711:../LSM9DS1_Driver.c **** 	ay = calcAccel(ay);
 712:../LSM9DS1_Driver.c **** 	az = calcAccel(az);*/
 713:../LSM9DS1_Driver.c **** }
 2693              		.loc 1 713 0
 2694 012a 07F10C07 		add	r7, r7, #12
 2695 012e BD46     		mov	sp, r7
 2696 0130 90BD     		pop	{r4, r7, pc}
 2697              		.cfi_endproc
 2698              	.LFE141:
 2700 0132 00BF     		.section	.text.readAccelToSensor,"ax",%progbits
 2701              		.align	2
 2702              		.global	readAccelToSensor
 2703              		.thumb
 2704              		.thumb_func
 2706              	readAccelToSensor:
 2707              	.LFB142:
 714:../LSM9DS1_Driver.c **** 
 715:../LSM9DS1_Driver.c **** void readAccelToSensor(accel *pomiar)
 716:../LSM9DS1_Driver.c **** {
 2708              		.loc 1 716 0
 2709              		.cfi_startproc
 2710              		@ args = 0, pretend = 0, frame = 16
 2711              		@ frame_needed = 1, uses_anonymous_args = 0
 2712 0000 90B5     		push	{r4, r7, lr}
 2713              	.LCFI69:
 2714              		.cfi_def_cfa_offset 12
 2715              		.cfi_offset 4, -12
 2716              		.cfi_offset 7, -8
 2717              		.cfi_offset 14, -4
 2718 0002 85B0     		sub	sp, sp, #20
 2719              	.LCFI70:
 2720              		.cfi_def_cfa_offset 32
 2721 0004 00AF     		add	r7, sp, #0
 2722              	.LCFI71:
 2723              		.cfi_def_cfa_register 7
 2724 0006 7860     		str	r0, [r7, #4]
 717:../LSM9DS1_Driver.c **** 	uint8_t i = 0; //licznik dla czytania
 2725              		.loc 1 717 0
 2726 0008 4FF00003 		mov	r3, #0
 2727 000c FB73     		strb	r3, [r7, #15]
 718:../LSM9DS1_Driver.c **** 	uint8_t temp[6]; // We'll read six bytes from the gyro into temp
 719:../LSM9DS1_Driver.c **** 	uint8_t subAddr = OUT_X_L_XL;
 2728              		.loc 1 719 0
 2729 000e 4FF02803 		mov	r3, #40
 2730 0012 BB73     		strb	r3, [r7, #14]
 720:../LSM9DS1_Driver.c **** 
 721:../LSM9DS1_Driver.c **** 	while(i < 6)
 2731              		.loc 1 721 0
 2732 0014 20E0     		b	.L111
 2733              	.L112:
 722:../LSM9DS1_Driver.c **** 	{
 723:../LSM9DS1_Driver.c **** 		subAddr = OUT_X_L_XL;
 2734              		.loc 1 723 0
 2735 0016 4FF02803 		mov	r3, #40
 2736 001a BB73     		strb	r3, [r7, #14]
 724:../LSM9DS1_Driver.c **** 		subAddr = subAddr + i;
 2737              		.loc 1 724 0
 2738 001c BA7B     		ldrb	r2, [r7, #14]
 2739 001e FB7B     		ldrb	r3, [r7, #15]
 2740 0020 D318     		adds	r3, r2, r3
 2741 0022 BB73     		strb	r3, [r7, #14]
 725:../LSM9DS1_Driver.c **** 		temp[i] = I2CreadBytes(_xgAddress, subAddr, NULL, 0);
 2742              		.loc 1 725 0
 2743 0024 FC7B     		ldrb	r4, [r7, #15]	@ zero_extendqisi2
 2744 0026 40F20003 		movw	r3, #:lower16:_xgAddress
 2745 002a C0F20003 		movt	r3, #:upper16:_xgAddress
 2746 002e 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 2747 0030 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 2748 0032 1046     		mov	r0, r2
 2749 0034 1946     		mov	r1, r3
 2750 0036 4FF00002 		mov	r2, #0
 2751 003a 4FF00003 		mov	r3, #0
 2752 003e FFF7FEFF 		bl	I2CreadBytes
 2753 0042 0346     		mov	r3, r0
 2754 0044 1A46     		mov	r2, r3
 2755 0046 07F11001 		add	r1, r7, #16
 2756 004a 0B19     		adds	r3, r1, r4
 2757 004c 03F8082C 		strb	r2, [r3, #-8]
 726:../LSM9DS1_Driver.c **** 		i++;
 2758              		.loc 1 726 0
 2759 0050 FB7B     		ldrb	r3, [r7, #15]
 2760 0052 03F10103 		add	r3, r3, #1
 2761 0056 FB73     		strb	r3, [r7, #15]
 2762              	.L111:
 721:../LSM9DS1_Driver.c **** 	while(i < 6)
 2763              		.loc 1 721 0 discriminator 1
 2764 0058 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2765 005a 052B     		cmp	r3, #5
 2766 005c DBD9     		bls	.L112
 727:../LSM9DS1_Driver.c **** 	}
 728:../LSM9DS1_Driver.c **** 
 729:../LSM9DS1_Driver.c **** 	ax = (temp[1] << 8) | temp[0]; // Store x-axis values into ax
 2767              		.loc 1 729 0
 2768 005e 7B7A     		ldrb	r3, [r7, #9]	@ zero_extendqisi2
 2769 0060 4FEA0323 		lsl	r3, r3, #8
 2770 0064 9AB2     		uxth	r2, r3
 2771 0066 3B7A     		ldrb	r3, [r7, #8]	@ zero_extendqisi2
 2772 0068 1343     		orrs	r3, r3, r2
 2773 006a 9AB2     		uxth	r2, r3
 2774 006c 40F20003 		movw	r3, #:lower16:ax
 2775 0070 C0F20003 		movt	r3, #:upper16:ax
 2776 0074 1A80     		strh	r2, [r3, #0]	@ movhi
 730:../LSM9DS1_Driver.c **** 	ay = (temp[3] << 8) | temp[2]; // Store y-axis values into ay
 2777              		.loc 1 730 0
 2778 0076 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 2779 0078 4FEA0323 		lsl	r3, r3, #8
 2780 007c 9AB2     		uxth	r2, r3
 2781 007e BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 2782 0080 1343     		orrs	r3, r3, r2
 2783 0082 9AB2     		uxth	r2, r3
 2784 0084 40F20003 		movw	r3, #:lower16:ay
 2785 0088 C0F20003 		movt	r3, #:upper16:ay
 2786 008c 1A80     		strh	r2, [r3, #0]	@ movhi
 731:../LSM9DS1_Driver.c **** 	az = (temp[5] << 8) | temp[4]; // Store z-axis values into az
 2787              		.loc 1 731 0
 2788 008e 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 2789 0090 4FEA0323 		lsl	r3, r3, #8
 2790 0094 9AB2     		uxth	r2, r3
 2791 0096 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 2792 0098 1343     		orrs	r3, r3, r2
 2793 009a 9AB2     		uxth	r2, r3
 2794 009c 40F20003 		movw	r3, #:lower16:az
 2795 00a0 C0F20003 		movt	r3, #:upper16:az
 2796 00a4 1A80     		strh	r2, [r3, #0]	@ movhi
 732:../LSM9DS1_Driver.c **** 
 733:../LSM9DS1_Driver.c **** 	if (_autoCalc) //kalibracja
 2797              		.loc 1 733 0
 2798 00a6 40F20003 		movw	r3, #:lower16:_autoCalc
 2799 00aa C0F20003 		movt	r3, #:upper16:_autoCalc
 2800 00ae 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2801 00b0 002B     		cmp	r3, #0
 2802 00b2 3BD0     		beq	.L113
 734:../LSM9DS1_Driver.c **** 	{
 735:../LSM9DS1_Driver.c **** 		ax -= aBiasRaw[X_AXIS];
 2803              		.loc 1 735 0
 2804 00b4 40F20003 		movw	r3, #:lower16:ax
 2805 00b8 C0F20003 		movt	r3, #:upper16:ax
 2806 00bc 1B88     		ldrh	r3, [r3, #0]
 2807 00be 9AB2     		uxth	r2, r3
 2808 00c0 40F20003 		movw	r3, #:lower16:aBiasRaw
 2809 00c4 C0F20003 		movt	r3, #:upper16:aBiasRaw
 2810 00c8 1B88     		ldrh	r3, [r3, #0]
 2811 00ca 9BB2     		uxth	r3, r3
 2812 00cc D31A     		subs	r3, r2, r3
 2813 00ce 9BB2     		uxth	r3, r3
 2814 00d0 9AB2     		uxth	r2, r3
 2815 00d2 40F20003 		movw	r3, #:lower16:ax
 2816 00d6 C0F20003 		movt	r3, #:upper16:ax
 2817 00da 1A80     		strh	r2, [r3, #0]	@ movhi
 736:../LSM9DS1_Driver.c **** 		ay -= aBiasRaw[Y_AXIS];
 2818              		.loc 1 736 0
 2819 00dc 40F20003 		movw	r3, #:lower16:ay
 2820 00e0 C0F20003 		movt	r3, #:upper16:ay
 2821 00e4 1B88     		ldrh	r3, [r3, #0]
 2822 00e6 9AB2     		uxth	r2, r3
 2823 00e8 40F20003 		movw	r3, #:lower16:aBiasRaw
 2824 00ec C0F20003 		movt	r3, #:upper16:aBiasRaw
 2825 00f0 5B88     		ldrh	r3, [r3, #2]
 2826 00f2 9BB2     		uxth	r3, r3
 2827 00f4 D31A     		subs	r3, r2, r3
 2828 00f6 9BB2     		uxth	r3, r3
 2829 00f8 9AB2     		uxth	r2, r3
 2830 00fa 40F20003 		movw	r3, #:lower16:ay
 2831 00fe C0F20003 		movt	r3, #:upper16:ay
 2832 0102 1A80     		strh	r2, [r3, #0]	@ movhi
 737:../LSM9DS1_Driver.c **** 		az -= aBiasRaw[Z_AXIS];
 2833              		.loc 1 737 0
 2834 0104 40F20003 		movw	r3, #:lower16:az
 2835 0108 C0F20003 		movt	r3, #:upper16:az
 2836 010c 1B88     		ldrh	r3, [r3, #0]
 2837 010e 9AB2     		uxth	r2, r3
 2838 0110 40F20003 		movw	r3, #:lower16:aBiasRaw
 2839 0114 C0F20003 		movt	r3, #:upper16:aBiasRaw
 2840 0118 9B88     		ldrh	r3, [r3, #4]
 2841 011a 9BB2     		uxth	r3, r3
 2842 011c D31A     		subs	r3, r2, r3
 2843 011e 9BB2     		uxth	r3, r3
 2844 0120 9AB2     		uxth	r2, r3
 2845 0122 40F20003 		movw	r3, #:lower16:az
 2846 0126 C0F20003 		movt	r3, #:upper16:az
 2847 012a 1A80     		strh	r2, [r3, #0]	@ movhi
 2848              	.L113:
 738:../LSM9DS1_Driver.c **** 	}
 739:../LSM9DS1_Driver.c **** 
 740:../LSM9DS1_Driver.c **** 	ax = calcAccel(ax);
 2849              		.loc 1 740 0
 2850 012c 40F20003 		movw	r3, #:lower16:ax
 2851 0130 C0F20003 		movt	r3, #:upper16:ax
 2852 0134 1B88     		ldrh	r3, [r3, #0]
 2853 0136 1BB2     		sxth	r3, r3
 2854 0138 1846     		mov	r0, r3
 2855 013a FFF7FEFF 		bl	calcAccel
 2856 013e 07EE900A 		fmsr	s15, r0
 2857 0142 FDEEE77A 		ftosizs	s15, s15
 2858 0146 17EE903A 		fmrs	r3, s15	@ int
 2859 014a 9AB2     		uxth	r2, r3
 2860 014c 40F20003 		movw	r3, #:lower16:ax
 2861 0150 C0F20003 		movt	r3, #:upper16:ax
 2862 0154 1A80     		strh	r2, [r3, #0]	@ movhi
 741:../LSM9DS1_Driver.c **** 	ay = calcAccel(ay);
 2863              		.loc 1 741 0
 2864 0156 40F20003 		movw	r3, #:lower16:ay
 2865 015a C0F20003 		movt	r3, #:upper16:ay
 2866 015e 1B88     		ldrh	r3, [r3, #0]
 2867 0160 1BB2     		sxth	r3, r3
 2868 0162 1846     		mov	r0, r3
 2869 0164 FFF7FEFF 		bl	calcAccel
 2870 0168 07EE900A 		fmsr	s15, r0
 2871 016c FDEEE77A 		ftosizs	s15, s15
 2872 0170 17EE903A 		fmrs	r3, s15	@ int
 2873 0174 9AB2     		uxth	r2, r3
 2874 0176 40F20003 		movw	r3, #:lower16:ay
 2875 017a C0F20003 		movt	r3, #:upper16:ay
 2876 017e 1A80     		strh	r2, [r3, #0]	@ movhi
 742:../LSM9DS1_Driver.c **** 	az = calcAccel(az);
 2877              		.loc 1 742 0
 2878 0180 40F20003 		movw	r3, #:lower16:az
 2879 0184 C0F20003 		movt	r3, #:upper16:az
 2880 0188 1B88     		ldrh	r3, [r3, #0]
 2881 018a 1BB2     		sxth	r3, r3
 2882 018c 1846     		mov	r0, r3
 2883 018e FFF7FEFF 		bl	calcAccel
 2884 0192 07EE900A 		fmsr	s15, r0
 2885 0196 FDEEE77A 		ftosizs	s15, s15
 2886 019a 17EE903A 		fmrs	r3, s15	@ int
 2887 019e 9AB2     		uxth	r2, r3
 2888 01a0 40F20003 		movw	r3, #:lower16:az
 2889 01a4 C0F20003 		movt	r3, #:upper16:az
 2890 01a8 1A80     		strh	r2, [r3, #0]	@ movhi
 743:../LSM9DS1_Driver.c **** 
 744:../LSM9DS1_Driver.c **** 	pomiar->ax = ax;
 2891              		.loc 1 744 0
 2892 01aa 40F20003 		movw	r3, #:lower16:ax
 2893 01ae C0F20003 		movt	r3, #:upper16:ax
 2894 01b2 1A88     		ldrh	r2, [r3, #0]
 2895 01b4 7B68     		ldr	r3, [r7, #4]
 2896 01b6 1A80     		strh	r2, [r3, #0]	@ movhi
 745:../LSM9DS1_Driver.c **** 	pomiar->ay = ay;
 2897              		.loc 1 745 0
 2898 01b8 40F20003 		movw	r3, #:lower16:ay
 2899 01bc C0F20003 		movt	r3, #:upper16:ay
 2900 01c0 1A88     		ldrh	r2, [r3, #0]
 2901 01c2 7B68     		ldr	r3, [r7, #4]
 2902 01c4 5A80     		strh	r2, [r3, #2]	@ movhi
 746:../LSM9DS1_Driver.c **** 	pomiar->az = az;
 2903              		.loc 1 746 0
 2904 01c6 40F20003 		movw	r3, #:lower16:az
 2905 01ca C0F20003 		movt	r3, #:upper16:az
 2906 01ce 1A88     		ldrh	r2, [r3, #0]
 2907 01d0 7B68     		ldr	r3, [r7, #4]
 2908 01d2 9A80     		strh	r2, [r3, #4]	@ movhi
 747:../LSM9DS1_Driver.c **** }
 2909              		.loc 1 747 0
 2910 01d4 07F11407 		add	r7, r7, #20
 2911 01d8 BD46     		mov	sp, r7
 2912 01da 90BD     		pop	{r4, r7, pc}
 2913              		.cfi_endproc
 2914              	.LFE142:
 2916              		.section	.text.I2CreadBytes,"ax",%progbits
 2917              		.align	2
 2918              		.global	I2CreadBytes
 2919              		.thumb
 2920              		.thumb_func
 2922              	I2CreadBytes:
 2923              	.LFB143:
 748:../LSM9DS1_Driver.c **** 
 749:../LSM9DS1_Driver.c **** uint8_t I2CreadBytes(uint8_t address, uint8_t subAddress, uint8_t * dest, uint8_t count)
 750:../LSM9DS1_Driver.c **** {
 2924              		.loc 1 750 0
 2925              		.cfi_startproc
 2926              		@ args = 0, pretend = 0, frame = 40
 2927              		@ frame_needed = 1, uses_anonymous_args = 0
 2928 0000 80B5     		push	{r7, lr}
 2929              	.LCFI72:
 2930              		.cfi_def_cfa_offset 8
 2931              		.cfi_offset 7, -8
 2932              		.cfi_offset 14, -4
 2933 0002 8AB0     		sub	sp, sp, #40
 2934              	.LCFI73:
 2935              		.cfi_def_cfa_offset 48
 2936 0004 00AF     		add	r7, sp, #0
 2937              	.LCFI74:
 2938              		.cfi_def_cfa_register 7
 2939 0006 3A60     		str	r2, [r7, #0]
 2940 0008 0246     		mov	r2, r0
 2941 000a FA71     		strb	r2, [r7, #7]
 2942 000c 0A46     		mov	r2, r1
 2943 000e BA71     		strb	r2, [r7, #6]
 2944 0010 7B71     		strb	r3, [r7, #5]
 751:../LSM9DS1_Driver.c **** 		USIC_CH_TypeDef* I2CRegs = I2C001_Handle0.I2CRegs;
 2945              		.loc 1 751 0
 2946 0012 40F20003 		movw	r3, #:lower16:I2C001_Handle0
 2947 0016 C0F20003 		movt	r3, #:upper16:I2C001_Handle0
 2948 001a 5B68     		ldr	r3, [r3, #4]
 2949 001c 7B62     		str	r3, [r7, #36]
 752:../LSM9DS1_Driver.c **** 
 753:../LSM9DS1_Driver.c **** 		I2C001_DataType data1;
 754:../LSM9DS1_Driver.c **** 		data1.Data1.TDF_Type = I2C_TDF_MStart;
 2950              		.loc 1 754 0
 2951 001e 4FF00403 		mov	r3, #4
 2952 0022 7B77     		strb	r3, [r7, #29]
 755:../LSM9DS1_Driver.c **** 		data1.Data1.Data = ((address<<1) | I2C_WRITE);
 2953              		.loc 1 755 0
 2954 0024 FB79     		ldrb	r3, [r7, #7]
 2955 0026 4FEA4303 		lsl	r3, r3, #1
 2956 002a DBB2     		uxtb	r3, r3
 2957 002c 3B77     		strb	r3, [r7, #28]
 756:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data1))
 2958              		.loc 1 756 0
 2959 002e 07E0     		b	.L115
 2960              	.L116:
 757:../LSM9DS1_Driver.c **** 		{
 758:../LSM9DS1_Driver.c **** 			USIC_FlushTxFIFO(I2CRegs);
 2961              		.loc 1 758 0
 2962 0030 7B6A     		ldr	r3, [r7, #36]
 2963 0032 D3F81831 		ldr	r3, [r3, #280]
 2964 0036 43F40042 		orr	r2, r3, #32768
 2965 003a 7B6A     		ldr	r3, [r7, #36]
 2966 003c C3F81821 		str	r2, [r3, #280]
 2967              	.L115:
 756:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data1))
 2968              		.loc 1 756 0 discriminator 1
 2969 0040 07F11C03 		add	r3, r7, #28
 2970 0044 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 2971 0048 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 2972 004c 1946     		mov	r1, r3
 2973 004e FFF7FEFF 		bl	I2C001_WriteData
 2974 0052 0346     		mov	r3, r0
 2975 0054 002B     		cmp	r3, #0
 2976 0056 EBD0     		beq	.L116
 759:../LSM9DS1_Driver.c **** 		}
 760:../LSM9DS1_Driver.c **** 		delay(10000);
 2977              		.loc 1 760 0
 2978 0058 42F21070 		movw	r0, #10000
 2979 005c FFF7FEFF 		bl	delay
 761:../LSM9DS1_Driver.c **** 
 762:../LSM9DS1_Driver.c **** 		I2C001_DataType data2;
 763:../LSM9DS1_Driver.c **** 		data2.Data1.TDF_Type = I2C_TDF_MTxData;
 2980              		.loc 1 763 0
 2981 0060 4FF00003 		mov	r3, #0
 2982 0064 7B76     		strb	r3, [r7, #25]
 764:../LSM9DS1_Driver.c **** 		data2.Data1.Data = (subAddress);
 2983              		.loc 1 764 0
 2984 0066 BB79     		ldrb	r3, [r7, #6]
 2985 0068 3B76     		strb	r3, [r7, #24]
 765:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data2))
 2986              		.loc 1 765 0
 2987 006a 07E0     		b	.L117
 2988              	.L118:
 766:../LSM9DS1_Driver.c **** 		{
 767:../LSM9DS1_Driver.c **** 			USIC_FlushTxFIFO(I2CRegs);
 2989              		.loc 1 767 0
 2990 006c 7B6A     		ldr	r3, [r7, #36]
 2991 006e D3F81831 		ldr	r3, [r3, #280]
 2992 0072 43F40042 		orr	r2, r3, #32768
 2993 0076 7B6A     		ldr	r3, [r7, #36]
 2994 0078 C3F81821 		str	r2, [r3, #280]
 2995              	.L117:
 765:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data2))
 2996              		.loc 1 765 0 discriminator 1
 2997 007c 07F11803 		add	r3, r7, #24
 2998 0080 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 2999 0084 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 3000 0088 1946     		mov	r1, r3
 3001 008a FFF7FEFF 		bl	I2C001_WriteData
 3002 008e 0346     		mov	r3, r0
 3003 0090 002B     		cmp	r3, #0
 3004 0092 EBD0     		beq	.L118
 768:../LSM9DS1_Driver.c **** 		}
 769:../LSM9DS1_Driver.c **** 		delay(10000);
 3005              		.loc 1 769 0
 3006 0094 42F21070 		movw	r0, #10000
 3007 0098 FFF7FEFF 		bl	delay
 770:../LSM9DS1_Driver.c **** 
 771:../LSM9DS1_Driver.c **** 		I2C001_DataType data3;
 772:../LSM9DS1_Driver.c **** 		data3.Data1.TDF_Type = I2C_TDF_MRStart;
 3008              		.loc 1 772 0
 3009 009c 4FF00503 		mov	r3, #5
 3010 00a0 7B75     		strb	r3, [r7, #21]
 773:../LSM9DS1_Driver.c **** 		data3.Data1.Data = ((address<<1) | I2C_READ);
 3011              		.loc 1 773 0
 3012 00a2 FB79     		ldrb	r3, [r7, #7]
 3013 00a4 4FEA4303 		lsl	r3, r3, #1
 3014 00a8 DBB2     		uxtb	r3, r3
 3015 00aa 43F00103 		orr	r3, r3, #1
 3016 00ae DBB2     		uxtb	r3, r3
 3017 00b0 3B75     		strb	r3, [r7, #20]
 774:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data3))
 3018              		.loc 1 774 0
 3019 00b2 07E0     		b	.L119
 3020              	.L120:
 775:../LSM9DS1_Driver.c **** 		{
 776:../LSM9DS1_Driver.c **** 			USIC_FlushTxFIFO(I2CRegs);
 3021              		.loc 1 776 0
 3022 00b4 7B6A     		ldr	r3, [r7, #36]
 3023 00b6 D3F81831 		ldr	r3, [r3, #280]
 3024 00ba 43F40042 		orr	r2, r3, #32768
 3025 00be 7B6A     		ldr	r3, [r7, #36]
 3026 00c0 C3F81821 		str	r2, [r3, #280]
 3027              	.L119:
 774:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data3))
 3028              		.loc 1 774 0 discriminator 1
 3029 00c4 07F11403 		add	r3, r7, #20
 3030 00c8 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 3031 00cc C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 3032 00d0 1946     		mov	r1, r3
 3033 00d2 FFF7FEFF 		bl	I2C001_WriteData
 3034 00d6 0346     		mov	r3, r0
 3035 00d8 002B     		cmp	r3, #0
 3036 00da EBD0     		beq	.L120
 777:../LSM9DS1_Driver.c **** 		}
 778:../LSM9DS1_Driver.c **** 		delay(10000);
 3037              		.loc 1 778 0
 3038 00dc 42F21070 		movw	r0, #10000
 3039 00e0 FFF7FEFF 		bl	delay
 779:../LSM9DS1_Driver.c **** 
 780:../LSM9DS1_Driver.c **** 		I2C001_DataType data4;
 781:../LSM9DS1_Driver.c **** 		data4.Data1.TDF_Type = I2C_TDF_MRxAck1;
 3040              		.loc 1 781 0
 3041 00e4 4FF00303 		mov	r3, #3
 3042 00e8 7B74     		strb	r3, [r7, #17]
 782:../LSM9DS1_Driver.c **** 		data4.Data1.Data = ubyteFF;
 3043              		.loc 1 782 0
 3044 00ea 4FF0FF03 		mov	r3, #255
 3045 00ee 3B74     		strb	r3, [r7, #16]
 783:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data4))
 3046              		.loc 1 783 0
 3047 00f0 07E0     		b	.L121
 3048              	.L122:
 784:../LSM9DS1_Driver.c **** 		{
 785:../LSM9DS1_Driver.c **** 			USIC_FlushTxFIFO(I2CRegs);
 3049              		.loc 1 785 0
 3050 00f2 7B6A     		ldr	r3, [r7, #36]
 3051 00f4 D3F81831 		ldr	r3, [r3, #280]
 3052 00f8 43F40042 		orr	r2, r3, #32768
 3053 00fc 7B6A     		ldr	r3, [r7, #36]
 3054 00fe C3F81821 		str	r2, [r3, #280]
 3055              	.L121:
 783:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data4))
 3056              		.loc 1 783 0 discriminator 1
 3057 0102 07F11003 		add	r3, r7, #16
 3058 0106 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 3059 010a C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 3060 010e 1946     		mov	r1, r3
 3061 0110 FFF7FEFF 		bl	I2C001_WriteData
 3062 0114 0346     		mov	r3, r0
 3063 0116 002B     		cmp	r3, #0
 3064 0118 EBD0     		beq	.L122
 786:../LSM9DS1_Driver.c **** 		}
 787:../LSM9DS1_Driver.c **** 		delay(10000);
 3065              		.loc 1 787 0
 3066 011a 42F21070 		movw	r0, #10000
 3067 011e FFF7FEFF 		bl	delay
 788:../LSM9DS1_Driver.c **** 
 789:../LSM9DS1_Driver.c **** 		I2C001_DataType data5;
 790:../LSM9DS1_Driver.c **** 		data5.Data1.TDF_Type = I2C_TDF_MStop;
 3068              		.loc 1 790 0
 3069 0122 4FF00603 		mov	r3, #6
 3070 0126 7B73     		strb	r3, [r7, #13]
 791:../LSM9DS1_Driver.c **** 		data5.Data1.Data = ubyteFF;
 3071              		.loc 1 791 0
 3072 0128 4FF0FF03 		mov	r3, #255
 3073 012c 3B73     		strb	r3, [r7, #12]
 792:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data5))
 3074              		.loc 1 792 0
 3075 012e 07E0     		b	.L123
 3076              	.L124:
 793:../LSM9DS1_Driver.c **** 		{
 794:../LSM9DS1_Driver.c **** 			USIC_FlushTxFIFO(I2CRegs);
 3077              		.loc 1 794 0
 3078 0130 7B6A     		ldr	r3, [r7, #36]
 3079 0132 D3F81831 		ldr	r3, [r3, #280]
 3080 0136 43F40042 		orr	r2, r3, #32768
 3081 013a 7B6A     		ldr	r3, [r7, #36]
 3082 013c C3F81821 		str	r2, [r3, #280]
 3083              	.L123:
 792:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data5))
 3084              		.loc 1 792 0 discriminator 1
 3085 0140 07F10C03 		add	r3, r7, #12
 3086 0144 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 3087 0148 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 3088 014c 1946     		mov	r1, r3
 3089 014e FFF7FEFF 		bl	I2C001_WriteData
 3090 0152 0346     		mov	r3, r0
 3091 0154 002B     		cmp	r3, #0
 3092 0156 EBD0     		beq	.L124
 795:../LSM9DS1_Driver.c **** 		}
 796:../LSM9DS1_Driver.c **** 		delay(10000);
 3093              		.loc 1 796 0
 3094 0158 42F21070 		movw	r0, #10000
 3095 015c FFF7FEFF 		bl	delay
 797:../LSM9DS1_Driver.c **** 
 798:../LSM9DS1_Driver.c **** 		int k = 0;
 3096              		.loc 1 798 0
 3097 0160 4FF00003 		mov	r3, #0
 3098 0164 3B62     		str	r3, [r7, #32]
 799:../LSM9DS1_Driver.c **** 
 800:../LSM9DS1_Driver.c **** 		uint16_t buffer = 0;
 3099              		.loc 1 800 0
 3100 0166 4FF00003 		mov	r3, #0
 3101 016a 7B81     		strh	r3, [r7, #10]	@ movhi
 801:../LSM9DS1_Driver.c **** 		if(I2C001_ReadData(&I2C001_Handle0,&buffer))
 3102              		.loc 1 801 0
 3103 016c 07F10A03 		add	r3, r7, #10
 3104 0170 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 3105 0174 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 3106 0178 1946     		mov	r1, r3
 3107 017a FFF7FEFF 		bl	I2C001_ReadData
 3108 017e 0346     		mov	r3, r0
 3109 0180 002B     		cmp	r3, #0
 3110 0182 04D0     		beq	.L125
 802:../LSM9DS1_Driver.c **** 		{
 803:../LSM9DS1_Driver.c **** 			k++;
 3111              		.loc 1 803 0
 3112 0184 3B6A     		ldr	r3, [r7, #32]
 3113 0186 03F10103 		add	r3, r3, #1
 3114 018a 3B62     		str	r3, [r7, #32]
 3115 018c 03E0     		b	.L126
 3116              	.L125:
 804:../LSM9DS1_Driver.c **** 		}
 805:../LSM9DS1_Driver.c **** 		else
 806:../LSM9DS1_Driver.c **** 		{
 807:../LSM9DS1_Driver.c **** 			k--;
 3117              		.loc 1 807 0
 3118 018e 3B6A     		ldr	r3, [r7, #32]
 3119 0190 03F1FF33 		add	r3, r3, #-1
 3120 0194 3B62     		str	r3, [r7, #32]
 3121              	.L126:
 808:../LSM9DS1_Driver.c **** 		}
 809:../LSM9DS1_Driver.c **** 		delay(10000);
 3122              		.loc 1 809 0
 3123 0196 42F21070 		movw	r0, #10000
 3124 019a FFF7FEFF 		bl	delay
 810:../LSM9DS1_Driver.c **** 		return (uint8_t)buffer;
 3125              		.loc 1 810 0
 3126 019e 7B89     		ldrh	r3, [r7, #10]
 3127 01a0 DBB2     		uxtb	r3, r3
 811:../LSM9DS1_Driver.c **** }
 3128              		.loc 1 811 0
 3129 01a2 1846     		mov	r0, r3
 3130 01a4 07F12807 		add	r7, r7, #40
 3131 01a8 BD46     		mov	sp, r7
 3132 01aa 80BD     		pop	{r7, pc}
 3133              		.cfi_endproc
 3134              	.LFE143:
 3136              		.section	.text.magAvailable,"ax",%progbits
 3137              		.align	2
 3138              		.global	magAvailable
 3139              		.thumb
 3140              		.thumb_func
 3142              	magAvailable:
 3143              	.LFB144:
 812:../LSM9DS1_Driver.c **** 
 813:../LSM9DS1_Driver.c **** uint8_t magAvailable(lsm9ds1_axis axis)
 814:../LSM9DS1_Driver.c **** {
 3144              		.loc 1 814 0
 3145              		.cfi_startproc
 3146              		@ args = 0, pretend = 0, frame = 16
 3147              		@ frame_needed = 1, uses_anonymous_args = 0
 3148 0000 80B5     		push	{r7, lr}
 3149              	.LCFI75:
 3150              		.cfi_def_cfa_offset 8
 3151              		.cfi_offset 7, -8
 3152              		.cfi_offset 14, -4
 3153 0002 84B0     		sub	sp, sp, #16
 3154              	.LCFI76:
 3155              		.cfi_def_cfa_offset 24
 3156 0004 00AF     		add	r7, sp, #0
 3157              	.LCFI77:
 3158              		.cfi_def_cfa_register 7
 3159 0006 0346     		mov	r3, r0
 3160 0008 FB71     		strb	r3, [r7, #7]
 815:../LSM9DS1_Driver.c **** 	uint8_t status;
 816:../LSM9DS1_Driver.c **** 	status = mReadByte(STATUS_REG_M);
 3161              		.loc 1 816 0
 3162 000a 4FF02700 		mov	r0, #39
 3163 000e FFF7FEFF 		bl	mReadByte
 3164 0012 0346     		mov	r3, r0
 3165 0014 FB73     		strb	r3, [r7, #15]
 817:../LSM9DS1_Driver.c **** 
 818:../LSM9DS1_Driver.c **** 	return ((status & (1<<axis)) >> axis);
 3166              		.loc 1 818 0
 3167 0016 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3168 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3169 001a 4FF00101 		mov	r1, #1
 3170 001e 01FA03F3 		lsl	r3, r1, r3
 3171 0022 1A40     		ands	r2, r2, r3
 3172 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3173 0026 42FA03F3 		asr	r3, r2, r3
 3174 002a DBB2     		uxtb	r3, r3
 819:../LSM9DS1_Driver.c **** }
 3175              		.loc 1 819 0
 3176 002c 1846     		mov	r0, r3
 3177 002e 07F11007 		add	r7, r7, #16
 3178 0032 BD46     		mov	sp, r7
 3179 0034 80BD     		pop	{r7, pc}
 3180              		.cfi_endproc
 3181              	.LFE144:
 3183 0036 00BF     		.section	.text.readMag1,"ax",%progbits
 3184              		.align	2
 3185              		.global	readMag1
 3186              		.thumb
 3187              		.thumb_func
 3189              	readMag1:
 3190              	.LFB145:
 820:../LSM9DS1_Driver.c **** 
 821:../LSM9DS1_Driver.c **** void readMag1(void)
 822:../LSM9DS1_Driver.c **** {
 3191              		.loc 1 822 0
 3192              		.cfi_startproc
 3193              		@ args = 0, pretend = 0, frame = 8
 3194              		@ frame_needed = 1, uses_anonymous_args = 0
 3195 0000 90B5     		push	{r4, r7, lr}
 3196              	.LCFI78:
 3197              		.cfi_def_cfa_offset 12
 3198              		.cfi_offset 4, -12
 3199              		.cfi_offset 7, -8
 3200              		.cfi_offset 14, -4
 3201 0002 83B0     		sub	sp, sp, #12
 3202              	.LCFI79:
 3203              		.cfi_def_cfa_offset 24
 3204 0004 00AF     		add	r7, sp, #0
 3205              	.LCFI80:
 3206              		.cfi_def_cfa_register 7
 823:../LSM9DS1_Driver.c **** 	//for(int kl = 0; kl < 10; kl++){
 824:../LSM9DS1_Driver.c **** 	uint8_t temp[6]; // We'll read six bytes from the mag into temp
 825:../LSM9DS1_Driver.c **** 	uint8_t subAddress = OUT_X_L_M;
 3207              		.loc 1 825 0
 3208 0006 4FF02803 		mov	r3, #40
 3209 000a BB71     		strb	r3, [r7, #6]
 826:../LSM9DS1_Driver.c **** 	uint8_t i = 0;
 3210              		.loc 1 826 0
 3211 000c 4FF00003 		mov	r3, #0
 3212 0010 FB71     		strb	r3, [r7, #7]
 827:../LSM9DS1_Driver.c **** 
 828:../LSM9DS1_Driver.c **** 	while(i < 6)
 3213              		.loc 1 828 0
 3214 0012 19E0     		b	.L131
 3215              	.L132:
 829:../LSM9DS1_Driver.c **** 	{
 830:../LSM9DS1_Driver.c **** 		temp[i] = I2CreadBytes(_mAddress, subAddress, NULL, 0);
 3216              		.loc 1 830 0
 3217 0014 FC79     		ldrb	r4, [r7, #7]	@ zero_extendqisi2
 3218 0016 40F20003 		movw	r3, #:lower16:_mAddress
 3219 001a C0F20003 		movt	r3, #:upper16:_mAddress
 3220 001e 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 3221 0020 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3222 0022 1046     		mov	r0, r2
 3223 0024 1946     		mov	r1, r3
 3224 0026 4FF00002 		mov	r2, #0
 3225 002a 4FF00003 		mov	r3, #0
 3226 002e FFF7FEFF 		bl	I2CreadBytes
 3227 0032 0346     		mov	r3, r0
 3228 0034 1A46     		mov	r2, r3
 3229 0036 07F10801 		add	r1, r7, #8
 3230 003a 0B19     		adds	r3, r1, r4
 3231 003c 03F8082C 		strb	r2, [r3, #-8]
 831:../LSM9DS1_Driver.c **** 		i++;
 3232              		.loc 1 831 0
 3233 0040 FB79     		ldrb	r3, [r7, #7]
 3234 0042 03F10103 		add	r3, r3, #1
 3235 0046 FB71     		strb	r3, [r7, #7]
 3236              	.L131:
 828:../LSM9DS1_Driver.c **** 	while(i < 6)
 3237              		.loc 1 828 0 discriminator 1
 3238 0048 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3239 004a 052B     		cmp	r3, #5
 3240 004c E2D9     		bls	.L132
 832:../LSM9DS1_Driver.c **** 	}
 833:../LSM9DS1_Driver.c **** 
 834:../LSM9DS1_Driver.c **** 	mx = (temp[1] << 8) | temp[0]; // Store x-axis values into mx
 3241              		.loc 1 834 0
 3242 004e 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 3243 0050 4FEA0323 		lsl	r3, r3, #8
 3244 0054 9AB2     		uxth	r2, r3
 3245 0056 3B78     		ldrb	r3, [r7, #0]	@ zero_extendqisi2
 3246 0058 1343     		orrs	r3, r3, r2
 3247 005a 9AB2     		uxth	r2, r3
 3248 005c 40F20003 		movw	r3, #:lower16:mx
 3249 0060 C0F20003 		movt	r3, #:upper16:mx
 3250 0064 1A80     		strh	r2, [r3, #0]	@ movhi
 835:../LSM9DS1_Driver.c **** 	my = (temp[3] << 8) | temp[2]; // Store y-axis values into my
 3251              		.loc 1 835 0
 3252 0066 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3253 0068 4FEA0323 		lsl	r3, r3, #8
 3254 006c 9AB2     		uxth	r2, r3
 3255 006e BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 3256 0070 1343     		orrs	r3, r3, r2
 3257 0072 9AB2     		uxth	r2, r3
 3258 0074 40F20003 		movw	r3, #:lower16:my
 3259 0078 C0F20003 		movt	r3, #:upper16:my
 3260 007c 1A80     		strh	r2, [r3, #0]	@ movhi
 836:../LSM9DS1_Driver.c **** 	mz = (temp[5] << 8) | temp[4]; // Store z-axis values into mz
 3261              		.loc 1 836 0
 3262 007e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3263 0080 4FEA0323 		lsl	r3, r3, #8
 3264 0084 9AB2     		uxth	r2, r3
 3265 0086 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 3266 0088 1343     		orrs	r3, r3, r2
 3267 008a 9AB2     		uxth	r2, r3
 3268 008c 40F20003 		movw	r3, #:lower16:mz
 3269 0090 C0F20003 		movt	r3, #:upper16:mz
 3270 0094 1A80     		strh	r2, [r3, #0]	@ movhi
 837:../LSM9DS1_Driver.c **** 
 838:../LSM9DS1_Driver.c **** 	/*mx = calcMag(mx);
 839:../LSM9DS1_Driver.c **** 	my = calcMag(my);
 840:../LSM9DS1_Driver.c **** 	mz = calcMag(mz);*?
 841:../LSM9DS1_Driver.c **** 	/*}*/
 842:../LSM9DS1_Driver.c **** 
 843:../LSM9DS1_Driver.c **** 
 844:../LSM9DS1_Driver.c **** }
 3271              		.loc 1 844 0
 3272 0096 07F10C07 		add	r7, r7, #12
 3273 009a BD46     		mov	sp, r7
 3274 009c 90BD     		pop	{r4, r7, pc}
 3275              		.cfi_endproc
 3276              	.LFE145:
 3278 009e 00BF     		.section	.text.calibrateMag,"ax",%progbits
 3279              		.align	2
 3280              		.global	calibrateMag
 3281              		.thumb
 3282              		.thumb_func
 3284              	calibrateMag:
 3285              	.LFB146:
 845:../LSM9DS1_Driver.c **** 
 846:../LSM9DS1_Driver.c **** 
 847:../LSM9DS1_Driver.c **** void calibrateMag(bool loadIn)
 848:../LSM9DS1_Driver.c **** {
 3286              		.loc 1 848 0
 3287              		.cfi_startproc
 3288              		@ args = 0, pretend = 0, frame = 40
 3289              		@ frame_needed = 1, uses_anonymous_args = 0
 3290 0000 80B5     		push	{r7, lr}
 3291              	.LCFI81:
 3292              		.cfi_def_cfa_offset 8
 3293              		.cfi_offset 7, -8
 3294              		.cfi_offset 14, -4
 3295 0002 8AB0     		sub	sp, sp, #40
 3296              	.LCFI82:
 3297              		.cfi_def_cfa_offset 48
 3298 0004 00AF     		add	r7, sp, #0
 3299              	.LCFI83:
 3300              		.cfi_def_cfa_register 7
 3301 0006 0346     		mov	r3, r0
 3302 0008 FB71     		strb	r3, [r7, #7]
 849:../LSM9DS1_Driver.c **** 	int i, j;
 850:../LSM9DS1_Driver.c **** 	int16_t magMin[3] = {0, 0, 0};
 3303              		.loc 1 850 0
 3304 000a 4FF00003 		mov	r3, #0
 3305 000e 3B83     		strh	r3, [r7, #24]	@ movhi
 3306 0010 4FF00003 		mov	r3, #0
 3307 0014 7B83     		strh	r3, [r7, #26]	@ movhi
 3308 0016 4FF00003 		mov	r3, #0
 3309 001a BB83     		strh	r3, [r7, #28]	@ movhi
 851:../LSM9DS1_Driver.c **** 	int16_t magMax[3] = {0, 0, 0}; // The road warrior
 3310              		.loc 1 851 0
 3311 001c 4FF00003 		mov	r3, #0
 3312 0020 3B82     		strh	r3, [r7, #16]	@ movhi
 3313 0022 4FF00003 		mov	r3, #0
 3314 0026 7B82     		strh	r3, [r7, #18]	@ movhi
 3315 0028 4FF00003 		mov	r3, #0
 3316 002c BB82     		strh	r3, [r7, #20]	@ movhi
 852:../LSM9DS1_Driver.c **** 
 853:../LSM9DS1_Driver.c **** 	for (i=0; i<128; i++)
 3317              		.loc 1 853 0
 3318 002e 4FF00003 		mov	r3, #0
 3319 0032 7B62     		str	r3, [r7, #36]
 3320 0034 7CE0     		b	.L134
 3321              	.L144:
 3322              	.LBB4:
 854:../LSM9DS1_Driver.c **** 	{
 855:../LSM9DS1_Driver.c **** 		//tu nie wiem
 856:../LSM9DS1_Driver.c **** 		while (!magAvailable(i))
 3323              		.loc 1 856 0
 3324 0036 00BF     		nop
 3325              	.L135:
 3326              		.loc 1 856 0 is_stmt 0 discriminator 1
 3327 0038 7B6A     		ldr	r3, [r7, #36]
 3328 003a DBB2     		uxtb	r3, r3
 3329 003c 1846     		mov	r0, r3
 3330 003e FFF7FEFF 		bl	magAvailable
 3331 0042 0346     		mov	r3, r0
 3332 0044 002B     		cmp	r3, #0
 3333 0046 F7D0     		beq	.L135
 857:../LSM9DS1_Driver.c **** 			;
 858:../LSM9DS1_Driver.c **** 		readMag1();
 3334              		.loc 1 858 0 is_stmt 1
 3335 0048 FFF7FEFF 		bl	readMag1
 859:../LSM9DS1_Driver.c **** 		int16_t magTemp[3] = {0, 0, 0};
 3336              		.loc 1 859 0
 3337 004c 4FF00003 		mov	r3, #0
 3338 0050 3B81     		strh	r3, [r7, #8]	@ movhi
 3339 0052 4FF00003 		mov	r3, #0
 3340 0056 7B81     		strh	r3, [r7, #10]	@ movhi
 3341 0058 4FF00003 		mov	r3, #0
 3342 005c BB81     		strh	r3, [r7, #12]	@ movhi
 860:../LSM9DS1_Driver.c **** 		magTemp[0] = mx;
 3343              		.loc 1 860 0
 3344 005e 40F20003 		movw	r3, #:lower16:mx
 3345 0062 C0F20003 		movt	r3, #:upper16:mx
 3346 0066 1B88     		ldrh	r3, [r3, #0]
 3347 0068 3B81     		strh	r3, [r7, #8]	@ movhi
 861:../LSM9DS1_Driver.c **** 		magTemp[1] = my;
 3348              		.loc 1 861 0
 3349 006a 40F20003 		movw	r3, #:lower16:my
 3350 006e C0F20003 		movt	r3, #:upper16:my
 3351 0072 1B88     		ldrh	r3, [r3, #0]
 3352 0074 7B81     		strh	r3, [r7, #10]	@ movhi
 862:../LSM9DS1_Driver.c **** 		magTemp[2] = mz;
 3353              		.loc 1 862 0
 3354 0076 40F20003 		movw	r3, #:lower16:mz
 3355 007a C0F20003 		movt	r3, #:upper16:mz
 3356 007e 1B88     		ldrh	r3, [r3, #0]
 3357 0080 BB81     		strh	r3, [r7, #12]	@ movhi
 863:../LSM9DS1_Driver.c **** 		for (j = 0; j < 3; j++)
 3358              		.loc 1 863 0
 3359 0082 4FF00003 		mov	r3, #0
 3360 0086 3B62     		str	r3, [r7, #32]
 3361 0088 4BE0     		b	.L136
 3362              	.L139:
 864:../LSM9DS1_Driver.c **** 		{
 865:../LSM9DS1_Driver.c **** 			if (magTemp[j] > magMax[j]) magMax[j] = magTemp[j];
 3363              		.loc 1 865 0
 3364 008a 3B6A     		ldr	r3, [r7, #32]
 3365 008c 4FEA4303 		lsl	r3, r3, #1
 3366 0090 07F12801 		add	r1, r7, #40
 3367 0094 CB18     		adds	r3, r1, r3
 3368 0096 33F8202C 		ldrh	r2, [r3, #-32]
 3369 009a 3B6A     		ldr	r3, [r7, #32]
 3370 009c 4FEA4303 		lsl	r3, r3, #1
 3371 00a0 07F12801 		add	r1, r7, #40
 3372 00a4 CB18     		adds	r3, r1, r3
 3373 00a6 33F8183C 		ldrh	r3, [r3, #-24]
 3374 00aa 12B2     		sxth	r2, r2
 3375 00ac 1BB2     		sxth	r3, r3
 3376 00ae 9A42     		cmp	r2, r3
 3377 00b0 0FDD     		ble	.L137
 3378              		.loc 1 865 0 is_stmt 0 discriminator 1
 3379 00b2 3B6A     		ldr	r3, [r7, #32]
 3380 00b4 4FEA4303 		lsl	r3, r3, #1
 3381 00b8 07F12802 		add	r2, r7, #40
 3382 00bc D318     		adds	r3, r2, r3
 3383 00be 33F8202C 		ldrh	r2, [r3, #-32]
 3384 00c2 3B6A     		ldr	r3, [r7, #32]
 3385 00c4 4FEA4303 		lsl	r3, r3, #1
 3386 00c8 07F12801 		add	r1, r7, #40
 3387 00cc CB18     		adds	r3, r1, r3
 3388 00ce 23F8182C 		strh	r2, [r3, #-24]	@ movhi
 3389              	.L137:
 866:../LSM9DS1_Driver.c **** 			if (magTemp[j] < magMin[j]) magMin[j] = magTemp[j];
 3390              		.loc 1 866 0 is_stmt 1
 3391 00d2 3B6A     		ldr	r3, [r7, #32]
 3392 00d4 4FEA4303 		lsl	r3, r3, #1
 3393 00d8 07F12802 		add	r2, r7, #40
 3394 00dc D318     		adds	r3, r2, r3
 3395 00de 33F8202C 		ldrh	r2, [r3, #-32]
 3396 00e2 3B6A     		ldr	r3, [r7, #32]
 3397 00e4 4FEA4303 		lsl	r3, r3, #1
 3398 00e8 07F12801 		add	r1, r7, #40
 3399 00ec CB18     		adds	r3, r1, r3
 3400 00ee 33F8103C 		ldrh	r3, [r3, #-16]
 3401 00f2 12B2     		sxth	r2, r2
 3402 00f4 1BB2     		sxth	r3, r3
 3403 00f6 9A42     		cmp	r2, r3
 3404 00f8 0FDA     		bge	.L138
 3405              		.loc 1 866 0 is_stmt 0 discriminator 1
 3406 00fa 3B6A     		ldr	r3, [r7, #32]
 3407 00fc 4FEA4303 		lsl	r3, r3, #1
 3408 0100 07F12802 		add	r2, r7, #40
 3409 0104 D318     		adds	r3, r2, r3
 3410 0106 33F8202C 		ldrh	r2, [r3, #-32]
 3411 010a 3B6A     		ldr	r3, [r7, #32]
 3412 010c 4FEA4303 		lsl	r3, r3, #1
 3413 0110 07F12801 		add	r1, r7, #40
 3414 0114 CB18     		adds	r3, r1, r3
 3415 0116 23F8102C 		strh	r2, [r3, #-16]	@ movhi
 3416              	.L138:
 863:../LSM9DS1_Driver.c **** 		for (j = 0; j < 3; j++)
 3417              		.loc 1 863 0 is_stmt 1
 3418 011a 3B6A     		ldr	r3, [r7, #32]
 3419 011c 03F10103 		add	r3, r3, #1
 3420 0120 3B62     		str	r3, [r7, #32]
 3421              	.L136:
 863:../LSM9DS1_Driver.c **** 		for (j = 0; j < 3; j++)
 3422              		.loc 1 863 0 is_stmt 0 discriminator 1
 3423 0122 3B6A     		ldr	r3, [r7, #32]
 3424 0124 022B     		cmp	r3, #2
 3425 0126 B0DD     		ble	.L139
 3426              	.LBE4:
 853:../LSM9DS1_Driver.c **** 	for (i=0; i<128; i++)
 3427              		.loc 1 853 0 is_stmt 1
 3428 0128 7B6A     		ldr	r3, [r7, #36]
 3429 012a 03F10103 		add	r3, r3, #1
 3430 012e 7B62     		str	r3, [r7, #36]
 3431              	.L134:
 853:../LSM9DS1_Driver.c **** 	for (i=0; i<128; i++)
 3432              		.loc 1 853 0 is_stmt 0 discriminator 1
 3433 0130 7B6A     		ldr	r3, [r7, #36]
 3434 0132 7F2B     		cmp	r3, #127
 3435 0134 7FF77FAF 		ble	.L144
 867:../LSM9DS1_Driver.c **** 		}
 868:../LSM9DS1_Driver.c **** 	}
 869:../LSM9DS1_Driver.c **** 	for (j = 0; j < 3; j++)
 3436              		.loc 1 869 0 is_stmt 1
 3437 0138 4FF00003 		mov	r3, #0
 3438 013c 3B62     		str	r3, [r7, #32]
 3439 013e 49E0     		b	.L141
 3440              	.L143:
 870:../LSM9DS1_Driver.c **** 	{
 871:../LSM9DS1_Driver.c **** 		mBiasRaw[j] = (magMax[j] + magMin[j]) / 2;
 3441              		.loc 1 871 0
 3442 0140 3B6A     		ldr	r3, [r7, #32]
 3443 0142 4FEA4303 		lsl	r3, r3, #1
 3444 0146 07F12802 		add	r2, r7, #40
 3445 014a D318     		adds	r3, r2, r3
 3446 014c 33F8183C 		ldrh	r3, [r3, #-24]
 3447 0150 1AB2     		sxth	r2, r3
 3448 0152 3B6A     		ldr	r3, [r7, #32]
 3449 0154 4FEA4303 		lsl	r3, r3, #1
 3450 0158 07F12801 		add	r1, r7, #40
 3451 015c CB18     		adds	r3, r1, r3
 3452 015e 33F8103C 		ldrh	r3, [r3, #-16]
 3453 0162 1BB2     		sxth	r3, r3
 3454 0164 D318     		adds	r3, r2, r3
 3455 0166 4FEAD372 		lsr	r2, r3, #31
 3456 016a D318     		adds	r3, r2, r3
 3457 016c 4FEA6303 		asr	r3, r3, #1
 3458 0170 99B2     		uxth	r1, r3
 3459 0172 40F20003 		movw	r3, #:lower16:mBiasRaw
 3460 0176 C0F20003 		movt	r3, #:upper16:mBiasRaw
 3461 017a 3A6A     		ldr	r2, [r7, #32]
 3462 017c 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 872:../LSM9DS1_Driver.c **** 		mBias[j] = calcMag(mBiasRaw[j]);
 3463              		.loc 1 872 0
 3464 0180 40F20003 		movw	r3, #:lower16:mBiasRaw
 3465 0184 C0F20003 		movt	r3, #:upper16:mBiasRaw
 3466 0188 3A6A     		ldr	r2, [r7, #32]
 3467 018a 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 3468 018e 1BB2     		sxth	r3, r3
 3469 0190 1846     		mov	r0, r3
 3470 0192 FFF7FEFF 		bl	calcMag
 3471 0196 0246     		mov	r2, r0	@ float
 3472 0198 40F20003 		movw	r3, #:lower16:mBias
 3473 019c C0F20003 		movt	r3, #:upper16:mBias
 3474 01a0 396A     		ldr	r1, [r7, #32]
 3475 01a2 4FEA8101 		lsl	r1, r1, #2
 3476 01a6 5B18     		adds	r3, r3, r1
 3477 01a8 1A60     		str	r2, [r3, #0]	@ float
 873:../LSM9DS1_Driver.c **** 		if (loadIn)
 3478              		.loc 1 873 0
 3479 01aa FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3480 01ac 002B     		cmp	r3, #0
 3481 01ae 0DD0     		beq	.L142
 874:../LSM9DS1_Driver.c **** 			magOffset(j, mBiasRaw[j]);
 3482              		.loc 1 874 0
 3483 01b0 3B6A     		ldr	r3, [r7, #32]
 3484 01b2 DAB2     		uxtb	r2, r3
 3485 01b4 40F20003 		movw	r3, #:lower16:mBiasRaw
 3486 01b8 C0F20003 		movt	r3, #:upper16:mBiasRaw
 3487 01bc 396A     		ldr	r1, [r7, #32]
 3488 01be 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 3489 01c2 1BB2     		sxth	r3, r3
 3490 01c4 1046     		mov	r0, r2
 3491 01c6 1946     		mov	r1, r3
 3492 01c8 FFF7FEFF 		bl	magOffset
 3493              	.L142:
 869:../LSM9DS1_Driver.c **** 	for (j = 0; j < 3; j++)
 3494              		.loc 1 869 0
 3495 01cc 3B6A     		ldr	r3, [r7, #32]
 3496 01ce 03F10103 		add	r3, r3, #1
 3497 01d2 3B62     		str	r3, [r7, #32]
 3498              	.L141:
 869:../LSM9DS1_Driver.c **** 	for (j = 0; j < 3; j++)
 3499              		.loc 1 869 0 is_stmt 0 discriminator 1
 3500 01d4 3B6A     		ldr	r3, [r7, #32]
 3501 01d6 022B     		cmp	r3, #2
 3502 01d8 B2DD     		ble	.L143
 875:../LSM9DS1_Driver.c **** 	}
 876:../LSM9DS1_Driver.c **** }
 3503              		.loc 1 876 0 is_stmt 1
 3504 01da 07F12807 		add	r7, r7, #40
 3505 01de BD46     		mov	sp, r7
 3506 01e0 80BD     		pop	{r7, pc}
 3507              		.cfi_endproc
 3508              	.LFE146:
 3510              		.global	__aeabi_d2f
 3511 01e2 00BF     		.section	.text.calcMag,"ax",%progbits
 3512              		.align	2
 3513              		.global	calcMag
 3514              		.thumb
 3515              		.thumb_func
 3517              	calcMag:
 3518              	.LFB147:
 877:../LSM9DS1_Driver.c **** 
 878:../LSM9DS1_Driver.c **** float calcMag(int16_t mag)
 879:../LSM9DS1_Driver.c **** {
 3519              		.loc 1 879 0
 3520              		.cfi_startproc
 3521              		@ args = 0, pretend = 0, frame = 8
 3522              		@ frame_needed = 1, uses_anonymous_args = 0
 3523 0000 80B5     		push	{r7, lr}
 3524              	.LCFI84:
 3525              		.cfi_def_cfa_offset 8
 3526              		.cfi_offset 7, -8
 3527              		.cfi_offset 14, -4
 3528 0002 82B0     		sub	sp, sp, #8
 3529              	.LCFI85:
 3530              		.cfi_def_cfa_offset 16
 3531 0004 00AF     		add	r7, sp, #0
 3532              	.LCFI86:
 3533              		.cfi_def_cfa_register 7
 3534 0006 0346     		mov	r3, r0
 3535 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 880:../LSM9DS1_Driver.c **** 	// Return the mag raw reading times our pre-calculated Gs / (ADC tick):
 881:../LSM9DS1_Driver.c **** 	return ceil(mRes * mag);
 3536              		.loc 1 881 0
 3537 000a B7F90630 		ldrsh	r3, [r7, #6]
 3538 000e 07EE903A 		fmsr	s15, r3	@ int
 3539 0012 B8EEE77A 		fsitos	s14, s15
 3540 0016 40F20003 		movw	r3, #:lower16:mRes
 3541 001a C0F20003 		movt	r3, #:upper16:mRes
 3542 001e D3ED007A 		flds	s15, [r3, #0]
 3543 0022 67EE277A 		fmuls	s15, s14, s15
 3544 0026 17EE900A 		fmrs	r0, s15
 3545 002a FFF7FEFF 		bl	__aeabi_f2d
 3546 002e 0246     		mov	r2, r0
 3547 0030 0B46     		mov	r3, r1
 3548 0032 1046     		mov	r0, r2
 3549 0034 1946     		mov	r1, r3
 3550 0036 FFF7FEFF 		bl	ceil
 3551 003a 0246     		mov	r2, r0
 3552 003c 0B46     		mov	r3, r1
 3553 003e 1046     		mov	r0, r2
 3554 0040 1946     		mov	r1, r3
 3555 0042 FFF7FEFF 		bl	__aeabi_d2f
 3556 0046 0346     		mov	r3, r0	@ float
 882:../LSM9DS1_Driver.c **** 	//return mag;
 883:../LSM9DS1_Driver.c **** }
 3557              		.loc 1 883 0
 3558 0048 1846     		mov	r0, r3	@ float
 3559 004a 07F10807 		add	r7, r7, #8
 3560 004e BD46     		mov	sp, r7
 3561 0050 80BD     		pop	{r7, pc}
 3562              		.cfi_endproc
 3563              	.LFE147:
 3565 0052 00BF     		.section	.text.magOffset,"ax",%progbits
 3566              		.align	2
 3567              		.global	magOffset
 3568              		.thumb
 3569              		.thumb_func
 3571              	magOffset:
 3572              	.LFB148:
 884:../LSM9DS1_Driver.c **** 
 885:../LSM9DS1_Driver.c **** void magOffset(uint8_t axis, int16_t offset)
 886:../LSM9DS1_Driver.c **** {
 3573              		.loc 1 886 0
 3574              		.cfi_startproc
 3575              		@ args = 0, pretend = 0, frame = 16
 3576              		@ frame_needed = 1, uses_anonymous_args = 0
 3577 0000 80B5     		push	{r7, lr}
 3578              	.LCFI87:
 3579              		.cfi_def_cfa_offset 8
 3580              		.cfi_offset 7, -8
 3581              		.cfi_offset 14, -4
 3582 0002 84B0     		sub	sp, sp, #16
 3583              	.LCFI88:
 3584              		.cfi_def_cfa_offset 24
 3585 0004 00AF     		add	r7, sp, #0
 3586              	.LCFI89:
 3587              		.cfi_def_cfa_register 7
 3588 0006 0246     		mov	r2, r0
 3589 0008 0B46     		mov	r3, r1
 3590 000a FA71     		strb	r2, [r7, #7]
 3591 000c BB80     		strh	r3, [r7, #4]	@ movhi
 887:../LSM9DS1_Driver.c **** 	if (axis > 2)
 3592              		.loc 1 887 0
 3593 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3594 0010 022B     		cmp	r3, #2
 3595 0012 21D8     		bhi	.L150
 3596              	.L148:
 888:../LSM9DS1_Driver.c **** 		return;
 889:../LSM9DS1_Driver.c **** 	uint8_t msb, lsb;
 890:../LSM9DS1_Driver.c **** 	msb = (offset & 0xFF00) >> 8;
 3597              		.loc 1 890 0
 3598 0014 B7F90430 		ldrsh	r3, [r7, #4]
 3599 0018 03F47F43 		and	r3, r3, #65280
 3600 001c 4FEA2323 		asr	r3, r3, #8
 3601 0020 FB73     		strb	r3, [r7, #15]
 891:../LSM9DS1_Driver.c **** 	lsb = offset & 0x00FF;
 3602              		.loc 1 891 0
 3603 0022 BB88     		ldrh	r3, [r7, #4]	@ movhi
 3604 0024 BB73     		strb	r3, [r7, #14]
 892:../LSM9DS1_Driver.c **** 	mWriteByte(OFFSET_X_REG_L_M + (2 * axis), lsb);
 3605              		.loc 1 892 0
 3606 0026 FB79     		ldrb	r3, [r7, #7]
 3607 0028 4FEA4303 		lsl	r3, r3, #1
 3608 002c DBB2     		uxtb	r3, r3
 3609 002e 03F10503 		add	r3, r3, #5
 3610 0032 DAB2     		uxtb	r2, r3
 3611 0034 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3612 0036 1046     		mov	r0, r2
 3613 0038 1946     		mov	r1, r3
 3614 003a FFF7FEFF 		bl	mWriteByte
 893:../LSM9DS1_Driver.c **** 	mWriteByte(OFFSET_X_REG_H_M + (2 * axis), msb);
 3615              		.loc 1 893 0
 3616 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3617 0040 03F10303 		add	r3, r3, #3
 3618 0044 DBB2     		uxtb	r3, r3
 3619 0046 4FEA4303 		lsl	r3, r3, #1
 3620 004a DAB2     		uxtb	r2, r3
 3621 004c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3622 004e 1046     		mov	r0, r2
 3623 0050 1946     		mov	r1, r3
 3624 0052 FFF7FEFF 		bl	mWriteByte
 3625 0056 00E0     		b	.L147
 3626              	.L150:
 888:../LSM9DS1_Driver.c **** 		return;
 3627              		.loc 1 888 0
 3628 0058 00BF     		nop
 3629              	.L147:
 894:../LSM9DS1_Driver.c **** }
 3630              		.loc 1 894 0
 3631 005a 07F11007 		add	r7, r7, #16
 3632 005e BD46     		mov	sp, r7
 3633 0060 80BD     		pop	{r7, pc}
 3634              		.cfi_endproc
 3635              	.LFE148:
 3637 0062 00BF     		.section	.text.accelAvailable,"ax",%progbits
 3638              		.align	2
 3639              		.global	accelAvailable
 3640              		.thumb
 3641              		.thumb_func
 3643              	accelAvailable:
 3644              	.LFB149:
 895:../LSM9DS1_Driver.c **** 
 896:../LSM9DS1_Driver.c **** uint8_t accelAvailable(void)
 897:../LSM9DS1_Driver.c **** {
 3645              		.loc 1 897 0
 3646              		.cfi_startproc
 3647              		@ args = 0, pretend = 0, frame = 8
 3648              		@ frame_needed = 1, uses_anonymous_args = 0
 3649 0000 80B5     		push	{r7, lr}
 3650              	.LCFI90:
 3651              		.cfi_def_cfa_offset 8
 3652              		.cfi_offset 7, -8
 3653              		.cfi_offset 14, -4
 3654 0002 82B0     		sub	sp, sp, #8
 3655              	.LCFI91:
 3656              		.cfi_def_cfa_offset 16
 3657 0004 00AF     		add	r7, sp, #0
 3658              	.LCFI92:
 3659              		.cfi_def_cfa_register 7
 898:../LSM9DS1_Driver.c **** 	uint8_t status = xgReadByte(STATUS_REG_1);
 3660              		.loc 1 898 0
 3661 0006 4FF02700 		mov	r0, #39
 3662 000a FFF7FEFF 		bl	xgReadByte
 3663 000e 0346     		mov	r3, r0
 3664 0010 FB71     		strb	r3, [r7, #7]
 899:../LSM9DS1_Driver.c **** 
 900:../LSM9DS1_Driver.c **** 	return (status & (1<<0));
 3665              		.loc 1 900 0
 3666 0012 FB79     		ldrb	r3, [r7, #7]
 3667 0014 03F00103 		and	r3, r3, #1
 3668 0018 DBB2     		uxtb	r3, r3
 901:../LSM9DS1_Driver.c **** }
 3669              		.loc 1 901 0
 3670 001a 1846     		mov	r0, r3
 3671 001c 07F10807 		add	r7, r7, #8
 3672 0020 BD46     		mov	sp, r7
 3673 0022 80BD     		pop	{r7, pc}
 3674              		.cfi_endproc
 3675              	.LFE149:
 3677              		.section	.text.gyroAvailable,"ax",%progbits
 3678              		.align	2
 3679              		.global	gyroAvailable
 3680              		.thumb
 3681              		.thumb_func
 3683              	gyroAvailable:
 3684              	.LFB150:
 902:../LSM9DS1_Driver.c **** 
 903:../LSM9DS1_Driver.c **** uint8_t gyroAvailable(void)
 904:../LSM9DS1_Driver.c **** {
 3685              		.loc 1 904 0
 3686              		.cfi_startproc
 3687              		@ args = 0, pretend = 0, frame = 8
 3688              		@ frame_needed = 1, uses_anonymous_args = 0
 3689 0000 80B5     		push	{r7, lr}
 3690              	.LCFI93:
 3691              		.cfi_def_cfa_offset 8
 3692              		.cfi_offset 7, -8
 3693              		.cfi_offset 14, -4
 3694 0002 82B0     		sub	sp, sp, #8
 3695              	.LCFI94:
 3696              		.cfi_def_cfa_offset 16
 3697 0004 00AF     		add	r7, sp, #0
 3698              	.LCFI95:
 3699              		.cfi_def_cfa_register 7
 905:../LSM9DS1_Driver.c **** 	uint8_t status = xgReadByte(STATUS_REG_1);
 3700              		.loc 1 905 0
 3701 0006 4FF02700 		mov	r0, #39
 3702 000a FFF7FEFF 		bl	xgReadByte
 3703 000e 0346     		mov	r3, r0
 3704 0010 FB71     		strb	r3, [r7, #7]
 906:../LSM9DS1_Driver.c **** 
 907:../LSM9DS1_Driver.c **** 	return ((status & (1<<1)) >> 1);
 3705              		.loc 1 907 0
 3706 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3707 0014 03F00203 		and	r3, r3, #2
 3708 0018 4FEA6303 		asr	r3, r3, #1
 3709 001c DBB2     		uxtb	r3, r3
 908:../LSM9DS1_Driver.c **** }
 3710              		.loc 1 908 0
 3711 001e 1846     		mov	r0, r3
 3712 0020 07F10807 		add	r7, r7, #8
 3713 0024 BD46     		mov	sp, r7
 3714 0026 80BD     		pop	{r7, pc}
 3715              		.cfi_endproc
 3716              	.LFE150:
 3718              		.section	.text.tempAvailable,"ax",%progbits
 3719              		.align	2
 3720              		.global	tempAvailable
 3721              		.thumb
 3722              		.thumb_func
 3724              	tempAvailable:
 3725              	.LFB151:
 909:../LSM9DS1_Driver.c **** 
 910:../LSM9DS1_Driver.c **** uint8_t tempAvailable(void)
 911:../LSM9DS1_Driver.c **** {
 3726              		.loc 1 911 0
 3727              		.cfi_startproc
 3728              		@ args = 0, pretend = 0, frame = 8
 3729              		@ frame_needed = 1, uses_anonymous_args = 0
 3730 0000 80B5     		push	{r7, lr}
 3731              	.LCFI96:
 3732              		.cfi_def_cfa_offset 8
 3733              		.cfi_offset 7, -8
 3734              		.cfi_offset 14, -4
 3735 0002 82B0     		sub	sp, sp, #8
 3736              	.LCFI97:
 3737              		.cfi_def_cfa_offset 16
 3738 0004 00AF     		add	r7, sp, #0
 3739              	.LCFI98:
 3740              		.cfi_def_cfa_register 7
 912:../LSM9DS1_Driver.c **** 	uint8_t status = xgReadByte(STATUS_REG_1);
 3741              		.loc 1 912 0
 3742 0006 4FF02700 		mov	r0, #39
 3743 000a FFF7FEFF 		bl	xgReadByte
 3744 000e 0346     		mov	r3, r0
 3745 0010 FB71     		strb	r3, [r7, #7]
 913:../LSM9DS1_Driver.c **** 
 914:../LSM9DS1_Driver.c **** 	return ((status & (1<<2)) >> 2);
 3746              		.loc 1 914 0
 3747 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3748 0014 03F00403 		and	r3, r3, #4
 3749 0018 4FEAA303 		asr	r3, r3, #2
 3750 001c DBB2     		uxtb	r3, r3
 915:../LSM9DS1_Driver.c **** }
 3751              		.loc 1 915 0
 3752 001e 1846     		mov	r0, r3
 3753 0020 07F10807 		add	r7, r7, #8
 3754 0024 BD46     		mov	sp, r7
 3755 0026 80BD     		pop	{r7, pc}
 3756              		.cfi_endproc
 3757              	.LFE151:
 3759              		.section	.text.readAccel,"ax",%progbits
 3760              		.align	2
 3761              		.global	readAccel
 3762              		.thumb
 3763              		.thumb_func
 3765              	readAccel:
 3766              	.LFB152:
 916:../LSM9DS1_Driver.c **** 
 917:../LSM9DS1_Driver.c **** int16_t readAccel(lsm9ds1_axis axis)
 918:../LSM9DS1_Driver.c **** {
 3767              		.loc 1 918 0
 3768              		.cfi_startproc
 3769              		@ args = 0, pretend = 0, frame = 24
 3770              		@ frame_needed = 1, uses_anonymous_args = 0
 3771 0000 80B5     		push	{r7, lr}
 3772              	.LCFI99:
 3773              		.cfi_def_cfa_offset 8
 3774              		.cfi_offset 7, -8
 3775              		.cfi_offset 14, -4
 3776 0002 86B0     		sub	sp, sp, #24
 3777              	.LCFI100:
 3778              		.cfi_def_cfa_offset 32
 3779 0004 00AF     		add	r7, sp, #0
 3780              	.LCFI101:
 3781              		.cfi_def_cfa_register 7
 3782 0006 0346     		mov	r3, r0
 3783 0008 FB71     		strb	r3, [r7, #7]
 919:../LSM9DS1_Driver.c **** 	uint8_t temp[2];
 920:../LSM9DS1_Driver.c **** 	int16_t value;
 921:../LSM9DS1_Driver.c **** 	uint8_t subAddress = OUT_X_L_XL + (2 * axis);
 3784              		.loc 1 921 0
 3785 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3786 000c 03F11403 		add	r3, r3, #20
 3787 0010 DBB2     		uxtb	r3, r3
 3788 0012 4FEA4303 		lsl	r3, r3, #1
 3789 0016 7B75     		strb	r3, [r7, #21]
 922:../LSM9DS1_Driver.c **** 	int i = 0;
 3790              		.loc 1 922 0
 3791 0018 4FF00003 		mov	r3, #0
 3792 001c 3B61     		str	r3, [r7, #16]
 923:../LSM9DS1_Driver.c **** 	//xgReadBytes(OUT_X_L_XL + (2 * axis), temp, 2);
 924:../LSM9DS1_Driver.c **** 	while(i < 2)
 3793              		.loc 1 924 0
 3794 001e 1DE0     		b	.L158
 3795              	.L159:
 925:../LSM9DS1_Driver.c **** 	{
 926:../LSM9DS1_Driver.c **** 		subAddress = subAddress + i;
 3796              		.loc 1 926 0
 3797 0020 3B69     		ldr	r3, [r7, #16]
 3798 0022 DAB2     		uxtb	r2, r3
 3799 0024 7B7D     		ldrb	r3, [r7, #21]
 3800 0026 D318     		adds	r3, r2, r3
 3801 0028 7B75     		strb	r3, [r7, #21]
 927:../LSM9DS1_Driver.c **** 
 928:../LSM9DS1_Driver.c **** 		temp[i] = I2CreadBytes(_xgAddress, subAddress, NULL, 0);
 3802              		.loc 1 928 0
 3803 002a 40F20003 		movw	r3, #:lower16:_xgAddress
 3804 002e C0F20003 		movt	r3, #:upper16:_xgAddress
 3805 0032 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 3806 0034 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 3807 0036 1046     		mov	r0, r2
 3808 0038 1946     		mov	r1, r3
 3809 003a 4FF00002 		mov	r2, #0
 3810 003e 4FF00003 		mov	r3, #0
 3811 0042 FFF7FEFF 		bl	I2CreadBytes
 3812 0046 0346     		mov	r3, r0
 3813 0048 1A46     		mov	r2, r3
 3814 004a 07F10C01 		add	r1, r7, #12
 3815 004e 3B69     		ldr	r3, [r7, #16]
 3816 0050 CB18     		adds	r3, r1, r3
 3817 0052 1A70     		strb	r2, [r3, #0]
 929:../LSM9DS1_Driver.c **** 
 930:../LSM9DS1_Driver.c **** 		i++;
 3818              		.loc 1 930 0
 3819 0054 3B69     		ldr	r3, [r7, #16]
 3820 0056 03F10103 		add	r3, r3, #1
 3821 005a 3B61     		str	r3, [r7, #16]
 3822              	.L158:
 924:../LSM9DS1_Driver.c **** 	while(i < 2)
 3823              		.loc 1 924 0 discriminator 1
 3824 005c 3B69     		ldr	r3, [r7, #16]
 3825 005e 012B     		cmp	r3, #1
 3826 0060 DEDD     		ble	.L159
 931:../LSM9DS1_Driver.c **** 	}
 932:../LSM9DS1_Driver.c **** 
 933:../LSM9DS1_Driver.c **** 	value = (temp[1] << 8) | temp[0];
 3827              		.loc 1 933 0
 3828 0062 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 3829 0064 4FEA0323 		lsl	r3, r3, #8
 3830 0068 9AB2     		uxth	r2, r3
 3831 006a 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 3832 006c 1343     		orrs	r3, r3, r2
 3833 006e FB82     		strh	r3, [r7, #22]	@ movhi
 934:../LSM9DS1_Driver.c **** 
 935:../LSM9DS1_Driver.c **** 	if (_autoCalc)
 3834              		.loc 1 935 0
 3835 0070 40F20003 		movw	r3, #:lower16:_autoCalc
 3836 0074 C0F20003 		movt	r3, #:upper16:_autoCalc
 3837 0078 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3838 007a 002B     		cmp	r3, #0
 3839 007c 0BD0     		beq	.L160
 936:../LSM9DS1_Driver.c **** 		value -= aBiasRaw[axis];
 3840              		.loc 1 936 0
 3841 007e FA8A     		ldrh	r2, [r7, #22]
 3842 0080 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 3843 0082 40F20003 		movw	r3, #:lower16:aBiasRaw
 3844 0086 C0F20003 		movt	r3, #:upper16:aBiasRaw
 3845 008a 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 3846 008e 9BB2     		uxth	r3, r3
 3847 0090 D31A     		subs	r3, r2, r3
 3848 0092 9BB2     		uxth	r3, r3
 3849 0094 FB82     		strh	r3, [r7, #22]	@ movhi
 3850              	.L160:
 937:../LSM9DS1_Driver.c **** 
 938:../LSM9DS1_Driver.c **** 	return value;
 3851              		.loc 1 938 0
 3852 0096 FB8A     		ldrh	r3, [r7, #22]
 3853 0098 1BB2     		sxth	r3, r3
 939:../LSM9DS1_Driver.c **** }
 3854              		.loc 1 939 0
 3855 009a 1846     		mov	r0, r3
 3856 009c 07F11807 		add	r7, r7, #24
 3857 00a0 BD46     		mov	sp, r7
 3858 00a2 80BD     		pop	{r7, pc}
 3859              		.cfi_endproc
 3860              	.LFE152:
 3862              		.section	.text.readMag,"ax",%progbits
 3863              		.align	2
 3864              		.global	readMag
 3865              		.thumb
 3866              		.thumb_func
 3868              	readMag:
 3869              	.LFB153:
 940:../LSM9DS1_Driver.c **** 
 941:../LSM9DS1_Driver.c **** int16_t readMag(lsm9ds1_axis axis)
 942:../LSM9DS1_Driver.c **** {
 3870              		.loc 1 942 0
 3871              		.cfi_startproc
 3872              		@ args = 0, pretend = 0, frame = 24
 3873              		@ frame_needed = 1, uses_anonymous_args = 0
 3874 0000 80B5     		push	{r7, lr}
 3875              	.LCFI102:
 3876              		.cfi_def_cfa_offset 8
 3877              		.cfi_offset 7, -8
 3878              		.cfi_offset 14, -4
 3879 0002 86B0     		sub	sp, sp, #24
 3880              	.LCFI103:
 3881              		.cfi_def_cfa_offset 32
 3882 0004 00AF     		add	r7, sp, #0
 3883              	.LCFI104:
 3884              		.cfi_def_cfa_register 7
 3885 0006 0346     		mov	r3, r0
 3886 0008 FB71     		strb	r3, [r7, #7]
 943:../LSM9DS1_Driver.c **** 	uint8_t temp[2];
 944:../LSM9DS1_Driver.c **** 
 945:../LSM9DS1_Driver.c **** 	int i = 0;
 3887              		.loc 1 945 0
 3888 000a 4FF00003 		mov	r3, #0
 3889 000e 7B61     		str	r3, [r7, #20]
 946:../LSM9DS1_Driver.c **** 	uint8_t subAddress = OUT_X_L_M + (2 * axis);
 3890              		.loc 1 946 0
 3891 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3892 0012 03F11403 		add	r3, r3, #20
 3893 0016 DBB2     		uxtb	r3, r3
 3894 0018 4FEA4303 		lsl	r3, r3, #1
 3895 001c FB74     		strb	r3, [r7, #19]
 947:../LSM9DS1_Driver.c **** 
 948:../LSM9DS1_Driver.c **** 	while(i < 2)
 3896              		.loc 1 948 0
 3897 001e 1DE0     		b	.L163
 3898              	.L164:
 949:../LSM9DS1_Driver.c **** 	{
 950:../LSM9DS1_Driver.c **** 		subAddress = subAddress + i;
 3899              		.loc 1 950 0
 3900 0020 7B69     		ldr	r3, [r7, #20]
 3901 0022 DAB2     		uxtb	r2, r3
 3902 0024 FB7C     		ldrb	r3, [r7, #19]
 3903 0026 D318     		adds	r3, r2, r3
 3904 0028 FB74     		strb	r3, [r7, #19]
 951:../LSM9DS1_Driver.c **** 
 952:../LSM9DS1_Driver.c **** 		temp[i] = I2CreadBytes(_mAddress, subAddress, NULL, 0);
 3905              		.loc 1 952 0
 3906 002a 40F20003 		movw	r3, #:lower16:_mAddress
 3907 002e C0F20003 		movt	r3, #:upper16:_mAddress
 3908 0032 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 3909 0034 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 3910 0036 1046     		mov	r0, r2
 3911 0038 1946     		mov	r1, r3
 3912 003a 4FF00002 		mov	r2, #0
 3913 003e 4FF00003 		mov	r3, #0
 3914 0042 FFF7FEFF 		bl	I2CreadBytes
 3915 0046 0346     		mov	r3, r0
 3916 0048 1A46     		mov	r2, r3
 3917 004a 07F10C01 		add	r1, r7, #12
 3918 004e 7B69     		ldr	r3, [r7, #20]
 3919 0050 CB18     		adds	r3, r1, r3
 3920 0052 1A70     		strb	r2, [r3, #0]
 953:../LSM9DS1_Driver.c **** 
 954:../LSM9DS1_Driver.c **** 		i++;
 3921              		.loc 1 954 0
 3922 0054 7B69     		ldr	r3, [r7, #20]
 3923 0056 03F10103 		add	r3, r3, #1
 3924 005a 7B61     		str	r3, [r7, #20]
 3925              	.L163:
 948:../LSM9DS1_Driver.c **** 	while(i < 2)
 3926              		.loc 1 948 0 discriminator 1
 3927 005c 7B69     		ldr	r3, [r7, #20]
 3928 005e 012B     		cmp	r3, #1
 3929 0060 DEDD     		ble	.L164
 955:../LSM9DS1_Driver.c **** 	}
 956:../LSM9DS1_Driver.c **** 
 957:../LSM9DS1_Driver.c **** 	int16_t value = (temp[1] << 8) | temp[0];
 3930              		.loc 1 957 0
 3931 0062 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 3932 0064 4FEA0323 		lsl	r3, r3, #8
 3933 0068 9AB2     		uxth	r2, r3
 3934 006a 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 3935 006c 1343     		orrs	r3, r3, r2
 3936 006e 3B82     		strh	r3, [r7, #16]	@ movhi
 958:../LSM9DS1_Driver.c **** 	return value;
 3937              		.loc 1 958 0
 3938 0070 3B8A     		ldrh	r3, [r7, #16]
 3939 0072 1BB2     		sxth	r3, r3
 959:../LSM9DS1_Driver.c **** }
 3940              		.loc 1 959 0
 3941 0074 1846     		mov	r0, r3
 3942 0076 07F11807 		add	r7, r7, #24
 3943 007a BD46     		mov	sp, r7
 3944 007c 80BD     		pop	{r7, pc}
 3945              		.cfi_endproc
 3946              	.LFE153:
 3948 007e 00BF     		.section	.text.readTemp,"ax",%progbits
 3949              		.align	2
 3950              		.global	readTemp
 3951              		.thumb
 3952              		.thumb_func
 3954              	readTemp:
 3955              	.LFB154:
 960:../LSM9DS1_Driver.c **** 
 961:../LSM9DS1_Driver.c **** int16_t readTemp(void)
 962:../LSM9DS1_Driver.c **** {
 3956              		.loc 1 962 0
 3957              		.cfi_startproc
 3958              		@ args = 0, pretend = 0, frame = 8
 3959              		@ frame_needed = 1, uses_anonymous_args = 0
 3960 0000 80B5     		push	{r7, lr}
 3961              	.LCFI105:
 3962              		.cfi_def_cfa_offset 8
 3963              		.cfi_offset 7, -8
 3964              		.cfi_offset 14, -4
 3965 0002 82B0     		sub	sp, sp, #8
 3966              	.LCFI106:
 3967              		.cfi_def_cfa_offset 16
 3968 0004 00AF     		add	r7, sp, #0
 3969              	.LCFI107:
 3970              		.cfi_def_cfa_register 7
 963:../LSM9DS1_Driver.c **** 	uint8_t temp[2]; // We'll read two bytes from the temperature sensor into temp
 964:../LSM9DS1_Driver.c **** 
 965:../LSM9DS1_Driver.c **** 	int i  = 0;
 3971              		.loc 1 965 0
 3972 0006 4FF00003 		mov	r3, #0
 3973 000a 7B60     		str	r3, [r7, #4]
 966:../LSM9DS1_Driver.c **** 	uint8_t subAddress = OUT_TEMP_L;
 3974              		.loc 1 966 0
 3975 000c 4FF01503 		mov	r3, #21
 3976 0010 FB70     		strb	r3, [r7, #3]
 967:../LSM9DS1_Driver.c **** 
 968:../LSM9DS1_Driver.c **** 	while(i < 2)
 3977              		.loc 1 968 0
 3978 0012 1CE0     		b	.L167
 3979              	.L168:
 969:../LSM9DS1_Driver.c **** 	{
 970:../LSM9DS1_Driver.c **** 		subAddress = subAddress + i;
 3980              		.loc 1 970 0
 3981 0014 7B68     		ldr	r3, [r7, #4]
 3982 0016 DAB2     		uxtb	r2, r3
 3983 0018 FB78     		ldrb	r3, [r7, #3]
 3984 001a D318     		adds	r3, r2, r3
 3985 001c FB70     		strb	r3, [r7, #3]
 971:../LSM9DS1_Driver.c **** 
 972:../LSM9DS1_Driver.c **** 		temp[i] = I2CreadBytes(_xgAddress, subAddress, NULL, 0);
 3986              		.loc 1 972 0
 3987 001e 40F20003 		movw	r3, #:lower16:_xgAddress
 3988 0022 C0F20003 		movt	r3, #:upper16:_xgAddress
 3989 0026 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 3990 0028 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3991 002a 1046     		mov	r0, r2
 3992 002c 1946     		mov	r1, r3
 3993 002e 4FF00002 		mov	r2, #0
 3994 0032 4FF00003 		mov	r3, #0
 3995 0036 FFF7FEFF 		bl	I2CreadBytes
 3996 003a 0346     		mov	r3, r0
 3997 003c 1A46     		mov	r2, r3
 3998 003e 3946     		mov	r1, r7
 3999 0040 7B68     		ldr	r3, [r7, #4]
 4000 0042 CB18     		adds	r3, r1, r3
 4001 0044 1A70     		strb	r2, [r3, #0]
 973:../LSM9DS1_Driver.c **** 
 974:../LSM9DS1_Driver.c **** 		i++;
 4002              		.loc 1 974 0
 4003 0046 7B68     		ldr	r3, [r7, #4]
 4004 0048 03F10103 		add	r3, r3, #1
 4005 004c 7B60     		str	r3, [r7, #4]
 4006              	.L167:
 968:../LSM9DS1_Driver.c **** 	while(i < 2)
 4007              		.loc 1 968 0 discriminator 1
 4008 004e 7B68     		ldr	r3, [r7, #4]
 4009 0050 012B     		cmp	r3, #1
 4010 0052 DFDD     		ble	.L168
 975:../LSM9DS1_Driver.c **** 	}
 976:../LSM9DS1_Driver.c **** 
 977:../LSM9DS1_Driver.c **** 	//xgReadBytes(OUT_TEMP_L, temp, 2); // Read 2 bytes, beginning at OUT_TEMP_L
 978:../LSM9DS1_Driver.c **** 	temperature = (temp[1] << 8) | temp[0];
 4011              		.loc 1 978 0
 4012 0054 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 4013 0056 4FEA0323 		lsl	r3, r3, #8
 4014 005a 9AB2     		uxth	r2, r3
 4015 005c 3B78     		ldrb	r3, [r7, #0]	@ zero_extendqisi2
 4016 005e 1343     		orrs	r3, r3, r2
 4017 0060 9AB2     		uxth	r2, r3
 4018 0062 40F20003 		movw	r3, #:lower16:temperature
 4019 0066 C0F20003 		movt	r3, #:upper16:temperature
 4020 006a 1A80     		strh	r2, [r3, #0]	@ movhi
 979:../LSM9DS1_Driver.c **** 
 980:../LSM9DS1_Driver.c **** 	return temperature;
 4021              		.loc 1 980 0
 4022 006c 40F20003 		movw	r3, #:lower16:temperature
 4023 0070 C0F20003 		movt	r3, #:upper16:temperature
 4024 0074 1B88     		ldrh	r3, [r3, #0]
 4025 0076 1BB2     		sxth	r3, r3
 981:../LSM9DS1_Driver.c **** }
 4026              		.loc 1 981 0
 4027 0078 1846     		mov	r0, r3
 4028 007a 07F10807 		add	r7, r7, #8
 4029 007e BD46     		mov	sp, r7
 4030 0080 80BD     		pop	{r7, pc}
 4031              		.cfi_endproc
 4032              	.LFE154:
 4034 0082 00BF     		.section	.text.readGyro,"ax",%progbits
 4035              		.align	2
 4036              		.global	readGyro
 4037              		.thumb
 4038              		.thumb_func
 4040              	readGyro:
 4041              	.LFB155:
 982:../LSM9DS1_Driver.c **** 
 983:../LSM9DS1_Driver.c **** int16_t readGyro(lsm9ds1_axis axis)
 984:../LSM9DS1_Driver.c **** {
 4042              		.loc 1 984 0
 4043              		.cfi_startproc
 4044              		@ args = 0, pretend = 0, frame = 24
 4045              		@ frame_needed = 1, uses_anonymous_args = 0
 4046 0000 80B5     		push	{r7, lr}
 4047              	.LCFI108:
 4048              		.cfi_def_cfa_offset 8
 4049              		.cfi_offset 7, -8
 4050              		.cfi_offset 14, -4
 4051 0002 86B0     		sub	sp, sp, #24
 4052              	.LCFI109:
 4053              		.cfi_def_cfa_offset 32
 4054 0004 00AF     		add	r7, sp, #0
 4055              	.LCFI110:
 4056              		.cfi_def_cfa_register 7
 4057 0006 0346     		mov	r3, r0
 4058 0008 FB71     		strb	r3, [r7, #7]
 985:../LSM9DS1_Driver.c **** 	uint8_t temp[2];
 986:../LSM9DS1_Driver.c **** 	int16_t value;
 987:../LSM9DS1_Driver.c **** 
 988:../LSM9DS1_Driver.c **** 	int i  = 0;
 4059              		.loc 1 988 0
 4060 000a 4FF00003 		mov	r3, #0
 4061 000e 3B61     		str	r3, [r7, #16]
 989:../LSM9DS1_Driver.c **** 	uint8_t subAddress = OUT_X_L_G + (2 * axis);
 4062              		.loc 1 989 0
 4063 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4064 0012 03F10C03 		add	r3, r3, #12
 4065 0016 DBB2     		uxtb	r3, r3
 4066 0018 4FEA4303 		lsl	r3, r3, #1
 4067 001c FB73     		strb	r3, [r7, #15]
 990:../LSM9DS1_Driver.c **** 
 991:../LSM9DS1_Driver.c **** 	while(i < 2)
 4068              		.loc 1 991 0
 4069 001e 1DE0     		b	.L171
 4070              	.L172:
 992:../LSM9DS1_Driver.c **** 	{
 993:../LSM9DS1_Driver.c **** 		subAddress = subAddress + i;
 4071              		.loc 1 993 0
 4072 0020 3B69     		ldr	r3, [r7, #16]
 4073 0022 DAB2     		uxtb	r2, r3
 4074 0024 FB7B     		ldrb	r3, [r7, #15]
 4075 0026 D318     		adds	r3, r2, r3
 4076 0028 FB73     		strb	r3, [r7, #15]
 994:../LSM9DS1_Driver.c **** 
 995:../LSM9DS1_Driver.c **** 		temp[i] = I2CreadBytes(_xgAddress, subAddress, NULL, 0);
 4077              		.loc 1 995 0
 4078 002a 40F20003 		movw	r3, #:lower16:_xgAddress
 4079 002e C0F20003 		movt	r3, #:upper16:_xgAddress
 4080 0032 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 4081 0034 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4082 0036 1046     		mov	r0, r2
 4083 0038 1946     		mov	r1, r3
 4084 003a 4FF00002 		mov	r2, #0
 4085 003e 4FF00003 		mov	r3, #0
 4086 0042 FFF7FEFF 		bl	I2CreadBytes
 4087 0046 0346     		mov	r3, r0
 4088 0048 1A46     		mov	r2, r3
 4089 004a 07F10C01 		add	r1, r7, #12
 4090 004e 3B69     		ldr	r3, [r7, #16]
 4091 0050 CB18     		adds	r3, r1, r3
 4092 0052 1A70     		strb	r2, [r3, #0]
 996:../LSM9DS1_Driver.c **** 		i++;
 4093              		.loc 1 996 0
 4094 0054 3B69     		ldr	r3, [r7, #16]
 4095 0056 03F10103 		add	r3, r3, #1
 4096 005a 3B61     		str	r3, [r7, #16]
 4097              	.L171:
 991:../LSM9DS1_Driver.c **** 	while(i < 2)
 4098              		.loc 1 991 0 discriminator 1
 4099 005c 3B69     		ldr	r3, [r7, #16]
 4100 005e 012B     		cmp	r3, #1
 4101 0060 DEDD     		ble	.L172
 997:../LSM9DS1_Driver.c **** 	}
 998:../LSM9DS1_Driver.c **** 
 999:../LSM9DS1_Driver.c **** 	value = (temp[1] << 8) | temp[0];
 4102              		.loc 1 999 0
 4103 0062 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 4104 0064 4FEA0323 		lsl	r3, r3, #8
 4105 0068 9AB2     		uxth	r2, r3
 4106 006a 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 4107 006c 1343     		orrs	r3, r3, r2
 4108 006e FB82     		strh	r3, [r7, #22]	@ movhi
1000:../LSM9DS1_Driver.c **** 
1001:../LSM9DS1_Driver.c **** 	if (_autoCalc)
 4109              		.loc 1 1001 0
 4110 0070 40F20003 		movw	r3, #:lower16:_autoCalc
 4111 0074 C0F20003 		movt	r3, #:upper16:_autoCalc
 4112 0078 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 4113 007a 002B     		cmp	r3, #0
 4114 007c 0BD0     		beq	.L173
1002:../LSM9DS1_Driver.c **** 		value -= gBiasRaw[axis];
 4115              		.loc 1 1002 0
 4116 007e FA8A     		ldrh	r2, [r7, #22]
 4117 0080 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 4118 0082 40F20003 		movw	r3, #:lower16:gBiasRaw
 4119 0086 C0F20003 		movt	r3, #:upper16:gBiasRaw
 4120 008a 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 4121 008e 9BB2     		uxth	r3, r3
 4122 0090 D31A     		subs	r3, r2, r3
 4123 0092 9BB2     		uxth	r3, r3
 4124 0094 FB82     		strh	r3, [r7, #22]	@ movhi
 4125              	.L173:
1003:../LSM9DS1_Driver.c **** 
1004:../LSM9DS1_Driver.c **** 	return value;
 4126              		.loc 1 1004 0
 4127 0096 FB8A     		ldrh	r3, [r7, #22]
 4128 0098 1BB2     		sxth	r3, r3
1005:../LSM9DS1_Driver.c **** }
 4129              		.loc 1 1005 0
 4130 009a 1846     		mov	r0, r3
 4131 009c 07F11807 		add	r7, r7, #24
 4132 00a0 BD46     		mov	sp, r7
 4133 00a2 80BD     		pop	{r7, pc}
 4134              		.cfi_endproc
 4135              	.LFE155:
 4137              		.section	.text.calcGyro,"ax",%progbits
 4138              		.align	2
 4139              		.global	calcGyro
 4140              		.thumb
 4141              		.thumb_func
 4143              	calcGyro:
 4144              	.LFB156:
1006:../LSM9DS1_Driver.c **** 
1007:../LSM9DS1_Driver.c **** float calcGyro(int16_t gyro)
1008:../LSM9DS1_Driver.c **** {
 4145              		.loc 1 1008 0
 4146              		.cfi_startproc
 4147              		@ args = 0, pretend = 0, frame = 8
 4148              		@ frame_needed = 1, uses_anonymous_args = 0
 4149 0000 80B5     		push	{r7, lr}
 4150              	.LCFI111:
 4151              		.cfi_def_cfa_offset 8
 4152              		.cfi_offset 7, -8
 4153              		.cfi_offset 14, -4
 4154 0002 82B0     		sub	sp, sp, #8
 4155              	.LCFI112:
 4156              		.cfi_def_cfa_offset 16
 4157 0004 00AF     		add	r7, sp, #0
 4158              	.LCFI113:
 4159              		.cfi_def_cfa_register 7
 4160 0006 0346     		mov	r3, r0
 4161 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1009:../LSM9DS1_Driver.c **** 	// Return the gyro raw reading times our pre-calculated DPS / (ADC tick):
1010:../LSM9DS1_Driver.c **** 	return round(gRes * gyro);
 4162              		.loc 1 1010 0
 4163 000a B7F90630 		ldrsh	r3, [r7, #6]
 4164 000e 07EE903A 		fmsr	s15, r3	@ int
 4165 0012 B8EEE77A 		fsitos	s14, s15
 4166 0016 40F20003 		movw	r3, #:lower16:gRes
 4167 001a C0F20003 		movt	r3, #:upper16:gRes
 4168 001e D3ED007A 		flds	s15, [r3, #0]
 4169 0022 67EE277A 		fmuls	s15, s14, s15
 4170 0026 17EE900A 		fmrs	r0, s15
 4171 002a FFF7FEFF 		bl	__aeabi_f2d
 4172 002e 0246     		mov	r2, r0
 4173 0030 0B46     		mov	r3, r1
 4174 0032 1046     		mov	r0, r2
 4175 0034 1946     		mov	r1, r3
 4176 0036 FFF7FEFF 		bl	round
 4177 003a 0246     		mov	r2, r0
 4178 003c 0B46     		mov	r3, r1
 4179 003e 1046     		mov	r0, r2
 4180 0040 1946     		mov	r1, r3
 4181 0042 FFF7FEFF 		bl	__aeabi_d2f
 4182 0046 0346     		mov	r3, r0	@ float
1011:../LSM9DS1_Driver.c **** 	//return gyro;
1012:../LSM9DS1_Driver.c **** }
 4183              		.loc 1 1012 0
 4184 0048 1846     		mov	r0, r3	@ float
 4185 004a 07F10807 		add	r7, r7, #8
 4186 004e BD46     		mov	sp, r7
 4187 0050 80BD     		pop	{r7, pc}
 4188              		.cfi_endproc
 4189              	.LFE156:
 4191 0052 00BF     		.section	.text.calcAccel,"ax",%progbits
 4192              		.align	2
 4193              		.global	calcAccel
 4194              		.thumb
 4195              		.thumb_func
 4197              	calcAccel:
 4198              	.LFB157:
1013:../LSM9DS1_Driver.c **** 
1014:../LSM9DS1_Driver.c **** float calcAccel(int16_t accel)
1015:../LSM9DS1_Driver.c **** {
 4199              		.loc 1 1015 0
 4200              		.cfi_startproc
 4201              		@ args = 0, pretend = 0, frame = 8
 4202              		@ frame_needed = 1, uses_anonymous_args = 0
 4203 0000 80B5     		push	{r7, lr}
 4204              	.LCFI114:
 4205              		.cfi_def_cfa_offset 8
 4206              		.cfi_offset 7, -8
 4207              		.cfi_offset 14, -4
 4208 0002 82B0     		sub	sp, sp, #8
 4209              	.LCFI115:
 4210              		.cfi_def_cfa_offset 16
 4211 0004 00AF     		add	r7, sp, #0
 4212              	.LCFI116:
 4213              		.cfi_def_cfa_register 7
 4214 0006 0346     		mov	r3, r0
 4215 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1016:../LSM9DS1_Driver.c **** 	// Return the accel raw reading times our pre-calculated g's / (ADC tick):
1017:../LSM9DS1_Driver.c **** 	return round(aRes * accel);
 4216              		.loc 1 1017 0
 4217 000a B7F90630 		ldrsh	r3, [r7, #6]
 4218 000e 07EE903A 		fmsr	s15, r3	@ int
 4219 0012 B8EEE77A 		fsitos	s14, s15
 4220 0016 40F20003 		movw	r3, #:lower16:aRes
 4221 001a C0F20003 		movt	r3, #:upper16:aRes
 4222 001e D3ED007A 		flds	s15, [r3, #0]
 4223 0022 67EE277A 		fmuls	s15, s14, s15
 4224 0026 17EE900A 		fmrs	r0, s15
 4225 002a FFF7FEFF 		bl	__aeabi_f2d
 4226 002e 0246     		mov	r2, r0
 4227 0030 0B46     		mov	r3, r1
 4228 0032 1046     		mov	r0, r2
 4229 0034 1946     		mov	r1, r3
 4230 0036 FFF7FEFF 		bl	round
 4231 003a 0246     		mov	r2, r0
 4232 003c 0B46     		mov	r3, r1
 4233 003e 1046     		mov	r0, r2
 4234 0040 1946     		mov	r1, r3
 4235 0042 FFF7FEFF 		bl	__aeabi_d2f
 4236 0046 0346     		mov	r3, r0	@ float
1018:../LSM9DS1_Driver.c **** 	//return accel;
1019:../LSM9DS1_Driver.c **** }
 4237              		.loc 1 1019 0
 4238 0048 1846     		mov	r0, r3	@ float
 4239 004a 07F10807 		add	r7, r7, #8
 4240 004e BD46     		mov	sp, r7
 4241 0050 80BD     		pop	{r7, pc}
 4242              		.cfi_endproc
 4243              	.LFE157:
 4245 0052 00BF     		.section	.text.setGyroScale,"ax",%progbits
 4246              		.align	2
 4247              		.global	setGyroScale
 4248              		.thumb
 4249              		.thumb_func
 4251              	setGyroScale:
 4252              	.LFB158:
1020:../LSM9DS1_Driver.c **** 
1021:../LSM9DS1_Driver.c **** 
1022:../LSM9DS1_Driver.c **** void setGyroScale(uint16_t gScl)
1023:../LSM9DS1_Driver.c **** {
 4253              		.loc 1 1023 0
 4254              		.cfi_startproc
 4255              		@ args = 0, pretend = 0, frame = 16
 4256              		@ frame_needed = 1, uses_anonymous_args = 0
 4257 0000 80B5     		push	{r7, lr}
 4258              	.LCFI117:
 4259              		.cfi_def_cfa_offset 8
 4260              		.cfi_offset 7, -8
 4261              		.cfi_offset 14, -4
 4262 0002 84B0     		sub	sp, sp, #16
 4263              	.LCFI118:
 4264              		.cfi_def_cfa_offset 24
 4265 0004 00AF     		add	r7, sp, #0
 4266              	.LCFI119:
 4267              		.cfi_def_cfa_register 7
 4268 0006 0346     		mov	r3, r0
 4269 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1024:../LSM9DS1_Driver.c **** 	// Read current value of CTRL_REG1_G:
1025:../LSM9DS1_Driver.c **** 	uint8_t ctrl1RegValue = xgReadByte(CTRL_REG1_G);
 4270              		.loc 1 1025 0
 4271 000a 4FF01000 		mov	r0, #16
 4272 000e FFF7FEFF 		bl	xgReadByte
 4273 0012 0346     		mov	r3, r0
 4274 0014 FB73     		strb	r3, [r7, #15]
1026:../LSM9DS1_Driver.c **** 	// Mask out scale bits (3 & 4):
1027:../LSM9DS1_Driver.c **** 	ctrl1RegValue &= 0xE7;
 4275              		.loc 1 1027 0
 4276 0016 FB7B     		ldrb	r3, [r7, #15]
 4277 0018 23F01803 		bic	r3, r3, #24
 4278 001c FB73     		strb	r3, [r7, #15]
1028:../LSM9DS1_Driver.c **** 	switch (gScl)
 4279              		.loc 1 1028 0
 4280 001e FB88     		ldrh	r3, [r7, #6]
 4281 0020 B3F5FA7F 		cmp	r3, #500
 4282 0024 03D0     		beq	.L181
 4283 0026 B3F5FA6F 		cmp	r3, #2000
 4284 002a 0CD0     		beq	.L182
 4285 002c 17E0     		b	.L184
 4286              	.L181:
1029:../LSM9DS1_Driver.c **** 	{
1030:../LSM9DS1_Driver.c **** 		case 500:
1031:../LSM9DS1_Driver.c **** 			ctrl1RegValue |= (0x1 << 3);
 4287              		.loc 1 1031 0
 4288 002e FB7B     		ldrb	r3, [r7, #15]
 4289 0030 43F00803 		orr	r3, r3, #8
 4290 0034 FB73     		strb	r3, [r7, #15]
1032:../LSM9DS1_Driver.c **** 			settings.gyro.scale = 500;
 4291              		.loc 1 1032 0
 4292 0036 40F20003 		movw	r3, #:lower16:settings
 4293 003a C0F20003 		movt	r3, #:upper16:settings
 4294 003e 4FF4FA72 		mov	r2, #500
 4295 0042 DA80     		strh	r2, [r3, #6]	@ movhi
1033:../LSM9DS1_Driver.c **** 			break;
 4296              		.loc 1 1033 0
 4297 0044 13E0     		b	.L183
 4298              	.L182:
1034:../LSM9DS1_Driver.c **** 		case 2000:
1035:../LSM9DS1_Driver.c **** 			ctrl1RegValue |= (0x3 << 3);
 4299              		.loc 1 1035 0
 4300 0046 FB7B     		ldrb	r3, [r7, #15]
 4301 0048 43F01803 		orr	r3, r3, #24
 4302 004c FB73     		strb	r3, [r7, #15]
1036:../LSM9DS1_Driver.c **** 			settings.gyro.scale = 2000;
 4303              		.loc 1 1036 0
 4304 004e 40F20003 		movw	r3, #:lower16:settings
 4305 0052 C0F20003 		movt	r3, #:upper16:settings
 4306 0056 4FF4FA62 		mov	r2, #2000
 4307 005a DA80     		strh	r2, [r3, #6]	@ movhi
1037:../LSM9DS1_Driver.c **** 			break;
 4308              		.loc 1 1037 0
 4309 005c 07E0     		b	.L183
 4310              	.L184:
1038:../LSM9DS1_Driver.c **** 		default: // Otherwise we'll set it to 245 dps (0x0 << 4)
1039:../LSM9DS1_Driver.c **** 			settings.gyro.scale = 245;
 4311              		.loc 1 1039 0
 4312 005e 40F20003 		movw	r3, #:lower16:settings
 4313 0062 C0F20003 		movt	r3, #:upper16:settings
 4314 0066 4FF0F502 		mov	r2, #245
 4315 006a DA80     		strh	r2, [r3, #6]	@ movhi
1040:../LSM9DS1_Driver.c **** 			break;
 4316              		.loc 1 1040 0
 4317 006c 00BF     		nop
 4318              	.L183:
1041:../LSM9DS1_Driver.c **** 	}
1042:../LSM9DS1_Driver.c **** 	xgWriteByte(CTRL_REG1_G, ctrl1RegValue);
 4319              		.loc 1 1042 0
 4320 006e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4321 0070 4FF01000 		mov	r0, #16
 4322 0074 1946     		mov	r1, r3
 4323 0076 FFF7FEFF 		bl	xgWriteByte
1043:../LSM9DS1_Driver.c **** 
1044:../LSM9DS1_Driver.c **** 	calcgRes();
 4324              		.loc 1 1044 0
 4325 007a FFF7FEFF 		bl	calcgRes
1045:../LSM9DS1_Driver.c **** }
 4326              		.loc 1 1045 0
 4327 007e 07F11007 		add	r7, r7, #16
 4328 0082 BD46     		mov	sp, r7
 4329 0084 80BD     		pop	{r7, pc}
 4330              		.cfi_endproc
 4331              	.LFE158:
 4333 0086 00BF     		.section	.text.setAccelScale,"ax",%progbits
 4334              		.align	2
 4335              		.global	setAccelScale
 4336              		.thumb
 4337              		.thumb_func
 4339              	setAccelScale:
 4340              	.LFB159:
1046:../LSM9DS1_Driver.c **** 
1047:../LSM9DS1_Driver.c **** void setAccelScale(uint8_t aScl)
1048:../LSM9DS1_Driver.c **** {
 4341              		.loc 1 1048 0
 4342              		.cfi_startproc
 4343              		@ args = 0, pretend = 0, frame = 16
 4344              		@ frame_needed = 1, uses_anonymous_args = 0
 4345 0000 80B5     		push	{r7, lr}
 4346              	.LCFI120:
 4347              		.cfi_def_cfa_offset 8
 4348              		.cfi_offset 7, -8
 4349              		.cfi_offset 14, -4
 4350 0002 84B0     		sub	sp, sp, #16
 4351              	.LCFI121:
 4352              		.cfi_def_cfa_offset 24
 4353 0004 00AF     		add	r7, sp, #0
 4354              	.LCFI122:
 4355              		.cfi_def_cfa_register 7
 4356 0006 0346     		mov	r3, r0
 4357 0008 FB71     		strb	r3, [r7, #7]
1049:../LSM9DS1_Driver.c **** 	// We need to preserve the other bytes in CTRL_REG6_XL. So, first read it:
1050:../LSM9DS1_Driver.c **** 	uint8_t tempRegValue = xgReadByte(CTRL_REG6_XL);
 4358              		.loc 1 1050 0
 4359 000a 4FF02000 		mov	r0, #32
 4360 000e FFF7FEFF 		bl	xgReadByte
 4361 0012 0346     		mov	r3, r0
 4362 0014 FB73     		strb	r3, [r7, #15]
1051:../LSM9DS1_Driver.c **** 	// Mask out accel scale bits:
1052:../LSM9DS1_Driver.c **** 	tempRegValue &= 0xE7;
 4363              		.loc 1 1052 0
 4364 0016 FB7B     		ldrb	r3, [r7, #15]
 4365 0018 23F01803 		bic	r3, r3, #24
 4366 001c FB73     		strb	r3, [r7, #15]
1053:../LSM9DS1_Driver.c **** 
1054:../LSM9DS1_Driver.c **** 	switch (aScl)
 4367              		.loc 1 1054 0
 4368 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4369 0020 082B     		cmp	r3, #8
 4370 0022 0FD0     		beq	.L188
 4371 0024 102B     		cmp	r3, #16
 4372 0026 19D0     		beq	.L189
 4373 0028 042B     		cmp	r3, #4
 4374 002a 23D1     		bne	.L191
 4375              	.L187:
1055:../LSM9DS1_Driver.c **** 	{
1056:../LSM9DS1_Driver.c **** 		case 4:
1057:../LSM9DS1_Driver.c **** 			tempRegValue |= (0x2 << 3);
 4376              		.loc 1 1057 0
 4377 002c FB7B     		ldrb	r3, [r7, #15]
 4378 002e 43F01003 		orr	r3, r3, #16
 4379 0032 FB73     		strb	r3, [r7, #15]
1058:../LSM9DS1_Driver.c **** 			settings.accel.scale = 4;
 4380              		.loc 1 1058 0
 4381 0034 40F20003 		movw	r3, #:lower16:settings
 4382 0038 C0F20003 		movt	r3, #:upper16:settings
 4383 003c 4FF00402 		mov	r2, #4
 4384 0040 DA75     		strb	r2, [r3, #23]
1059:../LSM9DS1_Driver.c **** 			break;
 4385              		.loc 1 1059 0
 4386 0042 1FE0     		b	.L190
 4387              	.L188:
1060:../LSM9DS1_Driver.c **** 		case 8:
1061:../LSM9DS1_Driver.c **** 			tempRegValue |= (0x3 << 3);
 4388              		.loc 1 1061 0
 4389 0044 FB7B     		ldrb	r3, [r7, #15]
 4390 0046 43F01803 		orr	r3, r3, #24
 4391 004a FB73     		strb	r3, [r7, #15]
1062:../LSM9DS1_Driver.c **** 			settings.accel.scale = 8;
 4392              		.loc 1 1062 0
 4393 004c 40F20003 		movw	r3, #:lower16:settings
 4394 0050 C0F20003 		movt	r3, #:upper16:settings
 4395 0054 4FF00802 		mov	r2, #8
 4396 0058 DA75     		strb	r2, [r3, #23]
1063:../LSM9DS1_Driver.c **** 			break;
 4397              		.loc 1 1063 0
 4398 005a 13E0     		b	.L190
 4399              	.L189:
1064:../LSM9DS1_Driver.c **** 		case 16:
1065:../LSM9DS1_Driver.c **** 			tempRegValue |= (0x1 << 3);
 4400              		.loc 1 1065 0
 4401 005c FB7B     		ldrb	r3, [r7, #15]
 4402 005e 43F00803 		orr	r3, r3, #8
 4403 0062 FB73     		strb	r3, [r7, #15]
1066:../LSM9DS1_Driver.c **** 			settings.accel.scale = 16;
 4404              		.loc 1 1066 0
 4405 0064 40F20003 		movw	r3, #:lower16:settings
 4406 0068 C0F20003 		movt	r3, #:upper16:settings
 4407 006c 4FF01002 		mov	r2, #16
 4408 0070 DA75     		strb	r2, [r3, #23]
1067:../LSM9DS1_Driver.c **** 			break;
 4409              		.loc 1 1067 0
 4410 0072 07E0     		b	.L190
 4411              	.L191:
1068:../LSM9DS1_Driver.c **** 		default: // Otherwise it'll be set to 2g (0x0 << 3)
1069:../LSM9DS1_Driver.c **** 			settings.accel.scale = 2;
 4412              		.loc 1 1069 0
 4413 0074 40F20003 		movw	r3, #:lower16:settings
 4414 0078 C0F20003 		movt	r3, #:upper16:settings
 4415 007c 4FF00202 		mov	r2, #2
 4416 0080 DA75     		strb	r2, [r3, #23]
1070:../LSM9DS1_Driver.c **** 			break;
 4417              		.loc 1 1070 0
 4418 0082 00BF     		nop
 4419              	.L190:
1071:../LSM9DS1_Driver.c **** 	}
1072:../LSM9DS1_Driver.c **** 	xgWriteByte(CTRL_REG6_XL, tempRegValue);
 4420              		.loc 1 1072 0
 4421 0084 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4422 0086 4FF02000 		mov	r0, #32
 4423 008a 1946     		mov	r1, r3
 4424 008c FFF7FEFF 		bl	xgWriteByte
1073:../LSM9DS1_Driver.c **** 
1074:../LSM9DS1_Driver.c **** 	// Then calculate a new aRes, which relies on aScale being set correctly:
1075:../LSM9DS1_Driver.c **** 	calcaRes();
 4425              		.loc 1 1075 0
 4426 0090 FFF7FEFF 		bl	calcaRes
1076:../LSM9DS1_Driver.c **** }
 4427              		.loc 1 1076 0
 4428 0094 07F11007 		add	r7, r7, #16
 4429 0098 BD46     		mov	sp, r7
 4430 009a 80BD     		pop	{r7, pc}
 4431              		.cfi_endproc
 4432              	.LFE159:
 4434              		.section	.text.setMagScale,"ax",%progbits
 4435              		.align	2
 4436              		.global	setMagScale
 4437              		.thumb
 4438              		.thumb_func
 4440              	setMagScale:
 4441              	.LFB160:
1077:../LSM9DS1_Driver.c **** 
1078:../LSM9DS1_Driver.c **** void setMagScale(uint8_t mScl)
1079:../LSM9DS1_Driver.c **** {
 4442              		.loc 1 1079 0
 4443              		.cfi_startproc
 4444              		@ args = 0, pretend = 0, frame = 16
 4445              		@ frame_needed = 1, uses_anonymous_args = 0
 4446 0000 80B5     		push	{r7, lr}
 4447              	.LCFI123:
 4448              		.cfi_def_cfa_offset 8
 4449              		.cfi_offset 7, -8
 4450              		.cfi_offset 14, -4
 4451 0002 84B0     		sub	sp, sp, #16
 4452              	.LCFI124:
 4453              		.cfi_def_cfa_offset 24
 4454 0004 00AF     		add	r7, sp, #0
 4455              	.LCFI125:
 4456              		.cfi_def_cfa_register 7
 4457 0006 0346     		mov	r3, r0
 4458 0008 FB71     		strb	r3, [r7, #7]
1080:../LSM9DS1_Driver.c **** 	// We need to preserve the other bytes in CTRL_REG6_XM. So, first read it:
1081:../LSM9DS1_Driver.c **** 	uint8_t temp = mReadByte(CTRL_REG2_M);
 4459              		.loc 1 1081 0
 4460 000a 4FF02100 		mov	r0, #33
 4461 000e FFF7FEFF 		bl	mReadByte
 4462 0012 0346     		mov	r3, r0
 4463 0014 FB73     		strb	r3, [r7, #15]
1082:../LSM9DS1_Driver.c **** 	// Then mask out the mag scale bits:
1083:../LSM9DS1_Driver.c **** 	temp &= 0xFF^(0x3 << 5);
 4464              		.loc 1 1083 0
 4465 0016 FB7B     		ldrb	r3, [r7, #15]
 4466 0018 23F06003 		bic	r3, r3, #96
 4467 001c FB73     		strb	r3, [r7, #15]
1084:../LSM9DS1_Driver.c **** 
1085:../LSM9DS1_Driver.c **** 	switch (mScl)
 4468              		.loc 1 1085 0
 4469 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4470 0020 0C2B     		cmp	r3, #12
 4471 0022 10D0     		beq	.L195
 4472 0024 102B     		cmp	r3, #16
 4473 0026 1BD0     		beq	.L196
 4474 0028 082B     		cmp	r3, #8
 4475 002a 26D1     		bne	.L198
 4476              	.L194:
1086:../LSM9DS1_Driver.c **** 	{
1087:../LSM9DS1_Driver.c **** 		case 8:
1088:../LSM9DS1_Driver.c **** 			temp |= (0x1 << 5);
 4477              		.loc 1 1088 0
 4478 002c FB7B     		ldrb	r3, [r7, #15]
 4479 002e 43F02003 		orr	r3, r3, #32
 4480 0032 FB73     		strb	r3, [r7, #15]
1089:../LSM9DS1_Driver.c **** 			settings.mag.scale = 8;
 4481              		.loc 1 1089 0
 4482 0034 40F20003 		movw	r3, #:lower16:settings
 4483 0038 C0F20003 		movt	r3, #:upper16:settings
 4484 003c 4FF00802 		mov	r2, #8
 4485 0040 83F82020 		strb	r2, [r3, #32]
1090:../LSM9DS1_Driver.c **** 			break;
 4486              		.loc 1 1090 0
 4487 0044 22E0     		b	.L197
 4488              	.L195:
1091:../LSM9DS1_Driver.c **** 		case 12:
1092:../LSM9DS1_Driver.c **** 			temp |= (0x2 << 5);
 4489              		.loc 1 1092 0
 4490 0046 FB7B     		ldrb	r3, [r7, #15]
 4491 0048 43F04003 		orr	r3, r3, #64
 4492 004c FB73     		strb	r3, [r7, #15]
1093:../LSM9DS1_Driver.c **** 			settings.mag.scale = 12;
 4493              		.loc 1 1093 0
 4494 004e 40F20003 		movw	r3, #:lower16:settings
 4495 0052 C0F20003 		movt	r3, #:upper16:settings
 4496 0056 4FF00C02 		mov	r2, #12
 4497 005a 83F82020 		strb	r2, [r3, #32]
1094:../LSM9DS1_Driver.c **** 			break;
 4498              		.loc 1 1094 0
 4499 005e 15E0     		b	.L197
 4500              	.L196:
1095:../LSM9DS1_Driver.c **** 		case 16:
1096:../LSM9DS1_Driver.c **** 			temp |= (0x3 << 5);
 4501              		.loc 1 1096 0
 4502 0060 FB7B     		ldrb	r3, [r7, #15]
 4503 0062 43F06003 		orr	r3, r3, #96
 4504 0066 FB73     		strb	r3, [r7, #15]
1097:../LSM9DS1_Driver.c **** 			settings.mag.scale = 16;
 4505              		.loc 1 1097 0
 4506 0068 40F20003 		movw	r3, #:lower16:settings
 4507 006c C0F20003 		movt	r3, #:upper16:settings
 4508 0070 4FF01002 		mov	r2, #16
 4509 0074 83F82020 		strb	r2, [r3, #32]
1098:../LSM9DS1_Driver.c **** 			break;
 4510              		.loc 1 1098 0
 4511 0078 08E0     		b	.L197
 4512              	.L198:
1099:../LSM9DS1_Driver.c **** 		default: // Otherwise we'll default to 4 gauss (00)
1100:../LSM9DS1_Driver.c **** 			settings.mag.scale = 4;
 4513              		.loc 1 1100 0
 4514 007a 40F20003 		movw	r3, #:lower16:settings
 4515 007e C0F20003 		movt	r3, #:upper16:settings
 4516 0082 4FF00402 		mov	r2, #4
 4517 0086 83F82020 		strb	r2, [r3, #32]
1101:../LSM9DS1_Driver.c **** 			break;
 4518              		.loc 1 1101 0
 4519 008a 00BF     		nop
 4520              	.L197:
1102:../LSM9DS1_Driver.c **** 	}
1103:../LSM9DS1_Driver.c **** 
1104:../LSM9DS1_Driver.c **** 	// And write the new register value back into CTRL_REG6_XM:
1105:../LSM9DS1_Driver.c **** 	mWriteByte(CTRL_REG2_M, temp);
 4521              		.loc 1 1105 0
 4522 008c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4523 008e 4FF02100 		mov	r0, #33
 4524 0092 1946     		mov	r1, r3
 4525 0094 FFF7FEFF 		bl	mWriteByte
1106:../LSM9DS1_Driver.c **** 
1107:../LSM9DS1_Driver.c **** 	// We've updated the sensor, but we also need to update our class variables
1108:../LSM9DS1_Driver.c **** 	// First update mScale:
1109:../LSM9DS1_Driver.c **** 	//mScale = mScl;
1110:../LSM9DS1_Driver.c **** 	// Then calculate a new mRes, which relies on mScale being set correctly:
1111:../LSM9DS1_Driver.c **** 	calcmRes();
 4526              		.loc 1 1111 0
 4527 0098 FFF7FEFF 		bl	calcmRes
1112:../LSM9DS1_Driver.c **** }
 4528              		.loc 1 1112 0
 4529 009c 07F11007 		add	r7, r7, #16
 4530 00a0 BD46     		mov	sp, r7
 4531 00a2 80BD     		pop	{r7, pc}
 4532              		.cfi_endproc
 4533              	.LFE160:
 4535              		.section	.text.setGyroODR,"ax",%progbits
 4536              		.align	2
 4537              		.global	setGyroODR
 4538              		.thumb
 4539              		.thumb_func
 4541              	setGyroODR:
 4542              	.LFB161:
1113:../LSM9DS1_Driver.c **** 
1114:../LSM9DS1_Driver.c **** void setGyroODR(uint8_t gRate)
1115:../LSM9DS1_Driver.c **** {
 4543              		.loc 1 1115 0
 4544              		.cfi_startproc
 4545              		@ args = 0, pretend = 0, frame = 16
 4546              		@ frame_needed = 1, uses_anonymous_args = 0
 4547 0000 80B5     		push	{r7, lr}
 4548              	.LCFI126:
 4549              		.cfi_def_cfa_offset 8
 4550              		.cfi_offset 7, -8
 4551              		.cfi_offset 14, -4
 4552 0002 84B0     		sub	sp, sp, #16
 4553              	.LCFI127:
 4554              		.cfi_def_cfa_offset 24
 4555 0004 00AF     		add	r7, sp, #0
 4556              	.LCFI128:
 4557              		.cfi_def_cfa_register 7
 4558 0006 0346     		mov	r3, r0
 4559 0008 FB71     		strb	r3, [r7, #7]
1116:../LSM9DS1_Driver.c **** 	// Only do this if gRate is not 0 (which would disable the gyro)
1117:../LSM9DS1_Driver.c **** 	if ((gRate & 0x07) != 0)
 4560              		.loc 1 1117 0
 4561 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4562 000c 03F00703 		and	r3, r3, #7
 4563 0010 002B     		cmp	r3, #0
 4564 0012 20D0     		beq	.L199
 4565              	.LBB5:
1118:../LSM9DS1_Driver.c **** 	{
1119:../LSM9DS1_Driver.c **** 		// We need to preserve the other bytes in CTRL_REG1_G. So, first read it:
1120:../LSM9DS1_Driver.c **** 		uint8_t temp = xgReadByte(CTRL_REG1_G);
 4566              		.loc 1 1120 0
 4567 0014 4FF01000 		mov	r0, #16
 4568 0018 FFF7FEFF 		bl	xgReadByte
 4569 001c 0346     		mov	r3, r0
 4570 001e FB73     		strb	r3, [r7, #15]
1121:../LSM9DS1_Driver.c **** 		// Then mask out the gyro ODR bits:
1122:../LSM9DS1_Driver.c **** 		temp &= 0xFF^(0x7 << 5);
 4571              		.loc 1 1122 0
 4572 0020 FB7B     		ldrb	r3, [r7, #15]
 4573 0022 03F01F03 		and	r3, r3, #31
 4574 0026 FB73     		strb	r3, [r7, #15]
1123:../LSM9DS1_Driver.c **** 		temp |= (gRate & 0x07) << 5;
 4575              		.loc 1 1123 0
 4576 0028 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4577 002a 4FEA4313 		lsl	r3, r3, #5
 4578 002e DAB2     		uxtb	r2, r3
 4579 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4580 0032 1343     		orrs	r3, r3, r2
 4581 0034 DBB2     		uxtb	r3, r3
 4582 0036 FB73     		strb	r3, [r7, #15]
1124:../LSM9DS1_Driver.c **** 		// Update our settings struct
1125:../LSM9DS1_Driver.c **** 		settings.gyro.sampleRate = gRate & 0x07;
 4583              		.loc 1 1125 0
 4584 0038 FB79     		ldrb	r3, [r7, #7]
 4585 003a 03F00703 		and	r3, r3, #7
 4586 003e DAB2     		uxtb	r2, r3
 4587 0040 40F20003 		movw	r3, #:lower16:settings
 4588 0044 C0F20003 		movt	r3, #:upper16:settings
 4589 0048 1A72     		strb	r2, [r3, #8]
1126:../LSM9DS1_Driver.c **** 		// And write the new register value back into CTRL_REG1_G:
1127:../LSM9DS1_Driver.c **** 		xgWriteByte(CTRL_REG1_G, temp);
 4590              		.loc 1 1127 0
 4591 004a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4592 004c 4FF01000 		mov	r0, #16
 4593 0050 1946     		mov	r1, r3
 4594 0052 FFF7FEFF 		bl	xgWriteByte
 4595              	.L199:
 4596              	.LBE5:
1128:../LSM9DS1_Driver.c **** 	}
1129:../LSM9DS1_Driver.c **** }
 4597              		.loc 1 1129 0
 4598 0056 07F11007 		add	r7, r7, #16
 4599 005a BD46     		mov	sp, r7
 4600 005c 80BD     		pop	{r7, pc}
 4601              		.cfi_endproc
 4602              	.LFE161:
 4604 005e 00BF     		.section	.text.setAccelODR,"ax",%progbits
 4605              		.align	2
 4606              		.global	setAccelODR
 4607              		.thumb
 4608              		.thumb_func
 4610              	setAccelODR:
 4611              	.LFB162:
1130:../LSM9DS1_Driver.c **** 
1131:../LSM9DS1_Driver.c **** void setAccelODR(uint8_t aRate)
1132:../LSM9DS1_Driver.c **** {
 4612              		.loc 1 1132 0
 4613              		.cfi_startproc
 4614              		@ args = 0, pretend = 0, frame = 16
 4615              		@ frame_needed = 1, uses_anonymous_args = 0
 4616 0000 80B5     		push	{r7, lr}
 4617              	.LCFI129:
 4618              		.cfi_def_cfa_offset 8
 4619              		.cfi_offset 7, -8
 4620              		.cfi_offset 14, -4
 4621 0002 84B0     		sub	sp, sp, #16
 4622              	.LCFI130:
 4623              		.cfi_def_cfa_offset 24
 4624 0004 00AF     		add	r7, sp, #0
 4625              	.LCFI131:
 4626              		.cfi_def_cfa_register 7
 4627 0006 0346     		mov	r3, r0
 4628 0008 FB71     		strb	r3, [r7, #7]
1133:../LSM9DS1_Driver.c **** 	// Only do this if aRate is not 0 (which would disable the accel)
1134:../LSM9DS1_Driver.c **** 	if ((aRate & 0x07) != 0)
 4629              		.loc 1 1134 0
 4630 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4631 000c 03F00703 		and	r3, r3, #7
 4632 0010 002B     		cmp	r3, #0
 4633 0012 20D0     		beq	.L201
 4634              	.LBB6:
1135:../LSM9DS1_Driver.c **** 	{
1136:../LSM9DS1_Driver.c **** 		// We need to preserve the other bytes in CTRL_REG1_XM. So, first read it:
1137:../LSM9DS1_Driver.c **** 		uint8_t temp = xgReadByte(CTRL_REG6_XL);
 4635              		.loc 1 1137 0
 4636 0014 4FF02000 		mov	r0, #32
 4637 0018 FFF7FEFF 		bl	xgReadByte
 4638 001c 0346     		mov	r3, r0
 4639 001e FB73     		strb	r3, [r7, #15]
1138:../LSM9DS1_Driver.c **** 		// Then mask out the accel ODR bits:
1139:../LSM9DS1_Driver.c **** 		temp &= 0x1F;
 4640              		.loc 1 1139 0
 4641 0020 FB7B     		ldrb	r3, [r7, #15]
 4642 0022 03F01F03 		and	r3, r3, #31
 4643 0026 FB73     		strb	r3, [r7, #15]
1140:../LSM9DS1_Driver.c **** 		// Then shift in our new ODR bits:
1141:../LSM9DS1_Driver.c **** 		temp |= ((aRate & 0x07) << 5);
 4644              		.loc 1 1141 0
 4645 0028 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4646 002a 4FEA4313 		lsl	r3, r3, #5
 4647 002e DAB2     		uxtb	r2, r3
 4648 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4649 0032 1343     		orrs	r3, r3, r2
 4650 0034 DBB2     		uxtb	r3, r3
 4651 0036 FB73     		strb	r3, [r7, #15]
1142:../LSM9DS1_Driver.c **** 		settings.accel.sampleRate = aRate & 0x07;
 4652              		.loc 1 1142 0
 4653 0038 FB79     		ldrb	r3, [r7, #7]
 4654 003a 03F00703 		and	r3, r3, #7
 4655 003e DAB2     		uxtb	r2, r3
 4656 0040 40F20003 		movw	r3, #:lower16:settings
 4657 0044 C0F20003 		movt	r3, #:upper16:settings
 4658 0048 1A76     		strb	r2, [r3, #24]
1143:../LSM9DS1_Driver.c **** 		// And write the new register value back into CTRL_REG1_XM:
1144:../LSM9DS1_Driver.c **** 		xgWriteByte(CTRL_REG6_XL, temp);
 4659              		.loc 1 1144 0
 4660 004a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4661 004c 4FF02000 		mov	r0, #32
 4662 0050 1946     		mov	r1, r3
 4663 0052 FFF7FEFF 		bl	xgWriteByte
 4664              	.L201:
 4665              	.LBE6:
1145:../LSM9DS1_Driver.c **** 	}
1146:../LSM9DS1_Driver.c **** }
 4666              		.loc 1 1146 0
 4667 0056 07F11007 		add	r7, r7, #16
 4668 005a BD46     		mov	sp, r7
 4669 005c 80BD     		pop	{r7, pc}
 4670              		.cfi_endproc
 4671              	.LFE162:
 4673 005e 00BF     		.section	.text.setMagODR,"ax",%progbits
 4674              		.align	2
 4675              		.global	setMagODR
 4676              		.thumb
 4677              		.thumb_func
 4679              	setMagODR:
 4680              	.LFB163:
1147:../LSM9DS1_Driver.c **** 
1148:../LSM9DS1_Driver.c **** void setMagODR(uint8_t mRate)
1149:../LSM9DS1_Driver.c **** {
 4681              		.loc 1 1149 0
 4682              		.cfi_startproc
 4683              		@ args = 0, pretend = 0, frame = 16
 4684              		@ frame_needed = 1, uses_anonymous_args = 0
 4685 0000 80B5     		push	{r7, lr}
 4686              	.LCFI132:
 4687              		.cfi_def_cfa_offset 8
 4688              		.cfi_offset 7, -8
 4689              		.cfi_offset 14, -4
 4690 0002 84B0     		sub	sp, sp, #16
 4691              	.LCFI133:
 4692              		.cfi_def_cfa_offset 24
 4693 0004 00AF     		add	r7, sp, #0
 4694              	.LCFI134:
 4695              		.cfi_def_cfa_register 7
 4696 0006 0346     		mov	r3, r0
 4697 0008 FB71     		strb	r3, [r7, #7]
1150:../LSM9DS1_Driver.c **** 	// We need to preserve the other bytes in CTRL_REG5_XM. So, first read it:
1151:../LSM9DS1_Driver.c **** 	uint8_t temp = mReadByte(CTRL_REG1_M);
 4698              		.loc 1 1151 0
 4699 000a 4FF02000 		mov	r0, #32
 4700 000e FFF7FEFF 		bl	mReadByte
 4701 0012 0346     		mov	r3, r0
 4702 0014 FB73     		strb	r3, [r7, #15]
1152:../LSM9DS1_Driver.c **** 	// Then mask out the mag ODR bits:
1153:../LSM9DS1_Driver.c **** 	temp &= 0xFF^(0x7 << 2);
 4703              		.loc 1 1153 0
 4704 0016 FB7B     		ldrb	r3, [r7, #15]
 4705 0018 23F01C03 		bic	r3, r3, #28
 4706 001c FB73     		strb	r3, [r7, #15]
1154:../LSM9DS1_Driver.c **** 	// Then shift in our new ODR bits:
1155:../LSM9DS1_Driver.c **** 	temp |= ((mRate & 0x07) << 2);
 4707              		.loc 1 1155 0
 4708 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4709 0020 03F00703 		and	r3, r3, #7
 4710 0024 4FEA8303 		lsl	r3, r3, #2
 4711 0028 DAB2     		uxtb	r2, r3
 4712 002a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4713 002c 1343     		orrs	r3, r3, r2
 4714 002e DBB2     		uxtb	r3, r3
 4715 0030 FB73     		strb	r3, [r7, #15]
1156:../LSM9DS1_Driver.c **** 	settings.mag.sampleRate = mRate & 0x07;
 4716              		.loc 1 1156 0
 4717 0032 FB79     		ldrb	r3, [r7, #7]
 4718 0034 03F00703 		and	r3, r3, #7
 4719 0038 DAB2     		uxtb	r2, r3
 4720 003a 40F20003 		movw	r3, #:lower16:settings
 4721 003e C0F20003 		movt	r3, #:upper16:settings
 4722 0042 83F82120 		strb	r2, [r3, #33]
1157:../LSM9DS1_Driver.c **** 	// And write the new register value back into CTRL_REG5_XM:
1158:../LSM9DS1_Driver.c **** 	mWriteByte(CTRL_REG1_M, temp);
 4723              		.loc 1 1158 0
 4724 0046 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4725 0048 4FF02000 		mov	r0, #32
 4726 004c 1946     		mov	r1, r3
 4727 004e FFF7FEFF 		bl	mWriteByte
1159:../LSM9DS1_Driver.c **** }
 4728              		.loc 1 1159 0
 4729 0052 07F11007 		add	r7, r7, #16
 4730 0056 BD46     		mov	sp, r7
 4731 0058 80BD     		pop	{r7, pc}
 4732              		.cfi_endproc
 4733              	.LFE163:
 4735 005a 00BF     		.section	.text.configInt,"ax",%progbits
 4736              		.align	2
 4737              		.global	configInt
 4738              		.thumb
 4739              		.thumb_func
 4741              	configInt:
 4742              	.LFB164:
1160:../LSM9DS1_Driver.c **** 
1161:../LSM9DS1_Driver.c **** void configInt(interrupt_select interupt, uint8_t generator, h_lactive activeLow, pp_od pushPull)
1162:../LSM9DS1_Driver.c **** {
 4743              		.loc 1 1162 0
 4744              		.cfi_startproc
 4745              		@ args = 0, pretend = 0, frame = 16
 4746              		@ frame_needed = 1, uses_anonymous_args = 0
 4747 0000 80B5     		push	{r7, lr}
 4748              	.LCFI135:
 4749              		.cfi_def_cfa_offset 8
 4750              		.cfi_offset 7, -8
 4751              		.cfi_offset 14, -4
 4752 0002 84B0     		sub	sp, sp, #16
 4753              	.LCFI136:
 4754              		.cfi_def_cfa_offset 24
 4755 0004 00AF     		add	r7, sp, #0
 4756              	.LCFI137:
 4757              		.cfi_def_cfa_register 7
 4758 0006 F871     		strb	r0, [r7, #7]
 4759 0008 B971     		strb	r1, [r7, #6]
 4760 000a 7A71     		strb	r2, [r7, #5]
 4761 000c 3B71     		strb	r3, [r7, #4]
1163:../LSM9DS1_Driver.c **** 	// Write to INT1_CTRL or INT2_CTRL. [interupt] should already be one of
1164:../LSM9DS1_Driver.c **** 	// those two values.
1165:../LSM9DS1_Driver.c **** 	// [generator] should be an OR'd list of values from the interrupt_generators enum
1166:../LSM9DS1_Driver.c **** 	xgWriteByte(interupt, generator);
 4762              		.loc 1 1166 0
 4763 000e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4764 0010 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4765 0012 1046     		mov	r0, r2
 4766 0014 1946     		mov	r1, r3
 4767 0016 FFF7FEFF 		bl	xgWriteByte
1167:../LSM9DS1_Driver.c **** 
1168:../LSM9DS1_Driver.c **** 	// Configure CTRL_REG8
1169:../LSM9DS1_Driver.c **** 	uint8_t temp;
1170:../LSM9DS1_Driver.c **** 	temp = xgReadByte(CTRL_REG8);
 4768              		.loc 1 1170 0
 4769 001a 4FF02200 		mov	r0, #34
 4770 001e FFF7FEFF 		bl	xgReadByte
 4771 0022 0346     		mov	r3, r0
 4772 0024 FB73     		strb	r3, [r7, #15]
1171:../LSM9DS1_Driver.c **** 
1172:../LSM9DS1_Driver.c **** 	if (activeLow) temp |= (1<<5);
 4773              		.loc 1 1172 0
 4774 0026 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4775 0028 002B     		cmp	r3, #0
 4776 002a 04D0     		beq	.L205
 4777              		.loc 1 1172 0 is_stmt 0 discriminator 1
 4778 002c FB7B     		ldrb	r3, [r7, #15]
 4779 002e 43F02003 		orr	r3, r3, #32
 4780 0032 FB73     		strb	r3, [r7, #15]
 4781 0034 03E0     		b	.L206
 4782              	.L205:
1173:../LSM9DS1_Driver.c **** 	else temp &= ~(1<<5);
 4783              		.loc 1 1173 0 is_stmt 1
 4784 0036 FB7B     		ldrb	r3, [r7, #15]
 4785 0038 23F02003 		bic	r3, r3, #32
 4786 003c FB73     		strb	r3, [r7, #15]
 4787              	.L206:
1174:../LSM9DS1_Driver.c **** 
1175:../LSM9DS1_Driver.c **** 	if (pushPull) temp &= ~(1<<4);
 4788              		.loc 1 1175 0
 4789 003e 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 4790 0040 002B     		cmp	r3, #0
 4791 0042 04D0     		beq	.L207
 4792              		.loc 1 1175 0 is_stmt 0 discriminator 1
 4793 0044 FB7B     		ldrb	r3, [r7, #15]
 4794 0046 23F01003 		bic	r3, r3, #16
 4795 004a FB73     		strb	r3, [r7, #15]
 4796 004c 03E0     		b	.L208
 4797              	.L207:
1176:../LSM9DS1_Driver.c **** 	else temp |= (1<<4);
 4798              		.loc 1 1176 0 is_stmt 1
 4799 004e FB7B     		ldrb	r3, [r7, #15]
 4800 0050 43F01003 		orr	r3, r3, #16
 4801 0054 FB73     		strb	r3, [r7, #15]
 4802              	.L208:
1177:../LSM9DS1_Driver.c **** 
1178:../LSM9DS1_Driver.c **** 	xgWriteByte(CTRL_REG8, temp);
 4803              		.loc 1 1178 0
 4804 0056 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4805 0058 4FF02200 		mov	r0, #34
 4806 005c 1946     		mov	r1, r3
 4807 005e FFF7FEFF 		bl	xgWriteByte
1179:../LSM9DS1_Driver.c **** }
 4808              		.loc 1 1179 0
 4809 0062 07F11007 		add	r7, r7, #16
 4810 0066 BD46     		mov	sp, r7
 4811 0068 80BD     		pop	{r7, pc}
 4812              		.cfi_endproc
 4813              	.LFE164:
 4815 006a 00BF     		.section	.text.configInactivity,"ax",%progbits
 4816              		.align	2
 4817              		.global	configInactivity
 4818              		.thumb
 4819              		.thumb_func
 4821              	configInactivity:
 4822              	.LFB165:
1180:../LSM9DS1_Driver.c **** 
1181:../LSM9DS1_Driver.c **** 
1182:../LSM9DS1_Driver.c **** void configInactivity(uint8_t duration, uint8_t threshold, bool sleepOn)
1183:../LSM9DS1_Driver.c **** {
 4823              		.loc 1 1183 0
 4824              		.cfi_startproc
 4825              		@ args = 0, pretend = 0, frame = 16
 4826              		@ frame_needed = 1, uses_anonymous_args = 0
 4827 0000 80B5     		push	{r7, lr}
 4828              	.LCFI138:
 4829              		.cfi_def_cfa_offset 8
 4830              		.cfi_offset 7, -8
 4831              		.cfi_offset 14, -4
 4832 0002 84B0     		sub	sp, sp, #16
 4833              	.LCFI139:
 4834              		.cfi_def_cfa_offset 24
 4835 0004 00AF     		add	r7, sp, #0
 4836              	.LCFI140:
 4837              		.cfi_def_cfa_register 7
 4838 0006 1346     		mov	r3, r2
 4839 0008 0246     		mov	r2, r0
 4840 000a FA71     		strb	r2, [r7, #7]
 4841 000c 0A46     		mov	r2, r1
 4842 000e BA71     		strb	r2, [r7, #6]
 4843 0010 7B71     		strb	r3, [r7, #5]
1184:../LSM9DS1_Driver.c **** 	uint8_t temp = 0;
 4844              		.loc 1 1184 0
 4845 0012 4FF00003 		mov	r3, #0
 4846 0016 FB73     		strb	r3, [r7, #15]
1185:../LSM9DS1_Driver.c **** 
1186:../LSM9DS1_Driver.c **** 	temp = threshold & 0x7F;
 4847              		.loc 1 1186 0
 4848 0018 BB79     		ldrb	r3, [r7, #6]
 4849 001a 03F07F03 		and	r3, r3, #127
 4850 001e FB73     		strb	r3, [r7, #15]
1187:../LSM9DS1_Driver.c **** 	if (sleepOn) temp |= (1<<7);
 4851              		.loc 1 1187 0
 4852 0020 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4853 0022 002B     		cmp	r3, #0
 4854 0024 03D0     		beq	.L210
 4855              		.loc 1 1187 0 is_stmt 0 discriminator 1
 4856 0026 FB7B     		ldrb	r3, [r7, #15]
 4857 0028 63F07F03 		orn	r3, r3, #127
 4858 002c FB73     		strb	r3, [r7, #15]
 4859              	.L210:
1188:../LSM9DS1_Driver.c **** 	xgWriteByte(ACT_THS, temp);
 4860              		.loc 1 1188 0 is_stmt 1
 4861 002e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4862 0030 4FF00400 		mov	r0, #4
 4863 0034 1946     		mov	r1, r3
 4864 0036 FFF7FEFF 		bl	xgWriteByte
1189:../LSM9DS1_Driver.c **** 
1190:../LSM9DS1_Driver.c **** 	xgWriteByte(ACT_DUR, duration);
 4865              		.loc 1 1190 0
 4866 003a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4867 003c 4FF00500 		mov	r0, #5
 4868 0040 1946     		mov	r1, r3
 4869 0042 FFF7FEFF 		bl	xgWriteByte
1191:../LSM9DS1_Driver.c **** }
 4870              		.loc 1 1191 0
 4871 0046 07F11007 		add	r7, r7, #16
 4872 004a BD46     		mov	sp, r7
 4873 004c 80BD     		pop	{r7, pc}
 4874              		.cfi_endproc
 4875              	.LFE165:
 4877 004e 00BF     		.section	.text.getInactivity,"ax",%progbits
 4878              		.align	2
 4879              		.global	getInactivity
 4880              		.thumb
 4881              		.thumb_func
 4883              	getInactivity:
 4884              	.LFB166:
1192:../LSM9DS1_Driver.c **** 
1193:../LSM9DS1_Driver.c **** 
1194:../LSM9DS1_Driver.c **** uint8_t getInactivity(void)
1195:../LSM9DS1_Driver.c **** {
 4885              		.loc 1 1195 0
 4886              		.cfi_startproc
 4887              		@ args = 0, pretend = 0, frame = 8
 4888              		@ frame_needed = 1, uses_anonymous_args = 0
 4889 0000 80B5     		push	{r7, lr}
 4890              	.LCFI141:
 4891              		.cfi_def_cfa_offset 8
 4892              		.cfi_offset 7, -8
 4893              		.cfi_offset 14, -4
 4894 0002 82B0     		sub	sp, sp, #8
 4895              	.LCFI142:
 4896              		.cfi_def_cfa_offset 16
 4897 0004 00AF     		add	r7, sp, #0
 4898              	.LCFI143:
 4899              		.cfi_def_cfa_register 7
1196:../LSM9DS1_Driver.c **** 	uint8_t temp = xgReadByte(STATUS_REG_0);
 4900              		.loc 1 1196 0
 4901 0006 4FF01700 		mov	r0, #23
 4902 000a FFF7FEFF 		bl	xgReadByte
 4903 000e 0346     		mov	r3, r0
 4904 0010 FB71     		strb	r3, [r7, #7]
1197:../LSM9DS1_Driver.c **** 	temp &= (0x10);
 4905              		.loc 1 1197 0
 4906 0012 FB79     		ldrb	r3, [r7, #7]
 4907 0014 03F01003 		and	r3, r3, #16
 4908 0018 FB71     		strb	r3, [r7, #7]
1198:../LSM9DS1_Driver.c **** 	return temp;
 4909              		.loc 1 1198 0
 4910 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1199:../LSM9DS1_Driver.c **** }
 4911              		.loc 1 1199 0
 4912 001c 1846     		mov	r0, r3
 4913 001e 07F10807 		add	r7, r7, #8
 4914 0022 BD46     		mov	sp, r7
 4915 0024 80BD     		pop	{r7, pc}
 4916              		.cfi_endproc
 4917              	.LFE166:
 4919 0026 00BF     		.section	.text.configAccelInt,"ax",%progbits
 4920              		.align	2
 4921              		.global	configAccelInt
 4922              		.thumb
 4923              		.thumb_func
 4925              	configAccelInt:
 4926              	.LFB167:
1200:../LSM9DS1_Driver.c **** 
1201:../LSM9DS1_Driver.c **** void configAccelInt(uint8_t generator, bool andInterrupts)
1202:../LSM9DS1_Driver.c **** {
 4927              		.loc 1 1202 0
 4928              		.cfi_startproc
 4929              		@ args = 0, pretend = 0, frame = 16
 4930              		@ frame_needed = 1, uses_anonymous_args = 0
 4931 0000 80B5     		push	{r7, lr}
 4932              	.LCFI144:
 4933              		.cfi_def_cfa_offset 8
 4934              		.cfi_offset 7, -8
 4935              		.cfi_offset 14, -4
 4936 0002 84B0     		sub	sp, sp, #16
 4937              	.LCFI145:
 4938              		.cfi_def_cfa_offset 24
 4939 0004 00AF     		add	r7, sp, #0
 4940              	.LCFI146:
 4941              		.cfi_def_cfa_register 7
 4942 0006 0246     		mov	r2, r0
 4943 0008 0B46     		mov	r3, r1
 4944 000a FA71     		strb	r2, [r7, #7]
 4945 000c BB71     		strb	r3, [r7, #6]
1203:../LSM9DS1_Driver.c **** 	// Use variables from accel_interrupt_generator, OR'd together to create
1204:../LSM9DS1_Driver.c **** 	// the [generator]value.
1205:../LSM9DS1_Driver.c **** 	uint8_t temp = generator;
 4946              		.loc 1 1205 0
 4947 000e FB79     		ldrb	r3, [r7, #7]
 4948 0010 FB73     		strb	r3, [r7, #15]
1206:../LSM9DS1_Driver.c **** 	if (andInterrupts) temp |= 0x80;
 4949              		.loc 1 1206 0
 4950 0012 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4951 0014 002B     		cmp	r3, #0
 4952 0016 03D0     		beq	.L214
 4953              		.loc 1 1206 0 is_stmt 0 discriminator 1
 4954 0018 FB7B     		ldrb	r3, [r7, #15]
 4955 001a 63F07F03 		orn	r3, r3, #127
 4956 001e FB73     		strb	r3, [r7, #15]
 4957              	.L214:
1207:../LSM9DS1_Driver.c **** 	xgWriteByte(INT_GEN_CFG_XL, temp);
 4958              		.loc 1 1207 0 is_stmt 1
 4959 0020 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4960 0022 4FF00600 		mov	r0, #6
 4961 0026 1946     		mov	r1, r3
 4962 0028 FFF7FEFF 		bl	xgWriteByte
1208:../LSM9DS1_Driver.c **** }
 4963              		.loc 1 1208 0
 4964 002c 07F11007 		add	r7, r7, #16
 4965 0030 BD46     		mov	sp, r7
 4966 0032 80BD     		pop	{r7, pc}
 4967              		.cfi_endproc
 4968              	.LFE167:
 4970              		.section	.text.configAccelThs,"ax",%progbits
 4971              		.align	2
 4972              		.global	configAccelThs
 4973              		.thumb
 4974              		.thumb_func
 4976              	configAccelThs:
 4977              	.LFB168:
1209:../LSM9DS1_Driver.c **** 
1210:../LSM9DS1_Driver.c **** void configAccelThs(uint8_t threshold, lsm9ds1_axis axis, uint8_t duration, bool wait)
1211:../LSM9DS1_Driver.c **** {
 4978              		.loc 1 1211 0
 4979              		.cfi_startproc
 4980              		@ args = 0, pretend = 0, frame = 16
 4981              		@ frame_needed = 1, uses_anonymous_args = 0
 4982 0000 80B5     		push	{r7, lr}
 4983              	.LCFI147:
 4984              		.cfi_def_cfa_offset 8
 4985              		.cfi_offset 7, -8
 4986              		.cfi_offset 14, -4
 4987 0002 84B0     		sub	sp, sp, #16
 4988              	.LCFI148:
 4989              		.cfi_def_cfa_offset 24
 4990 0004 00AF     		add	r7, sp, #0
 4991              	.LCFI149:
 4992              		.cfi_def_cfa_register 7
 4993 0006 F871     		strb	r0, [r7, #7]
 4994 0008 B971     		strb	r1, [r7, #6]
 4995 000a 7A71     		strb	r2, [r7, #5]
 4996 000c 3B71     		strb	r3, [r7, #4]
1212:../LSM9DS1_Driver.c **** 	// Write threshold value to INT_GEN_THS_?_XL.
1213:../LSM9DS1_Driver.c **** 	// axis will be 0, 1, or 2 (x, y, z respectively)
1214:../LSM9DS1_Driver.c **** 	xgWriteByte(INT_GEN_THS_X_XL + axis, threshold);
 4997              		.loc 1 1214 0
 4998 000e BB79     		ldrb	r3, [r7, #6]
 4999 0010 03F10703 		add	r3, r3, #7
 5000 0014 DAB2     		uxtb	r2, r3
 5001 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5002 0018 1046     		mov	r0, r2
 5003 001a 1946     		mov	r1, r3
 5004 001c FFF7FEFF 		bl	xgWriteByte
1215:../LSM9DS1_Driver.c **** 
1216:../LSM9DS1_Driver.c **** 	// Write duration and wait to INT_GEN_DUR_XL
1217:../LSM9DS1_Driver.c **** 	uint8_t temp;
1218:../LSM9DS1_Driver.c **** 	temp = (duration & 0x7F);
 5005              		.loc 1 1218 0
 5006 0020 7B79     		ldrb	r3, [r7, #5]
 5007 0022 03F07F03 		and	r3, r3, #127
 5008 0026 FB73     		strb	r3, [r7, #15]
1219:../LSM9DS1_Driver.c **** 	if (wait) temp |= 0x80;
 5009              		.loc 1 1219 0
 5010 0028 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 5011 002a 002B     		cmp	r3, #0
 5012 002c 03D0     		beq	.L216
 5013              		.loc 1 1219 0 is_stmt 0 discriminator 1
 5014 002e FB7B     		ldrb	r3, [r7, #15]
 5015 0030 63F07F03 		orn	r3, r3, #127
 5016 0034 FB73     		strb	r3, [r7, #15]
 5017              	.L216:
1220:../LSM9DS1_Driver.c **** 	xgWriteByte(INT_GEN_DUR_XL, temp);
 5018              		.loc 1 1220 0 is_stmt 1
 5019 0036 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5020 0038 4FF00A00 		mov	r0, #10
 5021 003c 1946     		mov	r1, r3
 5022 003e FFF7FEFF 		bl	xgWriteByte
1221:../LSM9DS1_Driver.c **** }
 5023              		.loc 1 1221 0
 5024 0042 07F11007 		add	r7, r7, #16
 5025 0046 BD46     		mov	sp, r7
 5026 0048 80BD     		pop	{r7, pc}
 5027              		.cfi_endproc
 5028              	.LFE168:
 5030 004a 00BF     		.section	.text.getAccelIntSrc,"ax",%progbits
 5031              		.align	2
 5032              		.global	getAccelIntSrc
 5033              		.thumb
 5034              		.thumb_func
 5036              	getAccelIntSrc:
 5037              	.LFB169:
1222:../LSM9DS1_Driver.c **** 
1223:../LSM9DS1_Driver.c **** uint8_t getAccelIntSrc(void)
1224:../LSM9DS1_Driver.c **** {
 5038              		.loc 1 1224 0
 5039              		.cfi_startproc
 5040              		@ args = 0, pretend = 0, frame = 8
 5041              		@ frame_needed = 1, uses_anonymous_args = 0
 5042 0000 80B5     		push	{r7, lr}
 5043              	.LCFI150:
 5044              		.cfi_def_cfa_offset 8
 5045              		.cfi_offset 7, -8
 5046              		.cfi_offset 14, -4
 5047 0002 82B0     		sub	sp, sp, #8
 5048              	.LCFI151:
 5049              		.cfi_def_cfa_offset 16
 5050 0004 00AF     		add	r7, sp, #0
 5051              	.LCFI152:
 5052              		.cfi_def_cfa_register 7
1225:../LSM9DS1_Driver.c **** 	uint8_t intSrc = xgReadByte(INT_GEN_SRC_XL);
 5053              		.loc 1 1225 0
 5054 0006 4FF02600 		mov	r0, #38
 5055 000a FFF7FEFF 		bl	xgReadByte
 5056 000e 0346     		mov	r3, r0
 5057 0010 FB71     		strb	r3, [r7, #7]
1226:../LSM9DS1_Driver.c **** 
1227:../LSM9DS1_Driver.c **** 	// Check if the IA_XL (interrupt active) bit is set
1228:../LSM9DS1_Driver.c **** 	if (intSrc & (1<<6))
 5058              		.loc 1 1228 0
 5059 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5060 0014 03F04003 		and	r3, r3, #64
 5061 0018 002B     		cmp	r3, #0
 5062 001a 04D0     		beq	.L218
1229:../LSM9DS1_Driver.c **** 	{
1230:../LSM9DS1_Driver.c **** 		return (intSrc & 0x3F);
 5063              		.loc 1 1230 0
 5064 001c FB79     		ldrb	r3, [r7, #7]
 5065 001e 03F03F03 		and	r3, r3, #63
 5066 0022 DBB2     		uxtb	r3, r3
 5067 0024 01E0     		b	.L219
 5068              	.L218:
1231:../LSM9DS1_Driver.c **** 	}
1232:../LSM9DS1_Driver.c **** 
1233:../LSM9DS1_Driver.c **** 	return 0;
 5069              		.loc 1 1233 0
 5070 0026 4FF00003 		mov	r3, #0
 5071              	.L219:
1234:../LSM9DS1_Driver.c **** }
 5072              		.loc 1 1234 0
 5073 002a 1846     		mov	r0, r3
 5074 002c 07F10807 		add	r7, r7, #8
 5075 0030 BD46     		mov	sp, r7
 5076 0032 80BD     		pop	{r7, pc}
 5077              		.cfi_endproc
 5078              	.LFE169:
 5080              		.section	.text.configGyroInt,"ax",%progbits
 5081              		.align	2
 5082              		.global	configGyroInt
 5083              		.thumb
 5084              		.thumb_func
 5086              	configGyroInt:
 5087              	.LFB170:
1235:../LSM9DS1_Driver.c **** 
1236:../LSM9DS1_Driver.c **** void configGyroInt(uint8_t generator, bool aoi, bool latch)
1237:../LSM9DS1_Driver.c **** {
 5088              		.loc 1 1237 0
 5089              		.cfi_startproc
 5090              		@ args = 0, pretend = 0, frame = 16
 5091              		@ frame_needed = 1, uses_anonymous_args = 0
 5092 0000 80B5     		push	{r7, lr}
 5093              	.LCFI153:
 5094              		.cfi_def_cfa_offset 8
 5095              		.cfi_offset 7, -8
 5096              		.cfi_offset 14, -4
 5097 0002 84B0     		sub	sp, sp, #16
 5098              	.LCFI154:
 5099              		.cfi_def_cfa_offset 24
 5100 0004 00AF     		add	r7, sp, #0
 5101              	.LCFI155:
 5102              		.cfi_def_cfa_register 7
 5103 0006 1346     		mov	r3, r2
 5104 0008 0246     		mov	r2, r0
 5105 000a FA71     		strb	r2, [r7, #7]
 5106 000c 0A46     		mov	r2, r1
 5107 000e BA71     		strb	r2, [r7, #6]
 5108 0010 7B71     		strb	r3, [r7, #5]
1238:../LSM9DS1_Driver.c **** 	// Use variables from accel_interrupt_generator, OR'd together to create
1239:../LSM9DS1_Driver.c **** 	// the [generator]value.
1240:../LSM9DS1_Driver.c **** 	uint8_t temp = generator;
 5109              		.loc 1 1240 0
 5110 0012 FB79     		ldrb	r3, [r7, #7]
 5111 0014 FB73     		strb	r3, [r7, #15]
1241:../LSM9DS1_Driver.c **** 	if (aoi) temp |= 0x80;
 5112              		.loc 1 1241 0
 5113 0016 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 5114 0018 002B     		cmp	r3, #0
 5115 001a 03D0     		beq	.L221
 5116              		.loc 1 1241 0 is_stmt 0 discriminator 1
 5117 001c FB7B     		ldrb	r3, [r7, #15]
 5118 001e 63F07F03 		orn	r3, r3, #127
 5119 0022 FB73     		strb	r3, [r7, #15]
 5120              	.L221:
1242:../LSM9DS1_Driver.c **** 	if (latch) temp |= 0x40;
 5121              		.loc 1 1242 0 is_stmt 1
 5122 0024 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 5123 0026 002B     		cmp	r3, #0
 5124 0028 03D0     		beq	.L222
 5125              		.loc 1 1242 0 is_stmt 0 discriminator 1
 5126 002a FB7B     		ldrb	r3, [r7, #15]
 5127 002c 43F04003 		orr	r3, r3, #64
 5128 0030 FB73     		strb	r3, [r7, #15]
 5129              	.L222:
1243:../LSM9DS1_Driver.c **** 	xgWriteByte(INT_GEN_CFG_G, temp);
 5130              		.loc 1 1243 0 is_stmt 1
 5131 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5132 0034 4FF03000 		mov	r0, #48
 5133 0038 1946     		mov	r1, r3
 5134 003a FFF7FEFF 		bl	xgWriteByte
1244:../LSM9DS1_Driver.c **** }
 5135              		.loc 1 1244 0
 5136 003e 07F11007 		add	r7, r7, #16
 5137 0042 BD46     		mov	sp, r7
 5138 0044 80BD     		pop	{r7, pc}
 5139              		.cfi_endproc
 5140              	.LFE170:
 5142 0046 00BF     		.section	.text.configGyroThs,"ax",%progbits
 5143              		.align	2
 5144              		.global	configGyroThs
 5145              		.thumb
 5146              		.thumb_func
 5148              	configGyroThs:
 5149              	.LFB171:
1245:../LSM9DS1_Driver.c **** 
1246:../LSM9DS1_Driver.c **** 
1247:../LSM9DS1_Driver.c **** void configGyroThs(int16_t threshold, lsm9ds1_axis axis, uint8_t duration, bool wait)
1248:../LSM9DS1_Driver.c **** {
 5150              		.loc 1 1248 0
 5151              		.cfi_startproc
 5152              		@ args = 0, pretend = 0, frame = 16
 5153              		@ frame_needed = 1, uses_anonymous_args = 0
 5154 0000 80B5     		push	{r7, lr}
 5155              	.LCFI156:
 5156              		.cfi_def_cfa_offset 8
 5157              		.cfi_offset 7, -8
 5158              		.cfi_offset 14, -4
 5159 0002 84B0     		sub	sp, sp, #16
 5160              	.LCFI157:
 5161              		.cfi_def_cfa_offset 24
 5162 0004 00AF     		add	r7, sp, #0
 5163              	.LCFI158:
 5164              		.cfi_def_cfa_register 7
 5165 0006 F880     		strh	r0, [r7, #6]	@ movhi
 5166 0008 7971     		strb	r1, [r7, #5]
 5167 000a 3A71     		strb	r2, [r7, #4]
 5168 000c FB70     		strb	r3, [r7, #3]
1249:../LSM9DS1_Driver.c **** 	uint8_t buffer[2];
1250:../LSM9DS1_Driver.c **** 	buffer[0] = (threshold & 0x7F00) >> 8;
 5169              		.loc 1 1250 0
 5170 000e FB88     		ldrh	r3, [r7, #6]
 5171 0010 03F4FE43 		and	r3, r3, #32512
 5172 0014 4FEA2323 		asr	r3, r3, #8
 5173 0018 DBB2     		uxtb	r3, r3
 5174 001a 3B73     		strb	r3, [r7, #12]
1251:../LSM9DS1_Driver.c **** 	buffer[1] = (threshold & 0x00FF);
 5175              		.loc 1 1251 0
 5176 001c FB88     		ldrh	r3, [r7, #6]	@ movhi
 5177 001e DBB2     		uxtb	r3, r3
 5178 0020 7B73     		strb	r3, [r7, #13]
1252:../LSM9DS1_Driver.c **** 	// Write threshold value to INT_GEN_THS_?H_G and  INT_GEN_THS_?L_G.
1253:../LSM9DS1_Driver.c **** 	// axis will be 0, 1, or 2 (x, y, z respectively)
1254:../LSM9DS1_Driver.c **** 	xgWriteByte(INT_GEN_THS_XH_G + (axis * 2), buffer[0]);
 5179              		.loc 1 1254 0
 5180 0022 7B79     		ldrb	r3, [r7, #5]
 5181 0024 4FEA4303 		lsl	r3, r3, #1
 5182 0028 DBB2     		uxtb	r3, r3
 5183 002a 03F13103 		add	r3, r3, #49
 5184 002e DAB2     		uxtb	r2, r3
 5185 0030 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 5186 0032 1046     		mov	r0, r2
 5187 0034 1946     		mov	r1, r3
 5188 0036 FFF7FEFF 		bl	xgWriteByte
1255:../LSM9DS1_Driver.c **** 	xgWriteByte(INT_GEN_THS_XH_G + 1 + (axis * 2), buffer[1]);
 5189              		.loc 1 1255 0
 5190 003a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 5191 003c 03F11903 		add	r3, r3, #25
 5192 0040 DBB2     		uxtb	r3, r3
 5193 0042 4FEA4303 		lsl	r3, r3, #1
 5194 0046 DAB2     		uxtb	r2, r3
 5195 0048 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 5196 004a 1046     		mov	r0, r2
 5197 004c 1946     		mov	r1, r3
 5198 004e FFF7FEFF 		bl	xgWriteByte
1256:../LSM9DS1_Driver.c **** 
1257:../LSM9DS1_Driver.c **** 	// Write duration and wait to INT_GEN_DUR_XL
1258:../LSM9DS1_Driver.c **** 	uint8_t temp;
1259:../LSM9DS1_Driver.c **** 	temp = (duration & 0x7F);
 5199              		.loc 1 1259 0
 5200 0052 3B79     		ldrb	r3, [r7, #4]
 5201 0054 03F07F03 		and	r3, r3, #127
 5202 0058 FB73     		strb	r3, [r7, #15]
1260:../LSM9DS1_Driver.c **** 	if (wait) temp |= 0x80;
 5203              		.loc 1 1260 0
 5204 005a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 5205 005c 002B     		cmp	r3, #0
 5206 005e 03D0     		beq	.L224
 5207              		.loc 1 1260 0 is_stmt 0 discriminator 1
 5208 0060 FB7B     		ldrb	r3, [r7, #15]
 5209 0062 63F07F03 		orn	r3, r3, #127
 5210 0066 FB73     		strb	r3, [r7, #15]
 5211              	.L224:
1261:../LSM9DS1_Driver.c **** 	xgWriteByte(INT_GEN_DUR_G, temp);
 5212              		.loc 1 1261 0 is_stmt 1
 5213 0068 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5214 006a 4FF03700 		mov	r0, #55
 5215 006e 1946     		mov	r1, r3
 5216 0070 FFF7FEFF 		bl	xgWriteByte
1262:../LSM9DS1_Driver.c **** }
 5217              		.loc 1 1262 0
 5218 0074 07F11007 		add	r7, r7, #16
 5219 0078 BD46     		mov	sp, r7
 5220 007a 80BD     		pop	{r7, pc}
 5221              		.cfi_endproc
 5222              	.LFE171:
 5224              		.section	.text.getGyroIntSrc,"ax",%progbits
 5225              		.align	2
 5226              		.global	getGyroIntSrc
 5227              		.thumb
 5228              		.thumb_func
 5230              	getGyroIntSrc:
 5231              	.LFB172:
1263:../LSM9DS1_Driver.c **** 
1264:../LSM9DS1_Driver.c **** 
1265:../LSM9DS1_Driver.c **** uint8_t getGyroIntSrc()
1266:../LSM9DS1_Driver.c **** {
 5232              		.loc 1 1266 0
 5233              		.cfi_startproc
 5234              		@ args = 0, pretend = 0, frame = 8
 5235              		@ frame_needed = 1, uses_anonymous_args = 0
 5236 0000 80B5     		push	{r7, lr}
 5237              	.LCFI159:
 5238              		.cfi_def_cfa_offset 8
 5239              		.cfi_offset 7, -8
 5240              		.cfi_offset 14, -4
 5241 0002 82B0     		sub	sp, sp, #8
 5242              	.LCFI160:
 5243              		.cfi_def_cfa_offset 16
 5244 0004 00AF     		add	r7, sp, #0
 5245              	.LCFI161:
 5246              		.cfi_def_cfa_register 7
1267:../LSM9DS1_Driver.c **** 	uint8_t intSrc = xgReadByte(INT_GEN_SRC_G);
 5247              		.loc 1 1267 0
 5248 0006 4FF01400 		mov	r0, #20
 5249 000a FFF7FEFF 		bl	xgReadByte
 5250 000e 0346     		mov	r3, r0
 5251 0010 FB71     		strb	r3, [r7, #7]
1268:../LSM9DS1_Driver.c **** 
1269:../LSM9DS1_Driver.c **** 	// Check if the IA_G (interrupt active) bit is set
1270:../LSM9DS1_Driver.c **** 	if (intSrc & (1<<6))
 5252              		.loc 1 1270 0
 5253 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5254 0014 03F04003 		and	r3, r3, #64
 5255 0018 002B     		cmp	r3, #0
 5256 001a 04D0     		beq	.L226
1271:../LSM9DS1_Driver.c **** 	{
1272:../LSM9DS1_Driver.c **** 		return (intSrc & 0x3F);
 5257              		.loc 1 1272 0
 5258 001c FB79     		ldrb	r3, [r7, #7]
 5259 001e 03F03F03 		and	r3, r3, #63
 5260 0022 DBB2     		uxtb	r3, r3
 5261 0024 01E0     		b	.L227
 5262              	.L226:
1273:../LSM9DS1_Driver.c **** 	}
1274:../LSM9DS1_Driver.c **** 
1275:../LSM9DS1_Driver.c **** 	return 0;
 5263              		.loc 1 1275 0
 5264 0026 4FF00003 		mov	r3, #0
 5265              	.L227:
1276:../LSM9DS1_Driver.c **** }
 5266              		.loc 1 1276 0
 5267 002a 1846     		mov	r0, r3
 5268 002c 07F10807 		add	r7, r7, #8
 5269 0030 BD46     		mov	sp, r7
 5270 0032 80BD     		pop	{r7, pc}
 5271              		.cfi_endproc
 5272              	.LFE172:
 5274              		.section	.text.configMagInt,"ax",%progbits
 5275              		.align	2
 5276              		.global	configMagInt
 5277              		.thumb
 5278              		.thumb_func
 5280              	configMagInt:
 5281              	.LFB173:
1277:../LSM9DS1_Driver.c **** 
1278:../LSM9DS1_Driver.c **** 
1279:../LSM9DS1_Driver.c **** void configMagInt(uint8_t generator, h_lactive activeLow, bool latch)
1280:../LSM9DS1_Driver.c **** {
 5282              		.loc 1 1280 0
 5283              		.cfi_startproc
 5284              		@ args = 0, pretend = 0, frame = 16
 5285              		@ frame_needed = 1, uses_anonymous_args = 0
 5286 0000 80B5     		push	{r7, lr}
 5287              	.LCFI162:
 5288              		.cfi_def_cfa_offset 8
 5289              		.cfi_offset 7, -8
 5290              		.cfi_offset 14, -4
 5291 0002 84B0     		sub	sp, sp, #16
 5292              	.LCFI163:
 5293              		.cfi_def_cfa_offset 24
 5294 0004 00AF     		add	r7, sp, #0
 5295              	.LCFI164:
 5296              		.cfi_def_cfa_register 7
 5297 0006 1346     		mov	r3, r2
 5298 0008 0246     		mov	r2, r0
 5299 000a FA71     		strb	r2, [r7, #7]
 5300 000c 0A46     		mov	r2, r1
 5301 000e BA71     		strb	r2, [r7, #6]
 5302 0010 7B71     		strb	r3, [r7, #5]
1281:../LSM9DS1_Driver.c **** 	// Mask out non-generator bits (0-4)
1282:../LSM9DS1_Driver.c **** 	uint8_t config = (generator & 0xE0);
 5303              		.loc 1 1282 0
 5304 0012 FB79     		ldrb	r3, [r7, #7]
 5305 0014 23F01F03 		bic	r3, r3, #31
 5306 0018 FB73     		strb	r3, [r7, #15]
1283:../LSM9DS1_Driver.c **** 	// IEA bit is 0 for active-low, 1 for active-high.
1284:../LSM9DS1_Driver.c **** 	if (activeLow == INT_ACTIVE_HIGH) config |= (1<<2);
 5307              		.loc 1 1284 0
 5308 001a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 5309 001c 002B     		cmp	r3, #0
 5310 001e 03D1     		bne	.L229
 5311              		.loc 1 1284 0 is_stmt 0 discriminator 1
 5312 0020 FB7B     		ldrb	r3, [r7, #15]
 5313 0022 43F00403 		orr	r3, r3, #4
 5314 0026 FB73     		strb	r3, [r7, #15]
 5315              	.L229:
1285:../LSM9DS1_Driver.c **** 	// IEL bit is 0 for latched, 1 for not-latched
1286:../LSM9DS1_Driver.c **** 	if (!latch) config |= (1<<1);
 5316              		.loc 1 1286 0 is_stmt 1
 5317 0028 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 5318 002a 002B     		cmp	r3, #0
 5319 002c 03D1     		bne	.L230
 5320              		.loc 1 1286 0 is_stmt 0 discriminator 1
 5321 002e FB7B     		ldrb	r3, [r7, #15]
 5322 0030 43F00203 		orr	r3, r3, #2
 5323 0034 FB73     		strb	r3, [r7, #15]
 5324              	.L230:
1287:../LSM9DS1_Driver.c **** 	// As long as we have at least 1 generator, enable the interrupt
1288:../LSM9DS1_Driver.c **** 	if (generator != 0) config |= (1<<0);
 5325              		.loc 1 1288 0 is_stmt 1
 5326 0036 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5327 0038 002B     		cmp	r3, #0
 5328 003a 03D0     		beq	.L231
 5329              		.loc 1 1288 0 is_stmt 0 discriminator 1
 5330 003c FB7B     		ldrb	r3, [r7, #15]
 5331 003e 43F00103 		orr	r3, r3, #1
 5332 0042 FB73     		strb	r3, [r7, #15]
 5333              	.L231:
1289:../LSM9DS1_Driver.c **** 
1290:../LSM9DS1_Driver.c **** 	mWriteByte(INT_CFG_M, config);
 5334              		.loc 1 1290 0 is_stmt 1
 5335 0044 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5336 0046 4FF03000 		mov	r0, #48
 5337 004a 1946     		mov	r1, r3
 5338 004c FFF7FEFF 		bl	mWriteByte
1291:../LSM9DS1_Driver.c **** }
 5339              		.loc 1 1291 0
 5340 0050 07F11007 		add	r7, r7, #16
 5341 0054 BD46     		mov	sp, r7
 5342 0056 80BD     		pop	{r7, pc}
 5343              		.cfi_endproc
 5344              	.LFE173:
 5346              		.section	.text.configMagThs,"ax",%progbits
 5347              		.align	2
 5348              		.global	configMagThs
 5349              		.thumb
 5350              		.thumb_func
 5352              	configMagThs:
 5353              	.LFB174:
1292:../LSM9DS1_Driver.c **** 
1293:../LSM9DS1_Driver.c **** 
1294:../LSM9DS1_Driver.c **** void configMagThs(uint16_t threshold)
1295:../LSM9DS1_Driver.c **** {
 5354              		.loc 1 1295 0
 5355              		.cfi_startproc
 5356              		@ args = 0, pretend = 0, frame = 8
 5357              		@ frame_needed = 1, uses_anonymous_args = 0
 5358 0000 80B5     		push	{r7, lr}
 5359              	.LCFI165:
 5360              		.cfi_def_cfa_offset 8
 5361              		.cfi_offset 7, -8
 5362              		.cfi_offset 14, -4
 5363 0002 82B0     		sub	sp, sp, #8
 5364              	.LCFI166:
 5365              		.cfi_def_cfa_offset 16
 5366 0004 00AF     		add	r7, sp, #0
 5367              	.LCFI167:
 5368              		.cfi_def_cfa_register 7
 5369 0006 0346     		mov	r3, r0
 5370 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1296:../LSM9DS1_Driver.c **** 	// Write high eight bits of [threshold] to INT_THS_H_M
1297:../LSM9DS1_Driver.c **** 	mWriteByte(INT_THS_H_M, (uint8_t)((threshold & 0x7F00) >> 8));
 5371              		.loc 1 1297 0
 5372 000a FB88     		ldrh	r3, [r7, #6]
 5373 000c 03F4FE43 		and	r3, r3, #32512
 5374 0010 4FEA2323 		asr	r3, r3, #8
 5375 0014 DBB2     		uxtb	r3, r3
 5376 0016 4FF03300 		mov	r0, #51
 5377 001a 1946     		mov	r1, r3
 5378 001c FFF7FEFF 		bl	mWriteByte
1298:../LSM9DS1_Driver.c **** 	// Write low eight bits of [threshold] to INT_THS_L_M
1299:../LSM9DS1_Driver.c **** 	mWriteByte(INT_THS_L_M, (uint8_t)(threshold & 0x00FF));
 5379              		.loc 1 1299 0
 5380 0020 FB88     		ldrh	r3, [r7, #6]	@ movhi
 5381 0022 DBB2     		uxtb	r3, r3
 5382 0024 4FF03200 		mov	r0, #50
 5383 0028 1946     		mov	r1, r3
 5384 002a FFF7FEFF 		bl	mWriteByte
1300:../LSM9DS1_Driver.c **** }
 5385              		.loc 1 1300 0
 5386 002e 07F10807 		add	r7, r7, #8
 5387 0032 BD46     		mov	sp, r7
 5388 0034 80BD     		pop	{r7, pc}
 5389              		.cfi_endproc
 5390              	.LFE174:
 5392 0036 00BF     		.section	.text.getMagIntSrc,"ax",%progbits
 5393              		.align	2
 5394              		.global	getMagIntSrc
 5395              		.thumb
 5396              		.thumb_func
 5398              	getMagIntSrc:
 5399              	.LFB175:
1301:../LSM9DS1_Driver.c **** 
1302:../LSM9DS1_Driver.c **** uint8_t getMagIntSrc(void)
1303:../LSM9DS1_Driver.c **** {
 5400              		.loc 1 1303 0
 5401              		.cfi_startproc
 5402              		@ args = 0, pretend = 0, frame = 8
 5403              		@ frame_needed = 1, uses_anonymous_args = 0
 5404 0000 80B5     		push	{r7, lr}
 5405              	.LCFI168:
 5406              		.cfi_def_cfa_offset 8
 5407              		.cfi_offset 7, -8
 5408              		.cfi_offset 14, -4
 5409 0002 82B0     		sub	sp, sp, #8
 5410              	.LCFI169:
 5411              		.cfi_def_cfa_offset 16
 5412 0004 00AF     		add	r7, sp, #0
 5413              	.LCFI170:
 5414              		.cfi_def_cfa_register 7
1304:../LSM9DS1_Driver.c **** 	uint8_t intSrc = mReadByte(INT_SRC_M);
 5415              		.loc 1 1304 0
 5416 0006 4FF03000 		mov	r0, #48
 5417 000a FFF7FEFF 		bl	mReadByte
 5418 000e 0346     		mov	r3, r0
 5419 0010 FB71     		strb	r3, [r7, #7]
1305:../LSM9DS1_Driver.c **** 
1306:../LSM9DS1_Driver.c **** 	// Check if the INT (interrupt active) bit is set
1307:../LSM9DS1_Driver.c **** 	if (intSrc & (1<<0))
 5420              		.loc 1 1307 0
 5421 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5422 0014 03F00103 		and	r3, r3, #1
 5423 0018 002B     		cmp	r3, #0
 5424 001a 04D0     		beq	.L234
1308:../LSM9DS1_Driver.c **** 	{
1309:../LSM9DS1_Driver.c **** 		return (intSrc & 0xFE);
 5425              		.loc 1 1309 0
 5426 001c FB79     		ldrb	r3, [r7, #7]
 5427 001e 23F00103 		bic	r3, r3, #1
 5428 0022 DBB2     		uxtb	r3, r3
 5429 0024 01E0     		b	.L235
 5430              	.L234:
1310:../LSM9DS1_Driver.c **** 	}
1311:../LSM9DS1_Driver.c **** 
1312:../LSM9DS1_Driver.c **** 	return 0;
 5431              		.loc 1 1312 0
 5432 0026 4FF00003 		mov	r3, #0
 5433              	.L235:
1313:../LSM9DS1_Driver.c **** }
 5434              		.loc 1 1313 0
 5435 002a 1846     		mov	r0, r3
 5436 002c 07F10807 		add	r7, r7, #8
 5437 0030 BD46     		mov	sp, r7
 5438 0032 80BD     		pop	{r7, pc}
 5439              		.cfi_endproc
 5440              	.LFE175:
 5442              		.section	.text.sleepGyro,"ax",%progbits
 5443              		.align	2
 5444              		.global	sleepGyro
 5445              		.thumb
 5446              		.thumb_func
 5448              	sleepGyro:
 5449              	.LFB176:
1314:../LSM9DS1_Driver.c **** 
1315:../LSM9DS1_Driver.c **** void sleepGyro(bool enable)
1316:../LSM9DS1_Driver.c **** {
 5450              		.loc 1 1316 0
 5451              		.cfi_startproc
 5452              		@ args = 0, pretend = 0, frame = 16
 5453              		@ frame_needed = 1, uses_anonymous_args = 0
 5454 0000 80B5     		push	{r7, lr}
 5455              	.LCFI171:
 5456              		.cfi_def_cfa_offset 8
 5457              		.cfi_offset 7, -8
 5458              		.cfi_offset 14, -4
 5459 0002 84B0     		sub	sp, sp, #16
 5460              	.LCFI172:
 5461              		.cfi_def_cfa_offset 24
 5462 0004 00AF     		add	r7, sp, #0
 5463              	.LCFI173:
 5464              		.cfi_def_cfa_register 7
 5465 0006 0346     		mov	r3, r0
 5466 0008 FB71     		strb	r3, [r7, #7]
1317:../LSM9DS1_Driver.c **** 	uint8_t temp = xgReadByte(CTRL_REG9);
 5467              		.loc 1 1317 0
 5468 000a 4FF02300 		mov	r0, #35
 5469 000e FFF7FEFF 		bl	xgReadByte
 5470 0012 0346     		mov	r3, r0
 5471 0014 FB73     		strb	r3, [r7, #15]
1318:../LSM9DS1_Driver.c **** 	if (enable) temp |= (1<<6);
 5472              		.loc 1 1318 0
 5473 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5474 0018 002B     		cmp	r3, #0
 5475 001a 04D0     		beq	.L237
 5476              		.loc 1 1318 0 is_stmt 0 discriminator 1
 5477 001c FB7B     		ldrb	r3, [r7, #15]
 5478 001e 43F04003 		orr	r3, r3, #64
 5479 0022 FB73     		strb	r3, [r7, #15]
 5480 0024 03E0     		b	.L238
 5481              	.L237:
1319:../LSM9DS1_Driver.c **** 	else temp &= ~(1<<6);
 5482              		.loc 1 1319 0 is_stmt 1
 5483 0026 FB7B     		ldrb	r3, [r7, #15]
 5484 0028 23F04003 		bic	r3, r3, #64
 5485 002c FB73     		strb	r3, [r7, #15]
 5486              	.L238:
1320:../LSM9DS1_Driver.c **** 	xgWriteByte(CTRL_REG9, temp);
 5487              		.loc 1 1320 0
 5488 002e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5489 0030 4FF02300 		mov	r0, #35
 5490 0034 1946     		mov	r1, r3
 5491 0036 FFF7FEFF 		bl	xgWriteByte
1321:../LSM9DS1_Driver.c **** }
 5492              		.loc 1 1321 0
 5493 003a 07F11007 		add	r7, r7, #16
 5494 003e BD46     		mov	sp, r7
 5495 0040 80BD     		pop	{r7, pc}
 5496              		.cfi_endproc
 5497              	.LFE176:
 5499 0042 00BF     		.section	.text.getFIFOSamples,"ax",%progbits
 5500              		.align	2
 5501              		.global	getFIFOSamples
 5502              		.thumb
 5503              		.thumb_func
 5505              	getFIFOSamples:
 5506              	.LFB177:
1322:../LSM9DS1_Driver.c **** 
1323:../LSM9DS1_Driver.c **** 
1324:../LSM9DS1_Driver.c **** uint8_t getFIFOSamples(void)
1325:../LSM9DS1_Driver.c **** {
 5507              		.loc 1 1325 0
 5508              		.cfi_startproc
 5509              		@ args = 0, pretend = 0, frame = 0
 5510              		@ frame_needed = 1, uses_anonymous_args = 0
 5511 0000 80B5     		push	{r7, lr}
 5512              	.LCFI174:
 5513              		.cfi_def_cfa_offset 8
 5514              		.cfi_offset 7, -8
 5515              		.cfi_offset 14, -4
 5516 0002 00AF     		add	r7, sp, #0
 5517              	.LCFI175:
 5518              		.cfi_def_cfa_register 7
1326:../LSM9DS1_Driver.c **** 	return (xgReadByte(FIFO_SRC) & 0x3F);
 5519              		.loc 1 1326 0
 5520 0004 4FF02F00 		mov	r0, #47
 5521 0008 FFF7FEFF 		bl	xgReadByte
 5522 000c 0346     		mov	r3, r0
 5523 000e 03F03F03 		and	r3, r3, #63
 5524 0012 DBB2     		uxtb	r3, r3
1327:../LSM9DS1_Driver.c **** }
 5525              		.loc 1 1327 0
 5526 0014 1846     		mov	r0, r3
 5527 0016 80BD     		pop	{r7, pc}
 5528              		.cfi_endproc
 5529              	.LFE177:
 5531              		.text
 5532              	.Letext0:
 5533              		.file 2 "c:\\dave-3.1.10\\arm-gcc\\bin\\../lib/gcc/arm-none-eabi/4.7.4/../../../../arm-none-eabi/i
 5534              		.file 3 "../LSM9DS1_Types.h"
 5535              		.file 4 "C:\\DAVE-3.1.10\\eclipse\\/../CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 5536              		.file 5 "C:\\DAVE3_workspace\\mojWorkspace\\BachelorLSM9DS1\\Dave\\Generated\\inc\\DAVESupport/../
 5537              		.file 6 "C:\\DAVE3_workspace\\mojWorkspace\\BachelorLSM9DS1\\Dave\\Generated\\inc\\DAVESupport/../
 5538              		.file 7 "C:\\DAVE3_workspace\\mojWorkspace\\BachelorLSM9DS1\\Dave\\Generated\\inc\\DAVESupport/../
 5539              		.file 8 "../LSM9DS1_Driver.h"
 5540              		.file 9 "C:\\DAVE-3.1.10\\eclipse\\/../CMSIS/Include/core_cm4.h"
 5541              		.file 10 "C:\\DAVE3_workspace\\mojWorkspace\\BachelorLSM9DS1\\Dave\\Generated\\inc\\DAVESupport/..
DEFINED SYMBOLS
                            *ABS*:00000000 LSM9DS1_Driver.c
                            *COM*:00000004 TimerId
                            *COM*:00000004 Status
                            *COM*:00000004 WriteTimerId
                            *COM*:00000004 WriteTimerStatus
                            *COM*:00000004 TimerIdReadBytes
                            *COM*:00000004 StatusReadBytes
                            *COM*:00000028 settings
                            *COM*:0000000c gBias
                            *COM*:0000000c aBias
                            *COM*:0000000c mBias
                            *COM*:00000006 gBiasRaw
                            *COM*:00000006 aBiasRaw
                            *COM*:00000006 mBiasRaw
                            *COM*:00000001 _autoCalc
                            *COM*:00000001 _mAddress
                            *COM*:00000001 _xgAddress
                            *COM*:00000004 gRes
                            *COM*:00000004 aRes
                            *COM*:00000004 mRes
                            *COM*:00000002 gx
                            *COM*:00000002 gy
                            *COM*:00000002 gz
                            *COM*:00000002 ax
                            *COM*:00000002 ay
                            *COM*:00000002 az
                            *COM*:00000002 mx
                            *COM*:00000002 my
                            *COM*:00000002 mz
                            *COM*:00000002 temperature
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:53     .data:00000000 magSensitivity
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:50     .data:00000000 $d
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:59     .text.init:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:64     .text.init:00000000 init
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:340    .text.begin:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:345    .text.begin:00000000 begin
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:454    .text.constrainScales:00000000 constrainScales
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:614    .text.calcgRes:00000000 calcgRes
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:698    .text.calcmRes:00000000 calcmRes
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:656    .text.calcaRes:00000000 calcaRes
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:560    .text.initI2C:00000000 initI2C
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:587    .text.initSPI:00000000 initSPI
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:1021   .text.mReadByte:00000000 mReadByte
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:1072   .text.xgReadByte:00000000 xgReadByte
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:1123   .text.initGyro:00000000 initGyro
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:1519   .text.initAccel:00000000 initAccel
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:1699   .text.initMag:00000000 initMag
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:449    .text.constrainScales:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:555    .text.initI2C:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:582    .text.initSPI:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:609    .text.calcgRes:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:646    .text.calcgRes:00000030 $d
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:651    .text.calcaRes:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:688    .text.calcaRes:00000030 $d
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:693    .text.calcmRes:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:723    .text.calcmRes:00000020 $d
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:738    .text.calcmRes:00000054 $t
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:785    .text.delay:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:790    .text.delay:00000000 delay
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:837    .text.I2CreadByte:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:842    .text.I2CreadByte:00000000 I2CreadByte
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:1016   .text.mReadByte:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:1067   .text.xgReadByte:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:1118   .text.initGyro:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:1346   .text.xgWriteByte:00000000 xgWriteByte
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:1341   .text.xgWriteByte:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:1397   .text.I2CwriteByte:00000000 I2CwriteByte
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:1392   .text.I2CwriteByte:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:1514   .text.initAccel:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:1694   .text.initMag:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:1864   .text.mWriteByte:00000000 mWriteByte
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:1859   .text.mWriteByte:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:1911   .text.enableFIFO:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:1916   .text.enableFIFO:00000000 enableFIFO
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:1968   .text.setFIFO:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:1973   .text.setFIFO:00000000 setFIFO
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:2024   .text.calibrate:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:2029   .text.calibrate:00000000 calibrate
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:2388   .text.readGyro1:00000000 readGyro1
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:2551   .text.readAccel1:00000000 readAccel1
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:4143   .text.calcGyro:00000000 calcGyro
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:4197   .text.calcAccel:00000000 calcAccel
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:2276   .text.xgReadBytes:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:2281   .text.xgReadBytes:00000000 xgReadBytes
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:2922   .text.I2CreadBytes:00000000 I2CreadBytes
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:2351   .text.SPIreadBytes:00000000 SPIreadBytes
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:2346   .text.SPIreadBytes:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:2383   .text.readGyro1:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:2546   .text.readAccel1:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:2701   .text.readAccelToSensor:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:2706   .text.readAccelToSensor:00000000 readAccelToSensor
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:2917   .text.I2CreadBytes:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:3137   .text.magAvailable:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:3142   .text.magAvailable:00000000 magAvailable
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:3184   .text.readMag1:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:3189   .text.readMag1:00000000 readMag1
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:3279   .text.calibrateMag:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:3284   .text.calibrateMag:00000000 calibrateMag
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:3517   .text.calcMag:00000000 calcMag
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:3571   .text.magOffset:00000000 magOffset
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:3512   .text.calcMag:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:3566   .text.magOffset:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:3638   .text.accelAvailable:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:3643   .text.accelAvailable:00000000 accelAvailable
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:3678   .text.gyroAvailable:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:3683   .text.gyroAvailable:00000000 gyroAvailable
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:3719   .text.tempAvailable:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:3724   .text.tempAvailable:00000000 tempAvailable
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:3760   .text.readAccel:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:3765   .text.readAccel:00000000 readAccel
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:3863   .text.readMag:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:3868   .text.readMag:00000000 readMag
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:3949   .text.readTemp:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:3954   .text.readTemp:00000000 readTemp
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:4035   .text.readGyro:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:4040   .text.readGyro:00000000 readGyro
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:4138   .text.calcGyro:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:4192   .text.calcAccel:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:4246   .text.setGyroScale:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:4251   .text.setGyroScale:00000000 setGyroScale
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:4334   .text.setAccelScale:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:4339   .text.setAccelScale:00000000 setAccelScale
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:4435   .text.setMagScale:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:4440   .text.setMagScale:00000000 setMagScale
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:4536   .text.setGyroODR:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:4541   .text.setGyroODR:00000000 setGyroODR
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:4605   .text.setAccelODR:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:4610   .text.setAccelODR:00000000 setAccelODR
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:4674   .text.setMagODR:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:4679   .text.setMagODR:00000000 setMagODR
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:4736   .text.configInt:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:4741   .text.configInt:00000000 configInt
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:4816   .text.configInactivity:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:4821   .text.configInactivity:00000000 configInactivity
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:4878   .text.getInactivity:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:4883   .text.getInactivity:00000000 getInactivity
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:4920   .text.configAccelInt:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:4925   .text.configAccelInt:00000000 configAccelInt
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:4971   .text.configAccelThs:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:4976   .text.configAccelThs:00000000 configAccelThs
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:5031   .text.getAccelIntSrc:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:5036   .text.getAccelIntSrc:00000000 getAccelIntSrc
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:5081   .text.configGyroInt:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:5086   .text.configGyroInt:00000000 configGyroInt
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:5143   .text.configGyroThs:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:5148   .text.configGyroThs:00000000 configGyroThs
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:5225   .text.getGyroIntSrc:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:5230   .text.getGyroIntSrc:00000000 getGyroIntSrc
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:5275   .text.configMagInt:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:5280   .text.configMagInt:00000000 configMagInt
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:5347   .text.configMagThs:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:5352   .text.configMagThs:00000000 configMagThs
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:5393   .text.getMagIntSrc:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:5398   .text.getMagIntSrc:00000000 getMagIntSrc
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:5443   .text.sleepGyro:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:5448   .text.sleepGyro:00000000 sleepGyro
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:5500   .text.getFIFOSamples:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccIAgk3Y.s:5505   .text.getFIFOSamples:00000000 getFIFOSamples
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.35166846b5321d4273ad8c4248893ac3
                           .group:00000000 wm4.LSM9DS1_Driver.h.9.225085f752270af24a0df342ed7d3479
                           .group:00000000 wm4.LSM9DS1_Registers.h.9.72af380d6da01de607f77d245bf32825
                           .group:00000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:00000000 wm4.features.h.22.b72b3baab2bb2eab3661375590100b6b
                           .group:00000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:00000000 wm4._ansi.h.23.7aefdac4826acebbfc9f3822a0aeb14c
                           .group:00000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:00000000 wm4.XMC4500.h.45.215f4b8c79f46c7645c15373868d08c0
                           .group:00000000 wm4.core_cm4.h.47.41af406cb4cda82c972f112a9cd0a024
                           .group:00000000 wm4.core_cmInstr.h.39.3d3d1b4a79aef37532666dc6ee87c6ac
                           .group:00000000 wm4.core_cm4_simd.h.43.b5d1d38735af6366227b4256d330cf13
                           .group:00000000 wm4.core_cm4.h.178.e5ef5ce66d198d7f00f9d0076e267c41
                           .group:00000000 wm4.system_XMC4500.h.29.827f68baa362c84f2abae4ab67dde7c9
                           .group:00000000 wm4.XMC4500.h.198.8e022f279ff353ed081df898dc7b9cf3
                           .group:00000000 wm4.stddef.h.40.50cf36416e06376af8a9dca28536f2e4
                           .group:00000000 wm4.types.h.60.e75c47576398c648cdcf9000ace5e3d8
                           .group:00000000 wm4.MULTIPLEXER.h.46.4a863fbae1c79f0db26da3ce2dc30d02
                           .group:00000000 wm4.CCU8PWMLIB.h.74.725ec81203769525cc7a424597055f47
                           .group:00000000 wm4.MOTORLIB.h.62.951091d95913dd2ff36d761323a1771d
                           .group:00000000 wm4.DBG001.h.116.d6d9e7459a0faa3905c97c1d2edb339d
                           .group:00000000 wm4.uc_id.h.35.fa57ecd9f559d2767f56c96da2848c12
                           .group:00000000 wm4.CLK001_Const.h.50.e5e9c2ddc89f4cc9e7b93e9648fa94e4
                           .group:00000000 wm4.CLK001_Conf.h.81.82a8db895dc146da001475dd68223522
                           .group:00000000 wm4.SYSTM001.h.64.6ecb31c49bc3e7691644fdcdfc11b5cd
                           .group:00000000 wm4.Usic.h.58.a3e6728d1d20f5a5e52f483a06098d7b
                           .group:00000000 wm4.I2C001.h.97.5277d52889d6c741e048ea45ee1277b5
                           .group:00000000 wm4.I2C001_Conf.h.58.e471e519f7471a50493b6f4fe912ee0d
                           .group:00000000 wm4.NVIC002_Conf.h.63.74cd705315f747fa337668af570b2988
                           .group:00000000 wm4.stdio.h.31.f48311dde756a2aec27351b58a280fb9
                           .group:00000000 wm4.stddef.h.161.e50ff8a9d5d1abbc15641da28ac571bf
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4._default_types.h.6.5e12cd604db8ce00b62bb2f02708eaf3
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4.stddef.h.161.c6104a0666cf681b6269ddc9b4f516d4
                           .group:00000000 wm4.reent.h.16.9e42f0e588b85e70b2bf6572af57ce64
                           .group:00000000 wm4.types.h.23.0d949686bbcadd1621462d4fa1f884f9
                           .group:00000000 wm4.types.h.2.e9cec8c90ab35f77d9f499e06ae02400
                           .group:00000000 wm4.types.h.80.1f2c84c0d57dd52dd9936095d9ac218e
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.63.dfdea6580b080784d08faace69b6ed76
                           .group:00000000 wm4.inttypes.h.14.da8ab5c14bc76feb3bf694db03b8ec46
                           .group:00000000 wm4.inttypes.h.20.54b7c434bb63171d5145327a6d429f51
                           .group:00000000 wm4.math.h.35.cc9264b0ced3bd063c5784e64e89cf51
                           .group:00000000 wm4.stdlib.h.13.603ed7eb09a1561ab06840b7c0fcff58
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.53.c69c7609933ff56d59c757cec2d13230

UNDEFINED SYMBOLS
I2C001_Handle0
I2C001_WriteData
I2C001_ReadData
__aeabi_f2d
__aeabi_ddiv
__aeabi_d2iz
__aeabi_d2f
ceil
round
